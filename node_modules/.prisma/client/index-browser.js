
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Tbl_bebeScalarFieldEnum = {
  id_bebe: 'id_bebe',
  nome: 'nome',
  data_nascimento: 'data_nascimento',
  peso: 'peso',
  altura: 'altura',
  certidao_nascimento: 'certidao_nascimento',
  cpf: 'cpf',
  cartao_medico: 'cartao_medico',
  imagem_certidao: 'imagem_certidao',
  id_sexo: 'id_sexo',
  id_cep: 'id_cep',
  id_sangue: 'id_sangue'
};

exports.Prisma.Tbl_cepScalarFieldEnum = {
  id_cep: 'id_cep',
  cep: 'cep',
  logradouro: 'logradouro',
  cidade: 'cidade',
  uf: 'uf',
  id_responsavel: 'id_responsavel'
};

exports.Prisma.Tbl_chatScalarFieldEnum = {
  id_chat: 'id_chat',
  id_mensagem: 'id_mensagem',
  id_user: 'id_user'
};

exports.Prisma.Tbl_clinicaScalarFieldEnum = {
  id_clinica: 'id_clinica',
  nome: 'nome',
  cnpj: 'cnpj',
  telefone: 'telefone',
  email: 'email',
  id_cep: 'id_cep',
  id_user: 'id_user'
};

exports.Prisma.Tbl_especialidadeScalarFieldEnum = {
  id_especialidade: 'id_especialidade',
  especialidade: 'especialidade'
};

exports.Prisma.Tbl_especialidade_clinicaScalarFieldEnum = {
  id: 'id',
  id_clinica: 'id_clinica',
  id_especialidade: 'id_especialidade'
};

exports.Prisma.Tbl_especialidade_medicoScalarFieldEnum = {
  id: 'id',
  id_medico: 'id_medico',
  id_especialidade: 'id_especialidade'
};

exports.Prisma.Tbl_medicoScalarFieldEnum = {
  id_medico: 'id_medico',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  crm: 'crm',
  cpf: 'cpf',
  foto: 'foto',
  id_sexo: 'id_sexo',
  id_user: 'id_user'
};

exports.Prisma.Tbl_messagerScalarFieldEnum = {
  id_mensagem: 'id_mensagem',
  conteudo: 'conteudo',
  id_tipo_mensagem: 'id_tipo_mensagem',
  id_status: 'id_status'
};

exports.Prisma.Tbl_responsavelScalarFieldEnum = {
  id_responsavel: 'id_responsavel',
  nome: 'nome',
  data_nascimento: 'data_nascimento',
  cpf: 'cpf',
  telefone: 'telefone',
  arquivo: 'arquivo',
  cartao_medico: 'cartao_medico',
  cep: 'cep',
  id_sexo: 'id_sexo',
  id_user: 'id_user',
  id_cep: 'id_cep'
};

exports.Prisma.Tbl_responsavel_bebeScalarFieldEnum = {
  id_bebe_responsavel: 'id_bebe_responsavel',
  id_bebe: 'id_bebe',
  id_responsavel: 'id_responsavel'
};

exports.Prisma.Tbl_rotinaScalarFieldEnum = {
  id_base: 'id_base',
  titulo: 'titulo',
  cor: 'cor',
  data_rotina: 'data_rotina',
  hora: 'hora',
  descricao: 'descricao',
  id_user: 'id_user',
  id_rotina_base: 'id_rotina_base'
};

exports.Prisma.Tbl_rotina_baseScalarFieldEnum = {
  id_rotina_base: 'id_rotina_base',
  titulo: 'titulo',
  cor: 'cor',
  data_rotina: 'data_rotina',
  hora: 'hora',
  descricao: 'descricao'
};

exports.Prisma.Tbl_sangueScalarFieldEnum = {
  id_sangue: 'id_sangue',
  tipo_sanguineo: 'tipo_sanguineo'
};

exports.Prisma.Tbl_sexoScalarFieldEnum = {
  id_sexo: 'id_sexo',
  sexo: 'sexo'
};

exports.Prisma.Tbl_status_messagerScalarFieldEnum = {
  id_status: 'id_status',
  status_messagem: 'status_messagem'
};

exports.Prisma.Tbl_type_messagerScalarFieldEnum = {
  id_tipo_mensagem: 'id_tipo_mensagem',
  tipo_mensagem: 'tipo_mensagem'
};

exports.Prisma.Tbl_type_userScalarFieldEnum = {
  id_tipo: 'id_tipo',
  tipo: 'tipo'
};

exports.Prisma.Tbl_userScalarFieldEnum = {
  id_user: 'id_user',
  email: 'email',
  senha: 'senha',
  id_tipo: 'id_tipo'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.tbl_bebeOrderByRelevanceFieldEnum = {
  nome: 'nome',
  certidao_nascimento: 'certidao_nascimento',
  cpf: 'cpf',
  cartao_medico: 'cartao_medico',
  imagem_certidao: 'imagem_certidao'
};

exports.Prisma.tbl_cepOrderByRelevanceFieldEnum = {
  cep: 'cep',
  logradouro: 'logradouro',
  cidade: 'cidade',
  uf: 'uf'
};

exports.Prisma.tbl_clinicaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  cnpj: 'cnpj',
  telefone: 'telefone',
  email: 'email'
};

exports.Prisma.tbl_especialidadeOrderByRelevanceFieldEnum = {
  especialidade: 'especialidade'
};

exports.Prisma.tbl_medicoOrderByRelevanceFieldEnum = {
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  crm: 'crm',
  cpf: 'cpf',
  foto: 'foto'
};

exports.Prisma.tbl_messagerOrderByRelevanceFieldEnum = {
  conteudo: 'conteudo'
};

exports.Prisma.tbl_responsavelOrderByRelevanceFieldEnum = {
  nome: 'nome',
  cpf: 'cpf',
  telefone: 'telefone',
  arquivo: 'arquivo',
  cartao_medico: 'cartao_medico',
  cep: 'cep'
};

exports.Prisma.tbl_rotinaOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  cor: 'cor',
  descricao: 'descricao'
};

exports.Prisma.tbl_rotina_baseOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  cor: 'cor',
  descricao: 'descricao'
};

exports.Prisma.tbl_sangueOrderByRelevanceFieldEnum = {
  tipo_sanguineo: 'tipo_sanguineo'
};

exports.Prisma.tbl_sexoOrderByRelevanceFieldEnum = {
  sexo: 'sexo'
};

exports.Prisma.tbl_status_messagerOrderByRelevanceFieldEnum = {
  status_messagem: 'status_messagem'
};

exports.Prisma.tbl_type_messagerOrderByRelevanceFieldEnum = {
  tipo_mensagem: 'tipo_mensagem'
};

exports.Prisma.tbl_type_userOrderByRelevanceFieldEnum = {
  tipo: 'tipo'
};

exports.Prisma.tbl_userOrderByRelevanceFieldEnum = {
  email: 'email',
  senha: 'senha'
};


exports.Prisma.ModelName = {
  tbl_bebe: 'tbl_bebe',
  tbl_cep: 'tbl_cep',
  tbl_chat: 'tbl_chat',
  tbl_clinica: 'tbl_clinica',
  tbl_especialidade: 'tbl_especialidade',
  tbl_especialidade_clinica: 'tbl_especialidade_clinica',
  tbl_especialidade_medico: 'tbl_especialidade_medico',
  tbl_medico: 'tbl_medico',
  tbl_messager: 'tbl_messager',
  tbl_responsavel: 'tbl_responsavel',
  tbl_responsavel_bebe: 'tbl_responsavel_bebe',
  tbl_rotina: 'tbl_rotina',
  tbl_rotina_base: 'tbl_rotina_base',
  tbl_sangue: 'tbl_sangue',
  tbl_sexo: 'tbl_sexo',
  tbl_status_messager: 'tbl_status_messager',
  tbl_type_messager: 'tbl_type_messager',
  tbl_type_user: 'tbl_type_user',
  tbl_user: 'tbl_user'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
