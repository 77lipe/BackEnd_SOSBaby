
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tbl_bebe
 * 
 */
export type tbl_bebe = $Result.DefaultSelection<Prisma.$tbl_bebePayload>
/**
 * Model tbl_cep
 * 
 */
export type tbl_cep = $Result.DefaultSelection<Prisma.$tbl_cepPayload>
/**
 * Model tbl_chat
 * 
 */
export type tbl_chat = $Result.DefaultSelection<Prisma.$tbl_chatPayload>
/**
 * Model tbl_clinica
 * 
 */
export type tbl_clinica = $Result.DefaultSelection<Prisma.$tbl_clinicaPayload>
/**
 * Model tbl_especialidade
 * 
 */
export type tbl_especialidade = $Result.DefaultSelection<Prisma.$tbl_especialidadePayload>
/**
 * Model tbl_especialidade_clinica
 * 
 */
export type tbl_especialidade_clinica = $Result.DefaultSelection<Prisma.$tbl_especialidade_clinicaPayload>
/**
 * Model tbl_especialidade_medico
 * 
 */
export type tbl_especialidade_medico = $Result.DefaultSelection<Prisma.$tbl_especialidade_medicoPayload>
/**
 * Model tbl_medico
 * 
 */
export type tbl_medico = $Result.DefaultSelection<Prisma.$tbl_medicoPayload>
/**
 * Model tbl_messager
 * 
 */
export type tbl_messager = $Result.DefaultSelection<Prisma.$tbl_messagerPayload>
/**
 * Model tbl_responsavel
 * 
 */
export type tbl_responsavel = $Result.DefaultSelection<Prisma.$tbl_responsavelPayload>
/**
 * Model tbl_responsavel_bebe
 * 
 */
export type tbl_responsavel_bebe = $Result.DefaultSelection<Prisma.$tbl_responsavel_bebePayload>
/**
 * Model tbl_rotina
 * 
 */
export type tbl_rotina = $Result.DefaultSelection<Prisma.$tbl_rotinaPayload>
/**
 * Model tbl_rotina_base
 * 
 */
export type tbl_rotina_base = $Result.DefaultSelection<Prisma.$tbl_rotina_basePayload>
/**
 * Model tbl_sangue
 * 
 */
export type tbl_sangue = $Result.DefaultSelection<Prisma.$tbl_sanguePayload>
/**
 * Model tbl_sexo
 * 
 */
export type tbl_sexo = $Result.DefaultSelection<Prisma.$tbl_sexoPayload>
/**
 * Model tbl_status_messager
 * 
 */
export type tbl_status_messager = $Result.DefaultSelection<Prisma.$tbl_status_messagerPayload>
/**
 * Model tbl_type_messager
 * 
 */
export type tbl_type_messager = $Result.DefaultSelection<Prisma.$tbl_type_messagerPayload>
/**
 * Model tbl_type_user
 * 
 */
export type tbl_type_user = $Result.DefaultSelection<Prisma.$tbl_type_userPayload>
/**
 * Model tbl_user
 * 
 */
export type tbl_user = $Result.DefaultSelection<Prisma.$tbl_userPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tbl_bebes
 * const tbl_bebes = await prisma.tbl_bebe.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tbl_bebes
   * const tbl_bebes = await prisma.tbl_bebe.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.tbl_bebe`: Exposes CRUD operations for the **tbl_bebe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_bebes
    * const tbl_bebes = await prisma.tbl_bebe.findMany()
    * ```
    */
  get tbl_bebe(): Prisma.tbl_bebeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_cep`: Exposes CRUD operations for the **tbl_cep** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_ceps
    * const tbl_ceps = await prisma.tbl_cep.findMany()
    * ```
    */
  get tbl_cep(): Prisma.tbl_cepDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_chat`: Exposes CRUD operations for the **tbl_chat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_chats
    * const tbl_chats = await prisma.tbl_chat.findMany()
    * ```
    */
  get tbl_chat(): Prisma.tbl_chatDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_clinica`: Exposes CRUD operations for the **tbl_clinica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_clinicas
    * const tbl_clinicas = await prisma.tbl_clinica.findMany()
    * ```
    */
  get tbl_clinica(): Prisma.tbl_clinicaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_especialidade`: Exposes CRUD operations for the **tbl_especialidade** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_especialidades
    * const tbl_especialidades = await prisma.tbl_especialidade.findMany()
    * ```
    */
  get tbl_especialidade(): Prisma.tbl_especialidadeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_especialidade_clinica`: Exposes CRUD operations for the **tbl_especialidade_clinica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_especialidade_clinicas
    * const tbl_especialidade_clinicas = await prisma.tbl_especialidade_clinica.findMany()
    * ```
    */
  get tbl_especialidade_clinica(): Prisma.tbl_especialidade_clinicaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_especialidade_medico`: Exposes CRUD operations for the **tbl_especialidade_medico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_especialidade_medicos
    * const tbl_especialidade_medicos = await prisma.tbl_especialidade_medico.findMany()
    * ```
    */
  get tbl_especialidade_medico(): Prisma.tbl_especialidade_medicoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_medico`: Exposes CRUD operations for the **tbl_medico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_medicos
    * const tbl_medicos = await prisma.tbl_medico.findMany()
    * ```
    */
  get tbl_medico(): Prisma.tbl_medicoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_messager`: Exposes CRUD operations for the **tbl_messager** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_messagers
    * const tbl_messagers = await prisma.tbl_messager.findMany()
    * ```
    */
  get tbl_messager(): Prisma.tbl_messagerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_responsavel`: Exposes CRUD operations for the **tbl_responsavel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_responsavels
    * const tbl_responsavels = await prisma.tbl_responsavel.findMany()
    * ```
    */
  get tbl_responsavel(): Prisma.tbl_responsavelDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_responsavel_bebe`: Exposes CRUD operations for the **tbl_responsavel_bebe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_responsavel_bebes
    * const tbl_responsavel_bebes = await prisma.tbl_responsavel_bebe.findMany()
    * ```
    */
  get tbl_responsavel_bebe(): Prisma.tbl_responsavel_bebeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_rotina`: Exposes CRUD operations for the **tbl_rotina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_rotinas
    * const tbl_rotinas = await prisma.tbl_rotina.findMany()
    * ```
    */
  get tbl_rotina(): Prisma.tbl_rotinaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_rotina_base`: Exposes CRUD operations for the **tbl_rotina_base** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_rotina_bases
    * const tbl_rotina_bases = await prisma.tbl_rotina_base.findMany()
    * ```
    */
  get tbl_rotina_base(): Prisma.tbl_rotina_baseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_sangue`: Exposes CRUD operations for the **tbl_sangue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_sangues
    * const tbl_sangues = await prisma.tbl_sangue.findMany()
    * ```
    */
  get tbl_sangue(): Prisma.tbl_sangueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_sexo`: Exposes CRUD operations for the **tbl_sexo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_sexos
    * const tbl_sexos = await prisma.tbl_sexo.findMany()
    * ```
    */
  get tbl_sexo(): Prisma.tbl_sexoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_status_messager`: Exposes CRUD operations for the **tbl_status_messager** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_status_messagers
    * const tbl_status_messagers = await prisma.tbl_status_messager.findMany()
    * ```
    */
  get tbl_status_messager(): Prisma.tbl_status_messagerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_type_messager`: Exposes CRUD operations for the **tbl_type_messager** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_type_messagers
    * const tbl_type_messagers = await prisma.tbl_type_messager.findMany()
    * ```
    */
  get tbl_type_messager(): Prisma.tbl_type_messagerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_type_user`: Exposes CRUD operations for the **tbl_type_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_type_users
    * const tbl_type_users = await prisma.tbl_type_user.findMany()
    * ```
    */
  get tbl_type_user(): Prisma.tbl_type_userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tbl_user`: Exposes CRUD operations for the **tbl_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_users
    * const tbl_users = await prisma.tbl_user.findMany()
    * ```
    */
  get tbl_user(): Prisma.tbl_userDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.16.2
   * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tbl_bebe: 'tbl_bebe',
    tbl_cep: 'tbl_cep',
    tbl_chat: 'tbl_chat',
    tbl_clinica: 'tbl_clinica',
    tbl_especialidade: 'tbl_especialidade',
    tbl_especialidade_clinica: 'tbl_especialidade_clinica',
    tbl_especialidade_medico: 'tbl_especialidade_medico',
    tbl_medico: 'tbl_medico',
    tbl_messager: 'tbl_messager',
    tbl_responsavel: 'tbl_responsavel',
    tbl_responsavel_bebe: 'tbl_responsavel_bebe',
    tbl_rotina: 'tbl_rotina',
    tbl_rotina_base: 'tbl_rotina_base',
    tbl_sangue: 'tbl_sangue',
    tbl_sexo: 'tbl_sexo',
    tbl_status_messager: 'tbl_status_messager',
    tbl_type_messager: 'tbl_type_messager',
    tbl_type_user: 'tbl_type_user',
    tbl_user: 'tbl_user'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "tbl_bebe" | "tbl_cep" | "tbl_chat" | "tbl_clinica" | "tbl_especialidade" | "tbl_especialidade_clinica" | "tbl_especialidade_medico" | "tbl_medico" | "tbl_messager" | "tbl_responsavel" | "tbl_responsavel_bebe" | "tbl_rotina" | "tbl_rotina_base" | "tbl_sangue" | "tbl_sexo" | "tbl_status_messager" | "tbl_type_messager" | "tbl_type_user" | "tbl_user"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      tbl_bebe: {
        payload: Prisma.$tbl_bebePayload<ExtArgs>
        fields: Prisma.tbl_bebeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_bebeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_bebeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload>
          }
          findFirst: {
            args: Prisma.tbl_bebeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_bebeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload>
          }
          findMany: {
            args: Prisma.tbl_bebeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload>[]
          }
          create: {
            args: Prisma.tbl_bebeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload>
          }
          createMany: {
            args: Prisma.tbl_bebeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_bebeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload>
          }
          update: {
            args: Prisma.tbl_bebeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload>
          }
          deleteMany: {
            args: Prisma.tbl_bebeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_bebeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_bebeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_bebePayload>
          }
          aggregate: {
            args: Prisma.Tbl_bebeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_bebe>
          }
          groupBy: {
            args: Prisma.tbl_bebeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_bebeGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_bebeCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_bebeCountAggregateOutputType> | number
          }
        }
      }
      tbl_cep: {
        payload: Prisma.$tbl_cepPayload<ExtArgs>
        fields: Prisma.tbl_cepFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_cepFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_cepFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload>
          }
          findFirst: {
            args: Prisma.tbl_cepFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_cepFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload>
          }
          findMany: {
            args: Prisma.tbl_cepFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload>[]
          }
          create: {
            args: Prisma.tbl_cepCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload>
          }
          createMany: {
            args: Prisma.tbl_cepCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_cepDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload>
          }
          update: {
            args: Prisma.tbl_cepUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload>
          }
          deleteMany: {
            args: Prisma.tbl_cepDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_cepUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_cepUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_cepPayload>
          }
          aggregate: {
            args: Prisma.Tbl_cepAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_cep>
          }
          groupBy: {
            args: Prisma.tbl_cepGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_cepGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_cepCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_cepCountAggregateOutputType> | number
          }
        }
      }
      tbl_chat: {
        payload: Prisma.$tbl_chatPayload<ExtArgs>
        fields: Prisma.tbl_chatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_chatFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_chatFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload>
          }
          findFirst: {
            args: Prisma.tbl_chatFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_chatFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload>
          }
          findMany: {
            args: Prisma.tbl_chatFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload>[]
          }
          create: {
            args: Prisma.tbl_chatCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload>
          }
          createMany: {
            args: Prisma.tbl_chatCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_chatDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload>
          }
          update: {
            args: Prisma.tbl_chatUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload>
          }
          deleteMany: {
            args: Prisma.tbl_chatDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_chatUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_chatUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_chatPayload>
          }
          aggregate: {
            args: Prisma.Tbl_chatAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_chat>
          }
          groupBy: {
            args: Prisma.tbl_chatGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_chatGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_chatCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_chatCountAggregateOutputType> | number
          }
        }
      }
      tbl_clinica: {
        payload: Prisma.$tbl_clinicaPayload<ExtArgs>
        fields: Prisma.tbl_clinicaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_clinicaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_clinicaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload>
          }
          findFirst: {
            args: Prisma.tbl_clinicaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_clinicaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload>
          }
          findMany: {
            args: Prisma.tbl_clinicaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload>[]
          }
          create: {
            args: Prisma.tbl_clinicaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload>
          }
          createMany: {
            args: Prisma.tbl_clinicaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_clinicaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload>
          }
          update: {
            args: Prisma.tbl_clinicaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_clinicaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_clinicaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_clinicaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_clinicaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_clinicaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_clinica>
          }
          groupBy: {
            args: Prisma.tbl_clinicaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_clinicaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_clinicaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_clinicaCountAggregateOutputType> | number
          }
        }
      }
      tbl_especialidade: {
        payload: Prisma.$tbl_especialidadePayload<ExtArgs>
        fields: Prisma.tbl_especialidadeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_especialidadeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_especialidadeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload>
          }
          findFirst: {
            args: Prisma.tbl_especialidadeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_especialidadeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload>
          }
          findMany: {
            args: Prisma.tbl_especialidadeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload>[]
          }
          create: {
            args: Prisma.tbl_especialidadeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload>
          }
          createMany: {
            args: Prisma.tbl_especialidadeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_especialidadeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload>
          }
          update: {
            args: Prisma.tbl_especialidadeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload>
          }
          deleteMany: {
            args: Prisma.tbl_especialidadeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_especialidadeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_especialidadeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidadePayload>
          }
          aggregate: {
            args: Prisma.Tbl_especialidadeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_especialidade>
          }
          groupBy: {
            args: Prisma.tbl_especialidadeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_especialidadeGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_especialidadeCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_especialidadeCountAggregateOutputType> | number
          }
        }
      }
      tbl_especialidade_clinica: {
        payload: Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>
        fields: Prisma.tbl_especialidade_clinicaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_especialidade_clinicaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_especialidade_clinicaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload>
          }
          findFirst: {
            args: Prisma.tbl_especialidade_clinicaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_especialidade_clinicaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload>
          }
          findMany: {
            args: Prisma.tbl_especialidade_clinicaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload>[]
          }
          create: {
            args: Prisma.tbl_especialidade_clinicaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload>
          }
          createMany: {
            args: Prisma.tbl_especialidade_clinicaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_especialidade_clinicaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload>
          }
          update: {
            args: Prisma.tbl_especialidade_clinicaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_especialidade_clinicaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_especialidade_clinicaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_especialidade_clinicaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_clinicaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_especialidade_clinicaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_especialidade_clinica>
          }
          groupBy: {
            args: Prisma.tbl_especialidade_clinicaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_especialidade_clinicaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_especialidade_clinicaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_especialidade_clinicaCountAggregateOutputType> | number
          }
        }
      }
      tbl_especialidade_medico: {
        payload: Prisma.$tbl_especialidade_medicoPayload<ExtArgs>
        fields: Prisma.tbl_especialidade_medicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_especialidade_medicoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_especialidade_medicoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload>
          }
          findFirst: {
            args: Prisma.tbl_especialidade_medicoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_especialidade_medicoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload>
          }
          findMany: {
            args: Prisma.tbl_especialidade_medicoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload>[]
          }
          create: {
            args: Prisma.tbl_especialidade_medicoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload>
          }
          createMany: {
            args: Prisma.tbl_especialidade_medicoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_especialidade_medicoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload>
          }
          update: {
            args: Prisma.tbl_especialidade_medicoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_especialidade_medicoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_especialidade_medicoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_especialidade_medicoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_especialidade_medicoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_especialidade_medicoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_especialidade_medico>
          }
          groupBy: {
            args: Prisma.tbl_especialidade_medicoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_especialidade_medicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_especialidade_medicoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_especialidade_medicoCountAggregateOutputType> | number
          }
        }
      }
      tbl_medico: {
        payload: Prisma.$tbl_medicoPayload<ExtArgs>
        fields: Prisma.tbl_medicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_medicoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_medicoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload>
          }
          findFirst: {
            args: Prisma.tbl_medicoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_medicoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload>
          }
          findMany: {
            args: Prisma.tbl_medicoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload>[]
          }
          create: {
            args: Prisma.tbl_medicoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload>
          }
          createMany: {
            args: Prisma.tbl_medicoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_medicoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload>
          }
          update: {
            args: Prisma.tbl_medicoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_medicoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_medicoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_medicoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_medicoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_medicoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_medico>
          }
          groupBy: {
            args: Prisma.tbl_medicoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_medicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_medicoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_medicoCountAggregateOutputType> | number
          }
        }
      }
      tbl_messager: {
        payload: Prisma.$tbl_messagerPayload<ExtArgs>
        fields: Prisma.tbl_messagerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_messagerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_messagerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload>
          }
          findFirst: {
            args: Prisma.tbl_messagerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_messagerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload>
          }
          findMany: {
            args: Prisma.tbl_messagerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload>[]
          }
          create: {
            args: Prisma.tbl_messagerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload>
          }
          createMany: {
            args: Prisma.tbl_messagerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_messagerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload>
          }
          update: {
            args: Prisma.tbl_messagerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload>
          }
          deleteMany: {
            args: Prisma.tbl_messagerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_messagerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_messagerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_messagerPayload>
          }
          aggregate: {
            args: Prisma.Tbl_messagerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_messager>
          }
          groupBy: {
            args: Prisma.tbl_messagerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_messagerGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_messagerCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_messagerCountAggregateOutputType> | number
          }
        }
      }
      tbl_responsavel: {
        payload: Prisma.$tbl_responsavelPayload<ExtArgs>
        fields: Prisma.tbl_responsavelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_responsavelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_responsavelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload>
          }
          findFirst: {
            args: Prisma.tbl_responsavelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_responsavelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload>
          }
          findMany: {
            args: Prisma.tbl_responsavelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload>[]
          }
          create: {
            args: Prisma.tbl_responsavelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload>
          }
          createMany: {
            args: Prisma.tbl_responsavelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_responsavelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload>
          }
          update: {
            args: Prisma.tbl_responsavelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload>
          }
          deleteMany: {
            args: Prisma.tbl_responsavelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_responsavelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_responsavelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavelPayload>
          }
          aggregate: {
            args: Prisma.Tbl_responsavelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_responsavel>
          }
          groupBy: {
            args: Prisma.tbl_responsavelGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_responsavelGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_responsavelCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_responsavelCountAggregateOutputType> | number
          }
        }
      }
      tbl_responsavel_bebe: {
        payload: Prisma.$tbl_responsavel_bebePayload<ExtArgs>
        fields: Prisma.tbl_responsavel_bebeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_responsavel_bebeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_responsavel_bebeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload>
          }
          findFirst: {
            args: Prisma.tbl_responsavel_bebeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_responsavel_bebeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload>
          }
          findMany: {
            args: Prisma.tbl_responsavel_bebeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload>[]
          }
          create: {
            args: Prisma.tbl_responsavel_bebeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload>
          }
          createMany: {
            args: Prisma.tbl_responsavel_bebeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_responsavel_bebeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload>
          }
          update: {
            args: Prisma.tbl_responsavel_bebeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload>
          }
          deleteMany: {
            args: Prisma.tbl_responsavel_bebeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_responsavel_bebeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_responsavel_bebeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_responsavel_bebePayload>
          }
          aggregate: {
            args: Prisma.Tbl_responsavel_bebeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_responsavel_bebe>
          }
          groupBy: {
            args: Prisma.tbl_responsavel_bebeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_responsavel_bebeGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_responsavel_bebeCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_responsavel_bebeCountAggregateOutputType> | number
          }
        }
      }
      tbl_rotina: {
        payload: Prisma.$tbl_rotinaPayload<ExtArgs>
        fields: Prisma.tbl_rotinaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_rotinaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_rotinaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload>
          }
          findFirst: {
            args: Prisma.tbl_rotinaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_rotinaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload>
          }
          findMany: {
            args: Prisma.tbl_rotinaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload>[]
          }
          create: {
            args: Prisma.tbl_rotinaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload>
          }
          createMany: {
            args: Prisma.tbl_rotinaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_rotinaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload>
          }
          update: {
            args: Prisma.tbl_rotinaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_rotinaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_rotinaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_rotinaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotinaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_rotinaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_rotina>
          }
          groupBy: {
            args: Prisma.tbl_rotinaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_rotinaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_rotinaCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_rotinaCountAggregateOutputType> | number
          }
        }
      }
      tbl_rotina_base: {
        payload: Prisma.$tbl_rotina_basePayload<ExtArgs>
        fields: Prisma.tbl_rotina_baseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_rotina_baseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_rotina_baseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload>
          }
          findFirst: {
            args: Prisma.tbl_rotina_baseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_rotina_baseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload>
          }
          findMany: {
            args: Prisma.tbl_rotina_baseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload>[]
          }
          create: {
            args: Prisma.tbl_rotina_baseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload>
          }
          createMany: {
            args: Prisma.tbl_rotina_baseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_rotina_baseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload>
          }
          update: {
            args: Prisma.tbl_rotina_baseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload>
          }
          deleteMany: {
            args: Prisma.tbl_rotina_baseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_rotina_baseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_rotina_baseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_rotina_basePayload>
          }
          aggregate: {
            args: Prisma.Tbl_rotina_baseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_rotina_base>
          }
          groupBy: {
            args: Prisma.tbl_rotina_baseGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_rotina_baseGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_rotina_baseCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_rotina_baseCountAggregateOutputType> | number
          }
        }
      }
      tbl_sangue: {
        payload: Prisma.$tbl_sanguePayload<ExtArgs>
        fields: Prisma.tbl_sangueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_sangueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_sangueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload>
          }
          findFirst: {
            args: Prisma.tbl_sangueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_sangueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload>
          }
          findMany: {
            args: Prisma.tbl_sangueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload>[]
          }
          create: {
            args: Prisma.tbl_sangueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload>
          }
          createMany: {
            args: Prisma.tbl_sangueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_sangueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload>
          }
          update: {
            args: Prisma.tbl_sangueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload>
          }
          deleteMany: {
            args: Prisma.tbl_sangueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_sangueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_sangueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sanguePayload>
          }
          aggregate: {
            args: Prisma.Tbl_sangueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_sangue>
          }
          groupBy: {
            args: Prisma.tbl_sangueGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_sangueGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_sangueCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_sangueCountAggregateOutputType> | number
          }
        }
      }
      tbl_sexo: {
        payload: Prisma.$tbl_sexoPayload<ExtArgs>
        fields: Prisma.tbl_sexoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_sexoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_sexoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          findFirst: {
            args: Prisma.tbl_sexoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_sexoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          findMany: {
            args: Prisma.tbl_sexoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>[]
          }
          create: {
            args: Prisma.tbl_sexoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          createMany: {
            args: Prisma.tbl_sexoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_sexoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          update: {
            args: Prisma.tbl_sexoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_sexoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_sexoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_sexoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_sexoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_sexo>
          }
          groupBy: {
            args: Prisma.tbl_sexoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_sexoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_sexoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_sexoCountAggregateOutputType> | number
          }
        }
      }
      tbl_status_messager: {
        payload: Prisma.$tbl_status_messagerPayload<ExtArgs>
        fields: Prisma.tbl_status_messagerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_status_messagerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_status_messagerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload>
          }
          findFirst: {
            args: Prisma.tbl_status_messagerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_status_messagerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload>
          }
          findMany: {
            args: Prisma.tbl_status_messagerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload>[]
          }
          create: {
            args: Prisma.tbl_status_messagerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload>
          }
          createMany: {
            args: Prisma.tbl_status_messagerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_status_messagerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload>
          }
          update: {
            args: Prisma.tbl_status_messagerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload>
          }
          deleteMany: {
            args: Prisma.tbl_status_messagerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_status_messagerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_status_messagerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_status_messagerPayload>
          }
          aggregate: {
            args: Prisma.Tbl_status_messagerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_status_messager>
          }
          groupBy: {
            args: Prisma.tbl_status_messagerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_status_messagerGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_status_messagerCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_status_messagerCountAggregateOutputType> | number
          }
        }
      }
      tbl_type_messager: {
        payload: Prisma.$tbl_type_messagerPayload<ExtArgs>
        fields: Prisma.tbl_type_messagerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_type_messagerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_type_messagerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload>
          }
          findFirst: {
            args: Prisma.tbl_type_messagerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_type_messagerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload>
          }
          findMany: {
            args: Prisma.tbl_type_messagerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload>[]
          }
          create: {
            args: Prisma.tbl_type_messagerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload>
          }
          createMany: {
            args: Prisma.tbl_type_messagerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_type_messagerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload>
          }
          update: {
            args: Prisma.tbl_type_messagerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload>
          }
          deleteMany: {
            args: Prisma.tbl_type_messagerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_type_messagerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_type_messagerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_messagerPayload>
          }
          aggregate: {
            args: Prisma.Tbl_type_messagerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_type_messager>
          }
          groupBy: {
            args: Prisma.tbl_type_messagerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_type_messagerGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_type_messagerCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_type_messagerCountAggregateOutputType> | number
          }
        }
      }
      tbl_type_user: {
        payload: Prisma.$tbl_type_userPayload<ExtArgs>
        fields: Prisma.tbl_type_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_type_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_type_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload>
          }
          findFirst: {
            args: Prisma.tbl_type_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_type_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload>
          }
          findMany: {
            args: Prisma.tbl_type_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload>[]
          }
          create: {
            args: Prisma.tbl_type_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload>
          }
          createMany: {
            args: Prisma.tbl_type_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_type_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload>
          }
          update: {
            args: Prisma.tbl_type_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload>
          }
          deleteMany: {
            args: Prisma.tbl_type_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_type_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_type_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_type_userPayload>
          }
          aggregate: {
            args: Prisma.Tbl_type_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_type_user>
          }
          groupBy: {
            args: Prisma.tbl_type_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_type_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_type_userCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_type_userCountAggregateOutputType> | number
          }
        }
      }
      tbl_user: {
        payload: Prisma.$tbl_userPayload<ExtArgs>
        fields: Prisma.tbl_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload>
          }
          findFirst: {
            args: Prisma.tbl_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload>
          }
          findMany: {
            args: Prisma.tbl_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload>[]
          }
          create: {
            args: Prisma.tbl_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload>
          }
          createMany: {
            args: Prisma.tbl_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload>
          }
          update: {
            args: Prisma.tbl_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload>
          }
          deleteMany: {
            args: Prisma.tbl_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_userPayload>
          }
          aggregate: {
            args: Prisma.Tbl_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_user>
          }
          groupBy: {
            args: Prisma.tbl_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_userCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_userCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    tbl_bebe?: tbl_bebeOmit
    tbl_cep?: tbl_cepOmit
    tbl_chat?: tbl_chatOmit
    tbl_clinica?: tbl_clinicaOmit
    tbl_especialidade?: tbl_especialidadeOmit
    tbl_especialidade_clinica?: tbl_especialidade_clinicaOmit
    tbl_especialidade_medico?: tbl_especialidade_medicoOmit
    tbl_medico?: tbl_medicoOmit
    tbl_messager?: tbl_messagerOmit
    tbl_responsavel?: tbl_responsavelOmit
    tbl_responsavel_bebe?: tbl_responsavel_bebeOmit
    tbl_rotina?: tbl_rotinaOmit
    tbl_rotina_base?: tbl_rotina_baseOmit
    tbl_sangue?: tbl_sangueOmit
    tbl_sexo?: tbl_sexoOmit
    tbl_status_messager?: tbl_status_messagerOmit
    tbl_type_messager?: tbl_type_messagerOmit
    tbl_type_user?: tbl_type_userOmit
    tbl_user?: tbl_userOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Tbl_bebeCountOutputType
   */

  export type Tbl_bebeCountOutputType = {
    tbl_responsavel_bebe: number
  }

  export type Tbl_bebeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_responsavel_bebe?: boolean | Tbl_bebeCountOutputTypeCountTbl_responsavel_bebeArgs
  }

  // Custom InputTypes
  /**
   * Tbl_bebeCountOutputType without action
   */
  export type Tbl_bebeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_bebeCountOutputType
     */
    select?: Tbl_bebeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_bebeCountOutputType without action
   */
  export type Tbl_bebeCountOutputTypeCountTbl_responsavel_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_responsavel_bebeWhereInput
  }


  /**
   * Count Type Tbl_cepCountOutputType
   */

  export type Tbl_cepCountOutputType = {
    tbl_bebe: number
    tbl_clinica: number
    tbl_responsavel: number
  }

  export type Tbl_cepCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_bebe?: boolean | Tbl_cepCountOutputTypeCountTbl_bebeArgs
    tbl_clinica?: boolean | Tbl_cepCountOutputTypeCountTbl_clinicaArgs
    tbl_responsavel?: boolean | Tbl_cepCountOutputTypeCountTbl_responsavelArgs
  }

  // Custom InputTypes
  /**
   * Tbl_cepCountOutputType without action
   */
  export type Tbl_cepCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_cepCountOutputType
     */
    select?: Tbl_cepCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_cepCountOutputType without action
   */
  export type Tbl_cepCountOutputTypeCountTbl_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_bebeWhereInput
  }

  /**
   * Tbl_cepCountOutputType without action
   */
  export type Tbl_cepCountOutputTypeCountTbl_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_clinicaWhereInput
  }

  /**
   * Tbl_cepCountOutputType without action
   */
  export type Tbl_cepCountOutputTypeCountTbl_responsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_responsavelWhereInput
  }


  /**
   * Count Type Tbl_clinicaCountOutputType
   */

  export type Tbl_clinicaCountOutputType = {
    tbl_especialidade_clinica: number
  }

  export type Tbl_clinicaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_especialidade_clinica?: boolean | Tbl_clinicaCountOutputTypeCountTbl_especialidade_clinicaArgs
  }

  // Custom InputTypes
  /**
   * Tbl_clinicaCountOutputType without action
   */
  export type Tbl_clinicaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_clinicaCountOutputType
     */
    select?: Tbl_clinicaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_clinicaCountOutputType without action
   */
  export type Tbl_clinicaCountOutputTypeCountTbl_especialidade_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_especialidade_clinicaWhereInput
  }


  /**
   * Count Type Tbl_especialidadeCountOutputType
   */

  export type Tbl_especialidadeCountOutputType = {
    tbl_especialidade_clinica: number
    tbl_especialidade_medico: number
  }

  export type Tbl_especialidadeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_especialidade_clinica?: boolean | Tbl_especialidadeCountOutputTypeCountTbl_especialidade_clinicaArgs
    tbl_especialidade_medico?: boolean | Tbl_especialidadeCountOutputTypeCountTbl_especialidade_medicoArgs
  }

  // Custom InputTypes
  /**
   * Tbl_especialidadeCountOutputType without action
   */
  export type Tbl_especialidadeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_especialidadeCountOutputType
     */
    select?: Tbl_especialidadeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_especialidadeCountOutputType without action
   */
  export type Tbl_especialidadeCountOutputTypeCountTbl_especialidade_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_especialidade_clinicaWhereInput
  }

  /**
   * Tbl_especialidadeCountOutputType without action
   */
  export type Tbl_especialidadeCountOutputTypeCountTbl_especialidade_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_especialidade_medicoWhereInput
  }


  /**
   * Count Type Tbl_medicoCountOutputType
   */

  export type Tbl_medicoCountOutputType = {
    tbl_especialidade_medico: number
  }

  export type Tbl_medicoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_especialidade_medico?: boolean | Tbl_medicoCountOutputTypeCountTbl_especialidade_medicoArgs
  }

  // Custom InputTypes
  /**
   * Tbl_medicoCountOutputType without action
   */
  export type Tbl_medicoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_medicoCountOutputType
     */
    select?: Tbl_medicoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_medicoCountOutputType without action
   */
  export type Tbl_medicoCountOutputTypeCountTbl_especialidade_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_especialidade_medicoWhereInput
  }


  /**
   * Count Type Tbl_messagerCountOutputType
   */

  export type Tbl_messagerCountOutputType = {
    tbl_chat: number
  }

  export type Tbl_messagerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_chat?: boolean | Tbl_messagerCountOutputTypeCountTbl_chatArgs
  }

  // Custom InputTypes
  /**
   * Tbl_messagerCountOutputType without action
   */
  export type Tbl_messagerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_messagerCountOutputType
     */
    select?: Tbl_messagerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_messagerCountOutputType without action
   */
  export type Tbl_messagerCountOutputTypeCountTbl_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_chatWhereInput
  }


  /**
   * Count Type Tbl_responsavelCountOutputType
   */

  export type Tbl_responsavelCountOutputType = {
    tbl_responsavel_bebe: number
  }

  export type Tbl_responsavelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_responsavel_bebe?: boolean | Tbl_responsavelCountOutputTypeCountTbl_responsavel_bebeArgs
  }

  // Custom InputTypes
  /**
   * Tbl_responsavelCountOutputType without action
   */
  export type Tbl_responsavelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_responsavelCountOutputType
     */
    select?: Tbl_responsavelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_responsavelCountOutputType without action
   */
  export type Tbl_responsavelCountOutputTypeCountTbl_responsavel_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_responsavel_bebeWhereInput
  }


  /**
   * Count Type Tbl_rotina_baseCountOutputType
   */

  export type Tbl_rotina_baseCountOutputType = {
    tbl_rotina: number
  }

  export type Tbl_rotina_baseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_rotina?: boolean | Tbl_rotina_baseCountOutputTypeCountTbl_rotinaArgs
  }

  // Custom InputTypes
  /**
   * Tbl_rotina_baseCountOutputType without action
   */
  export type Tbl_rotina_baseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_rotina_baseCountOutputType
     */
    select?: Tbl_rotina_baseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_rotina_baseCountOutputType without action
   */
  export type Tbl_rotina_baseCountOutputTypeCountTbl_rotinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_rotinaWhereInput
  }


  /**
   * Count Type Tbl_sangueCountOutputType
   */

  export type Tbl_sangueCountOutputType = {
    tbl_bebe: number
  }

  export type Tbl_sangueCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_bebe?: boolean | Tbl_sangueCountOutputTypeCountTbl_bebeArgs
  }

  // Custom InputTypes
  /**
   * Tbl_sangueCountOutputType without action
   */
  export type Tbl_sangueCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_sangueCountOutputType
     */
    select?: Tbl_sangueCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_sangueCountOutputType without action
   */
  export type Tbl_sangueCountOutputTypeCountTbl_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_bebeWhereInput
  }


  /**
   * Count Type Tbl_sexoCountOutputType
   */

  export type Tbl_sexoCountOutputType = {
    tbl_bebe: number
    tbl_medico: number
    tbl_responsavel: number
  }

  export type Tbl_sexoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_bebe?: boolean | Tbl_sexoCountOutputTypeCountTbl_bebeArgs
    tbl_medico?: boolean | Tbl_sexoCountOutputTypeCountTbl_medicoArgs
    tbl_responsavel?: boolean | Tbl_sexoCountOutputTypeCountTbl_responsavelArgs
  }

  // Custom InputTypes
  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_sexoCountOutputType
     */
    select?: Tbl_sexoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeCountTbl_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_bebeWhereInput
  }

  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeCountTbl_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_medicoWhereInput
  }

  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeCountTbl_responsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_responsavelWhereInput
  }


  /**
   * Count Type Tbl_status_messagerCountOutputType
   */

  export type Tbl_status_messagerCountOutputType = {
    tbl_messager: number
  }

  export type Tbl_status_messagerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_messager?: boolean | Tbl_status_messagerCountOutputTypeCountTbl_messagerArgs
  }

  // Custom InputTypes
  /**
   * Tbl_status_messagerCountOutputType without action
   */
  export type Tbl_status_messagerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_status_messagerCountOutputType
     */
    select?: Tbl_status_messagerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_status_messagerCountOutputType without action
   */
  export type Tbl_status_messagerCountOutputTypeCountTbl_messagerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_messagerWhereInput
  }


  /**
   * Count Type Tbl_type_messagerCountOutputType
   */

  export type Tbl_type_messagerCountOutputType = {
    tbl_messager: number
  }

  export type Tbl_type_messagerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_messager?: boolean | Tbl_type_messagerCountOutputTypeCountTbl_messagerArgs
  }

  // Custom InputTypes
  /**
   * Tbl_type_messagerCountOutputType without action
   */
  export type Tbl_type_messagerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_type_messagerCountOutputType
     */
    select?: Tbl_type_messagerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_type_messagerCountOutputType without action
   */
  export type Tbl_type_messagerCountOutputTypeCountTbl_messagerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_messagerWhereInput
  }


  /**
   * Count Type Tbl_type_userCountOutputType
   */

  export type Tbl_type_userCountOutputType = {
    tbl_user: number
  }

  export type Tbl_type_userCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_user?: boolean | Tbl_type_userCountOutputTypeCountTbl_userArgs
  }

  // Custom InputTypes
  /**
   * Tbl_type_userCountOutputType without action
   */
  export type Tbl_type_userCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_type_userCountOutputType
     */
    select?: Tbl_type_userCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_type_userCountOutputType without action
   */
  export type Tbl_type_userCountOutputTypeCountTbl_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_userWhereInput
  }


  /**
   * Count Type Tbl_userCountOutputType
   */

  export type Tbl_userCountOutputType = {
    tbl_chat: number
    tbl_clinica: number
    tbl_medico: number
    tbl_responsavel: number
    tbl_rotina: number
  }

  export type Tbl_userCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_chat?: boolean | Tbl_userCountOutputTypeCountTbl_chatArgs
    tbl_clinica?: boolean | Tbl_userCountOutputTypeCountTbl_clinicaArgs
    tbl_medico?: boolean | Tbl_userCountOutputTypeCountTbl_medicoArgs
    tbl_responsavel?: boolean | Tbl_userCountOutputTypeCountTbl_responsavelArgs
    tbl_rotina?: boolean | Tbl_userCountOutputTypeCountTbl_rotinaArgs
  }

  // Custom InputTypes
  /**
   * Tbl_userCountOutputType without action
   */
  export type Tbl_userCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_userCountOutputType
     */
    select?: Tbl_userCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_userCountOutputType without action
   */
  export type Tbl_userCountOutputTypeCountTbl_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_chatWhereInput
  }

  /**
   * Tbl_userCountOutputType without action
   */
  export type Tbl_userCountOutputTypeCountTbl_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_clinicaWhereInput
  }

  /**
   * Tbl_userCountOutputType without action
   */
  export type Tbl_userCountOutputTypeCountTbl_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_medicoWhereInput
  }

  /**
   * Tbl_userCountOutputType without action
   */
  export type Tbl_userCountOutputTypeCountTbl_responsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_responsavelWhereInput
  }

  /**
   * Tbl_userCountOutputType without action
   */
  export type Tbl_userCountOutputTypeCountTbl_rotinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_rotinaWhereInput
  }


  /**
   * Models
   */

  /**
   * Model tbl_bebe
   */

  export type AggregateTbl_bebe = {
    _count: Tbl_bebeCountAggregateOutputType | null
    _avg: Tbl_bebeAvgAggregateOutputType | null
    _sum: Tbl_bebeSumAggregateOutputType | null
    _min: Tbl_bebeMinAggregateOutputType | null
    _max: Tbl_bebeMaxAggregateOutputType | null
  }

  export type Tbl_bebeAvgAggregateOutputType = {
    id_bebe: number | null
    peso: Decimal | null
    altura: number | null
    id_sexo: number | null
    id_cep: number | null
    id_sangue: number | null
  }

  export type Tbl_bebeSumAggregateOutputType = {
    id_bebe: number | null
    peso: Decimal | null
    altura: number | null
    id_sexo: number | null
    id_cep: number | null
    id_sangue: number | null
  }

  export type Tbl_bebeMinAggregateOutputType = {
    id_bebe: number | null
    nome: string | null
    data_nascimento: Date | null
    peso: Decimal | null
    altura: number | null
    certidao_nascimento: string | null
    cpf: string | null
    cartao_medico: string | null
    imagem_certidao: string | null
    id_sexo: number | null
    id_cep: number | null
    id_sangue: number | null
  }

  export type Tbl_bebeMaxAggregateOutputType = {
    id_bebe: number | null
    nome: string | null
    data_nascimento: Date | null
    peso: Decimal | null
    altura: number | null
    certidao_nascimento: string | null
    cpf: string | null
    cartao_medico: string | null
    imagem_certidao: string | null
    id_sexo: number | null
    id_cep: number | null
    id_sangue: number | null
  }

  export type Tbl_bebeCountAggregateOutputType = {
    id_bebe: number
    nome: number
    data_nascimento: number
    peso: number
    altura: number
    certidao_nascimento: number
    cpf: number
    cartao_medico: number
    imagem_certidao: number
    id_sexo: number
    id_cep: number
    id_sangue: number
    _all: number
  }


  export type Tbl_bebeAvgAggregateInputType = {
    id_bebe?: true
    peso?: true
    altura?: true
    id_sexo?: true
    id_cep?: true
    id_sangue?: true
  }

  export type Tbl_bebeSumAggregateInputType = {
    id_bebe?: true
    peso?: true
    altura?: true
    id_sexo?: true
    id_cep?: true
    id_sangue?: true
  }

  export type Tbl_bebeMinAggregateInputType = {
    id_bebe?: true
    nome?: true
    data_nascimento?: true
    peso?: true
    altura?: true
    certidao_nascimento?: true
    cpf?: true
    cartao_medico?: true
    imagem_certidao?: true
    id_sexo?: true
    id_cep?: true
    id_sangue?: true
  }

  export type Tbl_bebeMaxAggregateInputType = {
    id_bebe?: true
    nome?: true
    data_nascimento?: true
    peso?: true
    altura?: true
    certidao_nascimento?: true
    cpf?: true
    cartao_medico?: true
    imagem_certidao?: true
    id_sexo?: true
    id_cep?: true
    id_sangue?: true
  }

  export type Tbl_bebeCountAggregateInputType = {
    id_bebe?: true
    nome?: true
    data_nascimento?: true
    peso?: true
    altura?: true
    certidao_nascimento?: true
    cpf?: true
    cartao_medico?: true
    imagem_certidao?: true
    id_sexo?: true
    id_cep?: true
    id_sangue?: true
    _all?: true
  }

  export type Tbl_bebeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_bebe to aggregate.
     */
    where?: tbl_bebeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_bebes to fetch.
     */
    orderBy?: tbl_bebeOrderByWithRelationInput | tbl_bebeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_bebeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_bebes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_bebes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_bebes
    **/
    _count?: true | Tbl_bebeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_bebeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_bebeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_bebeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_bebeMaxAggregateInputType
  }

  export type GetTbl_bebeAggregateType<T extends Tbl_bebeAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_bebe]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_bebe[P]>
      : GetScalarType<T[P], AggregateTbl_bebe[P]>
  }




  export type tbl_bebeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_bebeWhereInput
    orderBy?: tbl_bebeOrderByWithAggregationInput | tbl_bebeOrderByWithAggregationInput[]
    by: Tbl_bebeScalarFieldEnum[] | Tbl_bebeScalarFieldEnum
    having?: tbl_bebeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_bebeCountAggregateInputType | true
    _avg?: Tbl_bebeAvgAggregateInputType
    _sum?: Tbl_bebeSumAggregateInputType
    _min?: Tbl_bebeMinAggregateInputType
    _max?: Tbl_bebeMaxAggregateInputType
  }

  export type Tbl_bebeGroupByOutputType = {
    id_bebe: number
    nome: string
    data_nascimento: Date
    peso: Decimal
    altura: number
    certidao_nascimento: string
    cpf: string | null
    cartao_medico: string
    imagem_certidao: string
    id_sexo: number | null
    id_cep: number | null
    id_sangue: number | null
    _count: Tbl_bebeCountAggregateOutputType | null
    _avg: Tbl_bebeAvgAggregateOutputType | null
    _sum: Tbl_bebeSumAggregateOutputType | null
    _min: Tbl_bebeMinAggregateOutputType | null
    _max: Tbl_bebeMaxAggregateOutputType | null
  }

  type GetTbl_bebeGroupByPayload<T extends tbl_bebeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_bebeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_bebeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_bebeGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_bebeGroupByOutputType[P]>
        }
      >
    >


  export type tbl_bebeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_bebe?: boolean
    nome?: boolean
    data_nascimento?: boolean
    peso?: boolean
    altura?: boolean
    certidao_nascimento?: boolean
    cpf?: boolean
    cartao_medico?: boolean
    imagem_certidao?: boolean
    id_sexo?: boolean
    id_cep?: boolean
    id_sangue?: boolean
    tbl_cep?: boolean | tbl_bebe$tbl_cepArgs<ExtArgs>
    tbl_sangue?: boolean | tbl_bebe$tbl_sangueArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_bebe$tbl_sexoArgs<ExtArgs>
    tbl_responsavel_bebe?: boolean | tbl_bebe$tbl_responsavel_bebeArgs<ExtArgs>
    _count?: boolean | Tbl_bebeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_bebe"]>



  export type tbl_bebeSelectScalar = {
    id_bebe?: boolean
    nome?: boolean
    data_nascimento?: boolean
    peso?: boolean
    altura?: boolean
    certidao_nascimento?: boolean
    cpf?: boolean
    cartao_medico?: boolean
    imagem_certidao?: boolean
    id_sexo?: boolean
    id_cep?: boolean
    id_sangue?: boolean
  }

  export type tbl_bebeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_bebe" | "nome" | "data_nascimento" | "peso" | "altura" | "certidao_nascimento" | "cpf" | "cartao_medico" | "imagem_certidao" | "id_sexo" | "id_cep" | "id_sangue", ExtArgs["result"]["tbl_bebe"]>
  export type tbl_bebeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_cep?: boolean | tbl_bebe$tbl_cepArgs<ExtArgs>
    tbl_sangue?: boolean | tbl_bebe$tbl_sangueArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_bebe$tbl_sexoArgs<ExtArgs>
    tbl_responsavel_bebe?: boolean | tbl_bebe$tbl_responsavel_bebeArgs<ExtArgs>
    _count?: boolean | Tbl_bebeCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_bebePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_bebe"
    objects: {
      tbl_cep: Prisma.$tbl_cepPayload<ExtArgs> | null
      tbl_sangue: Prisma.$tbl_sanguePayload<ExtArgs> | null
      tbl_sexo: Prisma.$tbl_sexoPayload<ExtArgs> | null
      tbl_responsavel_bebe: Prisma.$tbl_responsavel_bebePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_bebe: number
      nome: string
      data_nascimento: Date
      peso: Prisma.Decimal
      altura: number
      certidao_nascimento: string
      cpf: string | null
      cartao_medico: string
      imagem_certidao: string
      id_sexo: number | null
      id_cep: number | null
      id_sangue: number | null
    }, ExtArgs["result"]["tbl_bebe"]>
    composites: {}
  }

  type tbl_bebeGetPayload<S extends boolean | null | undefined | tbl_bebeDefaultArgs> = $Result.GetResult<Prisma.$tbl_bebePayload, S>

  type tbl_bebeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_bebeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_bebeCountAggregateInputType | true
    }

  export interface tbl_bebeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_bebe'], meta: { name: 'tbl_bebe' } }
    /**
     * Find zero or one Tbl_bebe that matches the filter.
     * @param {tbl_bebeFindUniqueArgs} args - Arguments to find a Tbl_bebe
     * @example
     * // Get one Tbl_bebe
     * const tbl_bebe = await prisma.tbl_bebe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_bebeFindUniqueArgs>(args: SelectSubset<T, tbl_bebeFindUniqueArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_bebe that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_bebeFindUniqueOrThrowArgs} args - Arguments to find a Tbl_bebe
     * @example
     * // Get one Tbl_bebe
     * const tbl_bebe = await prisma.tbl_bebe.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_bebeFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_bebeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_bebe that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_bebeFindFirstArgs} args - Arguments to find a Tbl_bebe
     * @example
     * // Get one Tbl_bebe
     * const tbl_bebe = await prisma.tbl_bebe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_bebeFindFirstArgs>(args?: SelectSubset<T, tbl_bebeFindFirstArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_bebe that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_bebeFindFirstOrThrowArgs} args - Arguments to find a Tbl_bebe
     * @example
     * // Get one Tbl_bebe
     * const tbl_bebe = await prisma.tbl_bebe.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_bebeFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_bebeFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_bebes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_bebeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_bebes
     * const tbl_bebes = await prisma.tbl_bebe.findMany()
     * 
     * // Get first 10 Tbl_bebes
     * const tbl_bebes = await prisma.tbl_bebe.findMany({ take: 10 })
     * 
     * // Only select the `id_bebe`
     * const tbl_bebeWithId_bebeOnly = await prisma.tbl_bebe.findMany({ select: { id_bebe: true } })
     * 
     */
    findMany<T extends tbl_bebeFindManyArgs>(args?: SelectSubset<T, tbl_bebeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_bebe.
     * @param {tbl_bebeCreateArgs} args - Arguments to create a Tbl_bebe.
     * @example
     * // Create one Tbl_bebe
     * const Tbl_bebe = await prisma.tbl_bebe.create({
     *   data: {
     *     // ... data to create a Tbl_bebe
     *   }
     * })
     * 
     */
    create<T extends tbl_bebeCreateArgs>(args: SelectSubset<T, tbl_bebeCreateArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_bebes.
     * @param {tbl_bebeCreateManyArgs} args - Arguments to create many Tbl_bebes.
     * @example
     * // Create many Tbl_bebes
     * const tbl_bebe = await prisma.tbl_bebe.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_bebeCreateManyArgs>(args?: SelectSubset<T, tbl_bebeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_bebe.
     * @param {tbl_bebeDeleteArgs} args - Arguments to delete one Tbl_bebe.
     * @example
     * // Delete one Tbl_bebe
     * const Tbl_bebe = await prisma.tbl_bebe.delete({
     *   where: {
     *     // ... filter to delete one Tbl_bebe
     *   }
     * })
     * 
     */
    delete<T extends tbl_bebeDeleteArgs>(args: SelectSubset<T, tbl_bebeDeleteArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_bebe.
     * @param {tbl_bebeUpdateArgs} args - Arguments to update one Tbl_bebe.
     * @example
     * // Update one Tbl_bebe
     * const tbl_bebe = await prisma.tbl_bebe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_bebeUpdateArgs>(args: SelectSubset<T, tbl_bebeUpdateArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_bebes.
     * @param {tbl_bebeDeleteManyArgs} args - Arguments to filter Tbl_bebes to delete.
     * @example
     * // Delete a few Tbl_bebes
     * const { count } = await prisma.tbl_bebe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_bebeDeleteManyArgs>(args?: SelectSubset<T, tbl_bebeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_bebes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_bebeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_bebes
     * const tbl_bebe = await prisma.tbl_bebe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_bebeUpdateManyArgs>(args: SelectSubset<T, tbl_bebeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_bebe.
     * @param {tbl_bebeUpsertArgs} args - Arguments to update or create a Tbl_bebe.
     * @example
     * // Update or create a Tbl_bebe
     * const tbl_bebe = await prisma.tbl_bebe.upsert({
     *   create: {
     *     // ... data to create a Tbl_bebe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_bebe we want to update
     *   }
     * })
     */
    upsert<T extends tbl_bebeUpsertArgs>(args: SelectSubset<T, tbl_bebeUpsertArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_bebes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_bebeCountArgs} args - Arguments to filter Tbl_bebes to count.
     * @example
     * // Count the number of Tbl_bebes
     * const count = await prisma.tbl_bebe.count({
     *   where: {
     *     // ... the filter for the Tbl_bebes we want to count
     *   }
     * })
    **/
    count<T extends tbl_bebeCountArgs>(
      args?: Subset<T, tbl_bebeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_bebeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_bebe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_bebeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_bebeAggregateArgs>(args: Subset<T, Tbl_bebeAggregateArgs>): Prisma.PrismaPromise<GetTbl_bebeAggregateType<T>>

    /**
     * Group by Tbl_bebe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_bebeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_bebeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_bebeGroupByArgs['orderBy'] }
        : { orderBy?: tbl_bebeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_bebeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_bebeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_bebe model
   */
  readonly fields: tbl_bebeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_bebe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_bebeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_cep<T extends tbl_bebe$tbl_cepArgs<ExtArgs> = {}>(args?: Subset<T, tbl_bebe$tbl_cepArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_sangue<T extends tbl_bebe$tbl_sangueArgs<ExtArgs> = {}>(args?: Subset<T, tbl_bebe$tbl_sangueArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_sexo<T extends tbl_bebe$tbl_sexoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_bebe$tbl_sexoArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_responsavel_bebe<T extends tbl_bebe$tbl_responsavel_bebeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_bebe$tbl_responsavel_bebeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_bebe model
   */
  interface tbl_bebeFieldRefs {
    readonly id_bebe: FieldRef<"tbl_bebe", 'Int'>
    readonly nome: FieldRef<"tbl_bebe", 'String'>
    readonly data_nascimento: FieldRef<"tbl_bebe", 'DateTime'>
    readonly peso: FieldRef<"tbl_bebe", 'Decimal'>
    readonly altura: FieldRef<"tbl_bebe", 'Int'>
    readonly certidao_nascimento: FieldRef<"tbl_bebe", 'String'>
    readonly cpf: FieldRef<"tbl_bebe", 'String'>
    readonly cartao_medico: FieldRef<"tbl_bebe", 'String'>
    readonly imagem_certidao: FieldRef<"tbl_bebe", 'String'>
    readonly id_sexo: FieldRef<"tbl_bebe", 'Int'>
    readonly id_cep: FieldRef<"tbl_bebe", 'Int'>
    readonly id_sangue: FieldRef<"tbl_bebe", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_bebe findUnique
   */
  export type tbl_bebeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_bebe to fetch.
     */
    where: tbl_bebeWhereUniqueInput
  }

  /**
   * tbl_bebe findUniqueOrThrow
   */
  export type tbl_bebeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_bebe to fetch.
     */
    where: tbl_bebeWhereUniqueInput
  }

  /**
   * tbl_bebe findFirst
   */
  export type tbl_bebeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_bebe to fetch.
     */
    where?: tbl_bebeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_bebes to fetch.
     */
    orderBy?: tbl_bebeOrderByWithRelationInput | tbl_bebeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_bebes.
     */
    cursor?: tbl_bebeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_bebes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_bebes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_bebes.
     */
    distinct?: Tbl_bebeScalarFieldEnum | Tbl_bebeScalarFieldEnum[]
  }

  /**
   * tbl_bebe findFirstOrThrow
   */
  export type tbl_bebeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_bebe to fetch.
     */
    where?: tbl_bebeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_bebes to fetch.
     */
    orderBy?: tbl_bebeOrderByWithRelationInput | tbl_bebeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_bebes.
     */
    cursor?: tbl_bebeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_bebes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_bebes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_bebes.
     */
    distinct?: Tbl_bebeScalarFieldEnum | Tbl_bebeScalarFieldEnum[]
  }

  /**
   * tbl_bebe findMany
   */
  export type tbl_bebeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_bebes to fetch.
     */
    where?: tbl_bebeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_bebes to fetch.
     */
    orderBy?: tbl_bebeOrderByWithRelationInput | tbl_bebeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_bebes.
     */
    cursor?: tbl_bebeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_bebes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_bebes.
     */
    skip?: number
    distinct?: Tbl_bebeScalarFieldEnum | Tbl_bebeScalarFieldEnum[]
  }

  /**
   * tbl_bebe create
   */
  export type tbl_bebeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_bebe.
     */
    data: XOR<tbl_bebeCreateInput, tbl_bebeUncheckedCreateInput>
  }

  /**
   * tbl_bebe createMany
   */
  export type tbl_bebeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_bebes.
     */
    data: tbl_bebeCreateManyInput | tbl_bebeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_bebe update
   */
  export type tbl_bebeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_bebe.
     */
    data: XOR<tbl_bebeUpdateInput, tbl_bebeUncheckedUpdateInput>
    /**
     * Choose, which tbl_bebe to update.
     */
    where: tbl_bebeWhereUniqueInput
  }

  /**
   * tbl_bebe updateMany
   */
  export type tbl_bebeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_bebes.
     */
    data: XOR<tbl_bebeUpdateManyMutationInput, tbl_bebeUncheckedUpdateManyInput>
    /**
     * Filter which tbl_bebes to update
     */
    where?: tbl_bebeWhereInput
    /**
     * Limit how many tbl_bebes to update.
     */
    limit?: number
  }

  /**
   * tbl_bebe upsert
   */
  export type tbl_bebeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_bebe to update in case it exists.
     */
    where: tbl_bebeWhereUniqueInput
    /**
     * In case the tbl_bebe found by the `where` argument doesn't exist, create a new tbl_bebe with this data.
     */
    create: XOR<tbl_bebeCreateInput, tbl_bebeUncheckedCreateInput>
    /**
     * In case the tbl_bebe was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_bebeUpdateInput, tbl_bebeUncheckedUpdateInput>
  }

  /**
   * tbl_bebe delete
   */
  export type tbl_bebeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    /**
     * Filter which tbl_bebe to delete.
     */
    where: tbl_bebeWhereUniqueInput
  }

  /**
   * tbl_bebe deleteMany
   */
  export type tbl_bebeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_bebes to delete
     */
    where?: tbl_bebeWhereInput
    /**
     * Limit how many tbl_bebes to delete.
     */
    limit?: number
  }

  /**
   * tbl_bebe.tbl_cep
   */
  export type tbl_bebe$tbl_cepArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    where?: tbl_cepWhereInput
  }

  /**
   * tbl_bebe.tbl_sangue
   */
  export type tbl_bebe$tbl_sangueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    where?: tbl_sangueWhereInput
  }

  /**
   * tbl_bebe.tbl_sexo
   */
  export type tbl_bebe$tbl_sexoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    where?: tbl_sexoWhereInput
  }

  /**
   * tbl_bebe.tbl_responsavel_bebe
   */
  export type tbl_bebe$tbl_responsavel_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    where?: tbl_responsavel_bebeWhereInput
    orderBy?: tbl_responsavel_bebeOrderByWithRelationInput | tbl_responsavel_bebeOrderByWithRelationInput[]
    cursor?: tbl_responsavel_bebeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_responsavel_bebeScalarFieldEnum | Tbl_responsavel_bebeScalarFieldEnum[]
  }

  /**
   * tbl_bebe without action
   */
  export type tbl_bebeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
  }


  /**
   * Model tbl_cep
   */

  export type AggregateTbl_cep = {
    _count: Tbl_cepCountAggregateOutputType | null
    _avg: Tbl_cepAvgAggregateOutputType | null
    _sum: Tbl_cepSumAggregateOutputType | null
    _min: Tbl_cepMinAggregateOutputType | null
    _max: Tbl_cepMaxAggregateOutputType | null
  }

  export type Tbl_cepAvgAggregateOutputType = {
    id_cep: number | null
    id_responsavel: number | null
  }

  export type Tbl_cepSumAggregateOutputType = {
    id_cep: number | null
    id_responsavel: number | null
  }

  export type Tbl_cepMinAggregateOutputType = {
    id_cep: number | null
    cep: string | null
    logradouro: string | null
    cidade: string | null
    uf: string | null
    id_responsavel: number | null
  }

  export type Tbl_cepMaxAggregateOutputType = {
    id_cep: number | null
    cep: string | null
    logradouro: string | null
    cidade: string | null
    uf: string | null
    id_responsavel: number | null
  }

  export type Tbl_cepCountAggregateOutputType = {
    id_cep: number
    cep: number
    logradouro: number
    cidade: number
    uf: number
    id_responsavel: number
    _all: number
  }


  export type Tbl_cepAvgAggregateInputType = {
    id_cep?: true
    id_responsavel?: true
  }

  export type Tbl_cepSumAggregateInputType = {
    id_cep?: true
    id_responsavel?: true
  }

  export type Tbl_cepMinAggregateInputType = {
    id_cep?: true
    cep?: true
    logradouro?: true
    cidade?: true
    uf?: true
    id_responsavel?: true
  }

  export type Tbl_cepMaxAggregateInputType = {
    id_cep?: true
    cep?: true
    logradouro?: true
    cidade?: true
    uf?: true
    id_responsavel?: true
  }

  export type Tbl_cepCountAggregateInputType = {
    id_cep?: true
    cep?: true
    logradouro?: true
    cidade?: true
    uf?: true
    id_responsavel?: true
    _all?: true
  }

  export type Tbl_cepAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cep to aggregate.
     */
    where?: tbl_cepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_ceps to fetch.
     */
    orderBy?: tbl_cepOrderByWithRelationInput | tbl_cepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_cepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_ceps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_ceps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_ceps
    **/
    _count?: true | Tbl_cepCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_cepAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_cepSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_cepMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_cepMaxAggregateInputType
  }

  export type GetTbl_cepAggregateType<T extends Tbl_cepAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_cep]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_cep[P]>
      : GetScalarType<T[P], AggregateTbl_cep[P]>
  }




  export type tbl_cepGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cepWhereInput
    orderBy?: tbl_cepOrderByWithAggregationInput | tbl_cepOrderByWithAggregationInput[]
    by: Tbl_cepScalarFieldEnum[] | Tbl_cepScalarFieldEnum
    having?: tbl_cepScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_cepCountAggregateInputType | true
    _avg?: Tbl_cepAvgAggregateInputType
    _sum?: Tbl_cepSumAggregateInputType
    _min?: Tbl_cepMinAggregateInputType
    _max?: Tbl_cepMaxAggregateInputType
  }

  export type Tbl_cepGroupByOutputType = {
    id_cep: number
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel: number | null
    _count: Tbl_cepCountAggregateOutputType | null
    _avg: Tbl_cepAvgAggregateOutputType | null
    _sum: Tbl_cepSumAggregateOutputType | null
    _min: Tbl_cepMinAggregateOutputType | null
    _max: Tbl_cepMaxAggregateOutputType | null
  }

  type GetTbl_cepGroupByPayload<T extends tbl_cepGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_cepGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_cepGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_cepGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_cepGroupByOutputType[P]>
        }
      >
    >


  export type tbl_cepSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cep?: boolean
    cep?: boolean
    logradouro?: boolean
    cidade?: boolean
    uf?: boolean
    id_responsavel?: boolean
    tbl_bebe?: boolean | tbl_cep$tbl_bebeArgs<ExtArgs>
    tbl_clinica?: boolean | tbl_cep$tbl_clinicaArgs<ExtArgs>
    tbl_responsavel?: boolean | tbl_cep$tbl_responsavelArgs<ExtArgs>
    _count?: boolean | Tbl_cepCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_cep"]>



  export type tbl_cepSelectScalar = {
    id_cep?: boolean
    cep?: boolean
    logradouro?: boolean
    cidade?: boolean
    uf?: boolean
    id_responsavel?: boolean
  }

  export type tbl_cepOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_cep" | "cep" | "logradouro" | "cidade" | "uf" | "id_responsavel", ExtArgs["result"]["tbl_cep"]>
  export type tbl_cepInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_bebe?: boolean | tbl_cep$tbl_bebeArgs<ExtArgs>
    tbl_clinica?: boolean | tbl_cep$tbl_clinicaArgs<ExtArgs>
    tbl_responsavel?: boolean | tbl_cep$tbl_responsavelArgs<ExtArgs>
    _count?: boolean | Tbl_cepCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_cepPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_cep"
    objects: {
      tbl_bebe: Prisma.$tbl_bebePayload<ExtArgs>[]
      tbl_clinica: Prisma.$tbl_clinicaPayload<ExtArgs>[]
      tbl_responsavel: Prisma.$tbl_responsavelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cep: number
      cep: string
      logradouro: string
      cidade: string
      uf: string
      id_responsavel: number | null
    }, ExtArgs["result"]["tbl_cep"]>
    composites: {}
  }

  type tbl_cepGetPayload<S extends boolean | null | undefined | tbl_cepDefaultArgs> = $Result.GetResult<Prisma.$tbl_cepPayload, S>

  type tbl_cepCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_cepFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_cepCountAggregateInputType | true
    }

  export interface tbl_cepDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_cep'], meta: { name: 'tbl_cep' } }
    /**
     * Find zero or one Tbl_cep that matches the filter.
     * @param {tbl_cepFindUniqueArgs} args - Arguments to find a Tbl_cep
     * @example
     * // Get one Tbl_cep
     * const tbl_cep = await prisma.tbl_cep.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_cepFindUniqueArgs>(args: SelectSubset<T, tbl_cepFindUniqueArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_cep that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_cepFindUniqueOrThrowArgs} args - Arguments to find a Tbl_cep
     * @example
     * // Get one Tbl_cep
     * const tbl_cep = await prisma.tbl_cep.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_cepFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_cepFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_cep that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cepFindFirstArgs} args - Arguments to find a Tbl_cep
     * @example
     * // Get one Tbl_cep
     * const tbl_cep = await prisma.tbl_cep.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_cepFindFirstArgs>(args?: SelectSubset<T, tbl_cepFindFirstArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_cep that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cepFindFirstOrThrowArgs} args - Arguments to find a Tbl_cep
     * @example
     * // Get one Tbl_cep
     * const tbl_cep = await prisma.tbl_cep.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_cepFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_cepFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_ceps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cepFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_ceps
     * const tbl_ceps = await prisma.tbl_cep.findMany()
     * 
     * // Get first 10 Tbl_ceps
     * const tbl_ceps = await prisma.tbl_cep.findMany({ take: 10 })
     * 
     * // Only select the `id_cep`
     * const tbl_cepWithId_cepOnly = await prisma.tbl_cep.findMany({ select: { id_cep: true } })
     * 
     */
    findMany<T extends tbl_cepFindManyArgs>(args?: SelectSubset<T, tbl_cepFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_cep.
     * @param {tbl_cepCreateArgs} args - Arguments to create a Tbl_cep.
     * @example
     * // Create one Tbl_cep
     * const Tbl_cep = await prisma.tbl_cep.create({
     *   data: {
     *     // ... data to create a Tbl_cep
     *   }
     * })
     * 
     */
    create<T extends tbl_cepCreateArgs>(args: SelectSubset<T, tbl_cepCreateArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_ceps.
     * @param {tbl_cepCreateManyArgs} args - Arguments to create many Tbl_ceps.
     * @example
     * // Create many Tbl_ceps
     * const tbl_cep = await prisma.tbl_cep.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_cepCreateManyArgs>(args?: SelectSubset<T, tbl_cepCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_cep.
     * @param {tbl_cepDeleteArgs} args - Arguments to delete one Tbl_cep.
     * @example
     * // Delete one Tbl_cep
     * const Tbl_cep = await prisma.tbl_cep.delete({
     *   where: {
     *     // ... filter to delete one Tbl_cep
     *   }
     * })
     * 
     */
    delete<T extends tbl_cepDeleteArgs>(args: SelectSubset<T, tbl_cepDeleteArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_cep.
     * @param {tbl_cepUpdateArgs} args - Arguments to update one Tbl_cep.
     * @example
     * // Update one Tbl_cep
     * const tbl_cep = await prisma.tbl_cep.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_cepUpdateArgs>(args: SelectSubset<T, tbl_cepUpdateArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_ceps.
     * @param {tbl_cepDeleteManyArgs} args - Arguments to filter Tbl_ceps to delete.
     * @example
     * // Delete a few Tbl_ceps
     * const { count } = await prisma.tbl_cep.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_cepDeleteManyArgs>(args?: SelectSubset<T, tbl_cepDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_ceps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cepUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_ceps
     * const tbl_cep = await prisma.tbl_cep.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_cepUpdateManyArgs>(args: SelectSubset<T, tbl_cepUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_cep.
     * @param {tbl_cepUpsertArgs} args - Arguments to update or create a Tbl_cep.
     * @example
     * // Update or create a Tbl_cep
     * const tbl_cep = await prisma.tbl_cep.upsert({
     *   create: {
     *     // ... data to create a Tbl_cep
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_cep we want to update
     *   }
     * })
     */
    upsert<T extends tbl_cepUpsertArgs>(args: SelectSubset<T, tbl_cepUpsertArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_ceps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cepCountArgs} args - Arguments to filter Tbl_ceps to count.
     * @example
     * // Count the number of Tbl_ceps
     * const count = await prisma.tbl_cep.count({
     *   where: {
     *     // ... the filter for the Tbl_ceps we want to count
     *   }
     * })
    **/
    count<T extends tbl_cepCountArgs>(
      args?: Subset<T, tbl_cepCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_cepCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_cep.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_cepAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_cepAggregateArgs>(args: Subset<T, Tbl_cepAggregateArgs>): Prisma.PrismaPromise<GetTbl_cepAggregateType<T>>

    /**
     * Group by Tbl_cep.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cepGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_cepGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_cepGroupByArgs['orderBy'] }
        : { orderBy?: tbl_cepGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_cepGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_cepGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_cep model
   */
  readonly fields: tbl_cepFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_cep.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_cepClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_bebe<T extends tbl_cep$tbl_bebeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cep$tbl_bebeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_clinica<T extends tbl_cep$tbl_clinicaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cep$tbl_clinicaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_responsavel<T extends tbl_cep$tbl_responsavelArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cep$tbl_responsavelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_cep model
   */
  interface tbl_cepFieldRefs {
    readonly id_cep: FieldRef<"tbl_cep", 'Int'>
    readonly cep: FieldRef<"tbl_cep", 'String'>
    readonly logradouro: FieldRef<"tbl_cep", 'String'>
    readonly cidade: FieldRef<"tbl_cep", 'String'>
    readonly uf: FieldRef<"tbl_cep", 'String'>
    readonly id_responsavel: FieldRef<"tbl_cep", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_cep findUnique
   */
  export type tbl_cepFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cep to fetch.
     */
    where: tbl_cepWhereUniqueInput
  }

  /**
   * tbl_cep findUniqueOrThrow
   */
  export type tbl_cepFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cep to fetch.
     */
    where: tbl_cepWhereUniqueInput
  }

  /**
   * tbl_cep findFirst
   */
  export type tbl_cepFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cep to fetch.
     */
    where?: tbl_cepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_ceps to fetch.
     */
    orderBy?: tbl_cepOrderByWithRelationInput | tbl_cepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_ceps.
     */
    cursor?: tbl_cepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_ceps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_ceps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_ceps.
     */
    distinct?: Tbl_cepScalarFieldEnum | Tbl_cepScalarFieldEnum[]
  }

  /**
   * tbl_cep findFirstOrThrow
   */
  export type tbl_cepFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cep to fetch.
     */
    where?: tbl_cepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_ceps to fetch.
     */
    orderBy?: tbl_cepOrderByWithRelationInput | tbl_cepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_ceps.
     */
    cursor?: tbl_cepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_ceps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_ceps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_ceps.
     */
    distinct?: Tbl_cepScalarFieldEnum | Tbl_cepScalarFieldEnum[]
  }

  /**
   * tbl_cep findMany
   */
  export type tbl_cepFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * Filter, which tbl_ceps to fetch.
     */
    where?: tbl_cepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_ceps to fetch.
     */
    orderBy?: tbl_cepOrderByWithRelationInput | tbl_cepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_ceps.
     */
    cursor?: tbl_cepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_ceps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_ceps.
     */
    skip?: number
    distinct?: Tbl_cepScalarFieldEnum | Tbl_cepScalarFieldEnum[]
  }

  /**
   * tbl_cep create
   */
  export type tbl_cepCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_cep.
     */
    data: XOR<tbl_cepCreateInput, tbl_cepUncheckedCreateInput>
  }

  /**
   * tbl_cep createMany
   */
  export type tbl_cepCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_ceps.
     */
    data: tbl_cepCreateManyInput | tbl_cepCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_cep update
   */
  export type tbl_cepUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_cep.
     */
    data: XOR<tbl_cepUpdateInput, tbl_cepUncheckedUpdateInput>
    /**
     * Choose, which tbl_cep to update.
     */
    where: tbl_cepWhereUniqueInput
  }

  /**
   * tbl_cep updateMany
   */
  export type tbl_cepUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_ceps.
     */
    data: XOR<tbl_cepUpdateManyMutationInput, tbl_cepUncheckedUpdateManyInput>
    /**
     * Filter which tbl_ceps to update
     */
    where?: tbl_cepWhereInput
    /**
     * Limit how many tbl_ceps to update.
     */
    limit?: number
  }

  /**
   * tbl_cep upsert
   */
  export type tbl_cepUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_cep to update in case it exists.
     */
    where: tbl_cepWhereUniqueInput
    /**
     * In case the tbl_cep found by the `where` argument doesn't exist, create a new tbl_cep with this data.
     */
    create: XOR<tbl_cepCreateInput, tbl_cepUncheckedCreateInput>
    /**
     * In case the tbl_cep was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_cepUpdateInput, tbl_cepUncheckedUpdateInput>
  }

  /**
   * tbl_cep delete
   */
  export type tbl_cepDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    /**
     * Filter which tbl_cep to delete.
     */
    where: tbl_cepWhereUniqueInput
  }

  /**
   * tbl_cep deleteMany
   */
  export type tbl_cepDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_ceps to delete
     */
    where?: tbl_cepWhereInput
    /**
     * Limit how many tbl_ceps to delete.
     */
    limit?: number
  }

  /**
   * tbl_cep.tbl_bebe
   */
  export type tbl_cep$tbl_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    where?: tbl_bebeWhereInput
    orderBy?: tbl_bebeOrderByWithRelationInput | tbl_bebeOrderByWithRelationInput[]
    cursor?: tbl_bebeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_bebeScalarFieldEnum | Tbl_bebeScalarFieldEnum[]
  }

  /**
   * tbl_cep.tbl_clinica
   */
  export type tbl_cep$tbl_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    where?: tbl_clinicaWhereInput
    orderBy?: tbl_clinicaOrderByWithRelationInput | tbl_clinicaOrderByWithRelationInput[]
    cursor?: tbl_clinicaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_clinicaScalarFieldEnum | Tbl_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_cep.tbl_responsavel
   */
  export type tbl_cep$tbl_responsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    where?: tbl_responsavelWhereInput
    orderBy?: tbl_responsavelOrderByWithRelationInput | tbl_responsavelOrderByWithRelationInput[]
    cursor?: tbl_responsavelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_responsavelScalarFieldEnum | Tbl_responsavelScalarFieldEnum[]
  }

  /**
   * tbl_cep without action
   */
  export type tbl_cepDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
  }


  /**
   * Model tbl_chat
   */

  export type AggregateTbl_chat = {
    _count: Tbl_chatCountAggregateOutputType | null
    _avg: Tbl_chatAvgAggregateOutputType | null
    _sum: Tbl_chatSumAggregateOutputType | null
    _min: Tbl_chatMinAggregateOutputType | null
    _max: Tbl_chatMaxAggregateOutputType | null
  }

  export type Tbl_chatAvgAggregateOutputType = {
    id_chat: number | null
    id_mensagem: number | null
    id_user: number | null
  }

  export type Tbl_chatSumAggregateOutputType = {
    id_chat: number | null
    id_mensagem: number | null
    id_user: number | null
  }

  export type Tbl_chatMinAggregateOutputType = {
    id_chat: number | null
    id_mensagem: number | null
    id_user: number | null
  }

  export type Tbl_chatMaxAggregateOutputType = {
    id_chat: number | null
    id_mensagem: number | null
    id_user: number | null
  }

  export type Tbl_chatCountAggregateOutputType = {
    id_chat: number
    id_mensagem: number
    id_user: number
    _all: number
  }


  export type Tbl_chatAvgAggregateInputType = {
    id_chat?: true
    id_mensagem?: true
    id_user?: true
  }

  export type Tbl_chatSumAggregateInputType = {
    id_chat?: true
    id_mensagem?: true
    id_user?: true
  }

  export type Tbl_chatMinAggregateInputType = {
    id_chat?: true
    id_mensagem?: true
    id_user?: true
  }

  export type Tbl_chatMaxAggregateInputType = {
    id_chat?: true
    id_mensagem?: true
    id_user?: true
  }

  export type Tbl_chatCountAggregateInputType = {
    id_chat?: true
    id_mensagem?: true
    id_user?: true
    _all?: true
  }

  export type Tbl_chatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_chat to aggregate.
     */
    where?: tbl_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_chats to fetch.
     */
    orderBy?: tbl_chatOrderByWithRelationInput | tbl_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_chats
    **/
    _count?: true | Tbl_chatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_chatAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_chatSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_chatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_chatMaxAggregateInputType
  }

  export type GetTbl_chatAggregateType<T extends Tbl_chatAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_chat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_chat[P]>
      : GetScalarType<T[P], AggregateTbl_chat[P]>
  }




  export type tbl_chatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_chatWhereInput
    orderBy?: tbl_chatOrderByWithAggregationInput | tbl_chatOrderByWithAggregationInput[]
    by: Tbl_chatScalarFieldEnum[] | Tbl_chatScalarFieldEnum
    having?: tbl_chatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_chatCountAggregateInputType | true
    _avg?: Tbl_chatAvgAggregateInputType
    _sum?: Tbl_chatSumAggregateInputType
    _min?: Tbl_chatMinAggregateInputType
    _max?: Tbl_chatMaxAggregateInputType
  }

  export type Tbl_chatGroupByOutputType = {
    id_chat: number
    id_mensagem: number | null
    id_user: number | null
    _count: Tbl_chatCountAggregateOutputType | null
    _avg: Tbl_chatAvgAggregateOutputType | null
    _sum: Tbl_chatSumAggregateOutputType | null
    _min: Tbl_chatMinAggregateOutputType | null
    _max: Tbl_chatMaxAggregateOutputType | null
  }

  type GetTbl_chatGroupByPayload<T extends tbl_chatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_chatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_chatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_chatGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_chatGroupByOutputType[P]>
        }
      >
    >


  export type tbl_chatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_chat?: boolean
    id_mensagem?: boolean
    id_user?: boolean
    tbl_messager?: boolean | tbl_chat$tbl_messagerArgs<ExtArgs>
    tbl_user?: boolean | tbl_chat$tbl_userArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_chat"]>



  export type tbl_chatSelectScalar = {
    id_chat?: boolean
    id_mensagem?: boolean
    id_user?: boolean
  }

  export type tbl_chatOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_chat" | "id_mensagem" | "id_user", ExtArgs["result"]["tbl_chat"]>
  export type tbl_chatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_messager?: boolean | tbl_chat$tbl_messagerArgs<ExtArgs>
    tbl_user?: boolean | tbl_chat$tbl_userArgs<ExtArgs>
  }

  export type $tbl_chatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_chat"
    objects: {
      tbl_messager: Prisma.$tbl_messagerPayload<ExtArgs> | null
      tbl_user: Prisma.$tbl_userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_chat: number
      id_mensagem: number | null
      id_user: number | null
    }, ExtArgs["result"]["tbl_chat"]>
    composites: {}
  }

  type tbl_chatGetPayload<S extends boolean | null | undefined | tbl_chatDefaultArgs> = $Result.GetResult<Prisma.$tbl_chatPayload, S>

  type tbl_chatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_chatFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_chatCountAggregateInputType | true
    }

  export interface tbl_chatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_chat'], meta: { name: 'tbl_chat' } }
    /**
     * Find zero or one Tbl_chat that matches the filter.
     * @param {tbl_chatFindUniqueArgs} args - Arguments to find a Tbl_chat
     * @example
     * // Get one Tbl_chat
     * const tbl_chat = await prisma.tbl_chat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_chatFindUniqueArgs>(args: SelectSubset<T, tbl_chatFindUniqueArgs<ExtArgs>>): Prisma__tbl_chatClient<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_chat that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_chatFindUniqueOrThrowArgs} args - Arguments to find a Tbl_chat
     * @example
     * // Get one Tbl_chat
     * const tbl_chat = await prisma.tbl_chat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_chatFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_chatFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_chatClient<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_chat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_chatFindFirstArgs} args - Arguments to find a Tbl_chat
     * @example
     * // Get one Tbl_chat
     * const tbl_chat = await prisma.tbl_chat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_chatFindFirstArgs>(args?: SelectSubset<T, tbl_chatFindFirstArgs<ExtArgs>>): Prisma__tbl_chatClient<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_chat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_chatFindFirstOrThrowArgs} args - Arguments to find a Tbl_chat
     * @example
     * // Get one Tbl_chat
     * const tbl_chat = await prisma.tbl_chat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_chatFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_chatFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_chatClient<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_chatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_chats
     * const tbl_chats = await prisma.tbl_chat.findMany()
     * 
     * // Get first 10 Tbl_chats
     * const tbl_chats = await prisma.tbl_chat.findMany({ take: 10 })
     * 
     * // Only select the `id_chat`
     * const tbl_chatWithId_chatOnly = await prisma.tbl_chat.findMany({ select: { id_chat: true } })
     * 
     */
    findMany<T extends tbl_chatFindManyArgs>(args?: SelectSubset<T, tbl_chatFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_chat.
     * @param {tbl_chatCreateArgs} args - Arguments to create a Tbl_chat.
     * @example
     * // Create one Tbl_chat
     * const Tbl_chat = await prisma.tbl_chat.create({
     *   data: {
     *     // ... data to create a Tbl_chat
     *   }
     * })
     * 
     */
    create<T extends tbl_chatCreateArgs>(args: SelectSubset<T, tbl_chatCreateArgs<ExtArgs>>): Prisma__tbl_chatClient<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_chats.
     * @param {tbl_chatCreateManyArgs} args - Arguments to create many Tbl_chats.
     * @example
     * // Create many Tbl_chats
     * const tbl_chat = await prisma.tbl_chat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_chatCreateManyArgs>(args?: SelectSubset<T, tbl_chatCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_chat.
     * @param {tbl_chatDeleteArgs} args - Arguments to delete one Tbl_chat.
     * @example
     * // Delete one Tbl_chat
     * const Tbl_chat = await prisma.tbl_chat.delete({
     *   where: {
     *     // ... filter to delete one Tbl_chat
     *   }
     * })
     * 
     */
    delete<T extends tbl_chatDeleteArgs>(args: SelectSubset<T, tbl_chatDeleteArgs<ExtArgs>>): Prisma__tbl_chatClient<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_chat.
     * @param {tbl_chatUpdateArgs} args - Arguments to update one Tbl_chat.
     * @example
     * // Update one Tbl_chat
     * const tbl_chat = await prisma.tbl_chat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_chatUpdateArgs>(args: SelectSubset<T, tbl_chatUpdateArgs<ExtArgs>>): Prisma__tbl_chatClient<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_chats.
     * @param {tbl_chatDeleteManyArgs} args - Arguments to filter Tbl_chats to delete.
     * @example
     * // Delete a few Tbl_chats
     * const { count } = await prisma.tbl_chat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_chatDeleteManyArgs>(args?: SelectSubset<T, tbl_chatDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_chatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_chats
     * const tbl_chat = await prisma.tbl_chat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_chatUpdateManyArgs>(args: SelectSubset<T, tbl_chatUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_chat.
     * @param {tbl_chatUpsertArgs} args - Arguments to update or create a Tbl_chat.
     * @example
     * // Update or create a Tbl_chat
     * const tbl_chat = await prisma.tbl_chat.upsert({
     *   create: {
     *     // ... data to create a Tbl_chat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_chat we want to update
     *   }
     * })
     */
    upsert<T extends tbl_chatUpsertArgs>(args: SelectSubset<T, tbl_chatUpsertArgs<ExtArgs>>): Prisma__tbl_chatClient<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_chatCountArgs} args - Arguments to filter Tbl_chats to count.
     * @example
     * // Count the number of Tbl_chats
     * const count = await prisma.tbl_chat.count({
     *   where: {
     *     // ... the filter for the Tbl_chats we want to count
     *   }
     * })
    **/
    count<T extends tbl_chatCountArgs>(
      args?: Subset<T, tbl_chatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_chatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_chatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_chatAggregateArgs>(args: Subset<T, Tbl_chatAggregateArgs>): Prisma.PrismaPromise<GetTbl_chatAggregateType<T>>

    /**
     * Group by Tbl_chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_chatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_chatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_chatGroupByArgs['orderBy'] }
        : { orderBy?: tbl_chatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_chatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_chatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_chat model
   */
  readonly fields: tbl_chatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_chat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_chatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_messager<T extends tbl_chat$tbl_messagerArgs<ExtArgs> = {}>(args?: Subset<T, tbl_chat$tbl_messagerArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_user<T extends tbl_chat$tbl_userArgs<ExtArgs> = {}>(args?: Subset<T, tbl_chat$tbl_userArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_chat model
   */
  interface tbl_chatFieldRefs {
    readonly id_chat: FieldRef<"tbl_chat", 'Int'>
    readonly id_mensagem: FieldRef<"tbl_chat", 'Int'>
    readonly id_user: FieldRef<"tbl_chat", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_chat findUnique
   */
  export type tbl_chatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * Filter, which tbl_chat to fetch.
     */
    where: tbl_chatWhereUniqueInput
  }

  /**
   * tbl_chat findUniqueOrThrow
   */
  export type tbl_chatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * Filter, which tbl_chat to fetch.
     */
    where: tbl_chatWhereUniqueInput
  }

  /**
   * tbl_chat findFirst
   */
  export type tbl_chatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * Filter, which tbl_chat to fetch.
     */
    where?: tbl_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_chats to fetch.
     */
    orderBy?: tbl_chatOrderByWithRelationInput | tbl_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_chats.
     */
    cursor?: tbl_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_chats.
     */
    distinct?: Tbl_chatScalarFieldEnum | Tbl_chatScalarFieldEnum[]
  }

  /**
   * tbl_chat findFirstOrThrow
   */
  export type tbl_chatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * Filter, which tbl_chat to fetch.
     */
    where?: tbl_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_chats to fetch.
     */
    orderBy?: tbl_chatOrderByWithRelationInput | tbl_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_chats.
     */
    cursor?: tbl_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_chats.
     */
    distinct?: Tbl_chatScalarFieldEnum | Tbl_chatScalarFieldEnum[]
  }

  /**
   * tbl_chat findMany
   */
  export type tbl_chatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * Filter, which tbl_chats to fetch.
     */
    where?: tbl_chatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_chats to fetch.
     */
    orderBy?: tbl_chatOrderByWithRelationInput | tbl_chatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_chats.
     */
    cursor?: tbl_chatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_chats.
     */
    skip?: number
    distinct?: Tbl_chatScalarFieldEnum | Tbl_chatScalarFieldEnum[]
  }

  /**
   * tbl_chat create
   */
  export type tbl_chatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_chat.
     */
    data?: XOR<tbl_chatCreateInput, tbl_chatUncheckedCreateInput>
  }

  /**
   * tbl_chat createMany
   */
  export type tbl_chatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_chats.
     */
    data: tbl_chatCreateManyInput | tbl_chatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_chat update
   */
  export type tbl_chatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_chat.
     */
    data: XOR<tbl_chatUpdateInput, tbl_chatUncheckedUpdateInput>
    /**
     * Choose, which tbl_chat to update.
     */
    where: tbl_chatWhereUniqueInput
  }

  /**
   * tbl_chat updateMany
   */
  export type tbl_chatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_chats.
     */
    data: XOR<tbl_chatUpdateManyMutationInput, tbl_chatUncheckedUpdateManyInput>
    /**
     * Filter which tbl_chats to update
     */
    where?: tbl_chatWhereInput
    /**
     * Limit how many tbl_chats to update.
     */
    limit?: number
  }

  /**
   * tbl_chat upsert
   */
  export type tbl_chatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_chat to update in case it exists.
     */
    where: tbl_chatWhereUniqueInput
    /**
     * In case the tbl_chat found by the `where` argument doesn't exist, create a new tbl_chat with this data.
     */
    create: XOR<tbl_chatCreateInput, tbl_chatUncheckedCreateInput>
    /**
     * In case the tbl_chat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_chatUpdateInput, tbl_chatUncheckedUpdateInput>
  }

  /**
   * tbl_chat delete
   */
  export type tbl_chatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    /**
     * Filter which tbl_chat to delete.
     */
    where: tbl_chatWhereUniqueInput
  }

  /**
   * tbl_chat deleteMany
   */
  export type tbl_chatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_chats to delete
     */
    where?: tbl_chatWhereInput
    /**
     * Limit how many tbl_chats to delete.
     */
    limit?: number
  }

  /**
   * tbl_chat.tbl_messager
   */
  export type tbl_chat$tbl_messagerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    where?: tbl_messagerWhereInput
  }

  /**
   * tbl_chat.tbl_user
   */
  export type tbl_chat$tbl_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    where?: tbl_userWhereInput
  }

  /**
   * tbl_chat without action
   */
  export type tbl_chatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
  }


  /**
   * Model tbl_clinica
   */

  export type AggregateTbl_clinica = {
    _count: Tbl_clinicaCountAggregateOutputType | null
    _avg: Tbl_clinicaAvgAggregateOutputType | null
    _sum: Tbl_clinicaSumAggregateOutputType | null
    _min: Tbl_clinicaMinAggregateOutputType | null
    _max: Tbl_clinicaMaxAggregateOutputType | null
  }

  export type Tbl_clinicaAvgAggregateOutputType = {
    id_clinica: number | null
    id_cep: number | null
    id_user: number | null
  }

  export type Tbl_clinicaSumAggregateOutputType = {
    id_clinica: number | null
    id_cep: number | null
    id_user: number | null
  }

  export type Tbl_clinicaMinAggregateOutputType = {
    id_clinica: number | null
    nome: string | null
    cnpj: string | null
    telefone: string | null
    email: string | null
    id_cep: number | null
    id_user: number | null
  }

  export type Tbl_clinicaMaxAggregateOutputType = {
    id_clinica: number | null
    nome: string | null
    cnpj: string | null
    telefone: string | null
    email: string | null
    id_cep: number | null
    id_user: number | null
  }

  export type Tbl_clinicaCountAggregateOutputType = {
    id_clinica: number
    nome: number
    cnpj: number
    telefone: number
    email: number
    id_cep: number
    id_user: number
    _all: number
  }


  export type Tbl_clinicaAvgAggregateInputType = {
    id_clinica?: true
    id_cep?: true
    id_user?: true
  }

  export type Tbl_clinicaSumAggregateInputType = {
    id_clinica?: true
    id_cep?: true
    id_user?: true
  }

  export type Tbl_clinicaMinAggregateInputType = {
    id_clinica?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    id_cep?: true
    id_user?: true
  }

  export type Tbl_clinicaMaxAggregateInputType = {
    id_clinica?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    id_cep?: true
    id_user?: true
  }

  export type Tbl_clinicaCountAggregateInputType = {
    id_clinica?: true
    nome?: true
    cnpj?: true
    telefone?: true
    email?: true
    id_cep?: true
    id_user?: true
    _all?: true
  }

  export type Tbl_clinicaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_clinica to aggregate.
     */
    where?: tbl_clinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_clinicas to fetch.
     */
    orderBy?: tbl_clinicaOrderByWithRelationInput | tbl_clinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_clinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_clinicas
    **/
    _count?: true | Tbl_clinicaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_clinicaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_clinicaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_clinicaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_clinicaMaxAggregateInputType
  }

  export type GetTbl_clinicaAggregateType<T extends Tbl_clinicaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_clinica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_clinica[P]>
      : GetScalarType<T[P], AggregateTbl_clinica[P]>
  }




  export type tbl_clinicaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_clinicaWhereInput
    orderBy?: tbl_clinicaOrderByWithAggregationInput | tbl_clinicaOrderByWithAggregationInput[]
    by: Tbl_clinicaScalarFieldEnum[] | Tbl_clinicaScalarFieldEnum
    having?: tbl_clinicaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_clinicaCountAggregateInputType | true
    _avg?: Tbl_clinicaAvgAggregateInputType
    _sum?: Tbl_clinicaSumAggregateInputType
    _min?: Tbl_clinicaMinAggregateInputType
    _max?: Tbl_clinicaMaxAggregateInputType
  }

  export type Tbl_clinicaGroupByOutputType = {
    id_clinica: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    id_cep: number | null
    id_user: number | null
    _count: Tbl_clinicaCountAggregateOutputType | null
    _avg: Tbl_clinicaAvgAggregateOutputType | null
    _sum: Tbl_clinicaSumAggregateOutputType | null
    _min: Tbl_clinicaMinAggregateOutputType | null
    _max: Tbl_clinicaMaxAggregateOutputType | null
  }

  type GetTbl_clinicaGroupByPayload<T extends tbl_clinicaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_clinicaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_clinicaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_clinicaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_clinicaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_clinicaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_clinica?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    id_cep?: boolean
    id_user?: boolean
    tbl_cep?: boolean | tbl_clinica$tbl_cepArgs<ExtArgs>
    tbl_user?: boolean | tbl_clinica$tbl_userArgs<ExtArgs>
    tbl_especialidade_clinica?: boolean | tbl_clinica$tbl_especialidade_clinicaArgs<ExtArgs>
    _count?: boolean | Tbl_clinicaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_clinica"]>



  export type tbl_clinicaSelectScalar = {
    id_clinica?: boolean
    nome?: boolean
    cnpj?: boolean
    telefone?: boolean
    email?: boolean
    id_cep?: boolean
    id_user?: boolean
  }

  export type tbl_clinicaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_clinica" | "nome" | "cnpj" | "telefone" | "email" | "id_cep" | "id_user", ExtArgs["result"]["tbl_clinica"]>
  export type tbl_clinicaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_cep?: boolean | tbl_clinica$tbl_cepArgs<ExtArgs>
    tbl_user?: boolean | tbl_clinica$tbl_userArgs<ExtArgs>
    tbl_especialidade_clinica?: boolean | tbl_clinica$tbl_especialidade_clinicaArgs<ExtArgs>
    _count?: boolean | Tbl_clinicaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_clinicaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_clinica"
    objects: {
      tbl_cep: Prisma.$tbl_cepPayload<ExtArgs> | null
      tbl_user: Prisma.$tbl_userPayload<ExtArgs> | null
      tbl_especialidade_clinica: Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_clinica: number
      nome: string
      cnpj: string
      telefone: string
      email: string
      id_cep: number | null
      id_user: number | null
    }, ExtArgs["result"]["tbl_clinica"]>
    composites: {}
  }

  type tbl_clinicaGetPayload<S extends boolean | null | undefined | tbl_clinicaDefaultArgs> = $Result.GetResult<Prisma.$tbl_clinicaPayload, S>

  type tbl_clinicaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_clinicaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_clinicaCountAggregateInputType | true
    }

  export interface tbl_clinicaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_clinica'], meta: { name: 'tbl_clinica' } }
    /**
     * Find zero or one Tbl_clinica that matches the filter.
     * @param {tbl_clinicaFindUniqueArgs} args - Arguments to find a Tbl_clinica
     * @example
     * // Get one Tbl_clinica
     * const tbl_clinica = await prisma.tbl_clinica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_clinicaFindUniqueArgs>(args: SelectSubset<T, tbl_clinicaFindUniqueArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_clinica that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_clinicaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_clinica
     * @example
     * // Get one Tbl_clinica
     * const tbl_clinica = await prisma.tbl_clinica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_clinicaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_clinicaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_clinica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_clinicaFindFirstArgs} args - Arguments to find a Tbl_clinica
     * @example
     * // Get one Tbl_clinica
     * const tbl_clinica = await prisma.tbl_clinica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_clinicaFindFirstArgs>(args?: SelectSubset<T, tbl_clinicaFindFirstArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_clinica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_clinicaFindFirstOrThrowArgs} args - Arguments to find a Tbl_clinica
     * @example
     * // Get one Tbl_clinica
     * const tbl_clinica = await prisma.tbl_clinica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_clinicaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_clinicaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_clinicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_clinicaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_clinicas
     * const tbl_clinicas = await prisma.tbl_clinica.findMany()
     * 
     * // Get first 10 Tbl_clinicas
     * const tbl_clinicas = await prisma.tbl_clinica.findMany({ take: 10 })
     * 
     * // Only select the `id_clinica`
     * const tbl_clinicaWithId_clinicaOnly = await prisma.tbl_clinica.findMany({ select: { id_clinica: true } })
     * 
     */
    findMany<T extends tbl_clinicaFindManyArgs>(args?: SelectSubset<T, tbl_clinicaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_clinica.
     * @param {tbl_clinicaCreateArgs} args - Arguments to create a Tbl_clinica.
     * @example
     * // Create one Tbl_clinica
     * const Tbl_clinica = await prisma.tbl_clinica.create({
     *   data: {
     *     // ... data to create a Tbl_clinica
     *   }
     * })
     * 
     */
    create<T extends tbl_clinicaCreateArgs>(args: SelectSubset<T, tbl_clinicaCreateArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_clinicas.
     * @param {tbl_clinicaCreateManyArgs} args - Arguments to create many Tbl_clinicas.
     * @example
     * // Create many Tbl_clinicas
     * const tbl_clinica = await prisma.tbl_clinica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_clinicaCreateManyArgs>(args?: SelectSubset<T, tbl_clinicaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_clinica.
     * @param {tbl_clinicaDeleteArgs} args - Arguments to delete one Tbl_clinica.
     * @example
     * // Delete one Tbl_clinica
     * const Tbl_clinica = await prisma.tbl_clinica.delete({
     *   where: {
     *     // ... filter to delete one Tbl_clinica
     *   }
     * })
     * 
     */
    delete<T extends tbl_clinicaDeleteArgs>(args: SelectSubset<T, tbl_clinicaDeleteArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_clinica.
     * @param {tbl_clinicaUpdateArgs} args - Arguments to update one Tbl_clinica.
     * @example
     * // Update one Tbl_clinica
     * const tbl_clinica = await prisma.tbl_clinica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_clinicaUpdateArgs>(args: SelectSubset<T, tbl_clinicaUpdateArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_clinicas.
     * @param {tbl_clinicaDeleteManyArgs} args - Arguments to filter Tbl_clinicas to delete.
     * @example
     * // Delete a few Tbl_clinicas
     * const { count } = await prisma.tbl_clinica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_clinicaDeleteManyArgs>(args?: SelectSubset<T, tbl_clinicaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_clinicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_clinicaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_clinicas
     * const tbl_clinica = await prisma.tbl_clinica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_clinicaUpdateManyArgs>(args: SelectSubset<T, tbl_clinicaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_clinica.
     * @param {tbl_clinicaUpsertArgs} args - Arguments to update or create a Tbl_clinica.
     * @example
     * // Update or create a Tbl_clinica
     * const tbl_clinica = await prisma.tbl_clinica.upsert({
     *   create: {
     *     // ... data to create a Tbl_clinica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_clinica we want to update
     *   }
     * })
     */
    upsert<T extends tbl_clinicaUpsertArgs>(args: SelectSubset<T, tbl_clinicaUpsertArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_clinicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_clinicaCountArgs} args - Arguments to filter Tbl_clinicas to count.
     * @example
     * // Count the number of Tbl_clinicas
     * const count = await prisma.tbl_clinica.count({
     *   where: {
     *     // ... the filter for the Tbl_clinicas we want to count
     *   }
     * })
    **/
    count<T extends tbl_clinicaCountArgs>(
      args?: Subset<T, tbl_clinicaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_clinicaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_clinica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_clinicaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_clinicaAggregateArgs>(args: Subset<T, Tbl_clinicaAggregateArgs>): Prisma.PrismaPromise<GetTbl_clinicaAggregateType<T>>

    /**
     * Group by Tbl_clinica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_clinicaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_clinicaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_clinicaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_clinicaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_clinicaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_clinicaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_clinica model
   */
  readonly fields: tbl_clinicaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_clinica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_clinicaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_cep<T extends tbl_clinica$tbl_cepArgs<ExtArgs> = {}>(args?: Subset<T, tbl_clinica$tbl_cepArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_user<T extends tbl_clinica$tbl_userArgs<ExtArgs> = {}>(args?: Subset<T, tbl_clinica$tbl_userArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_especialidade_clinica<T extends tbl_clinica$tbl_especialidade_clinicaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_clinica$tbl_especialidade_clinicaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_clinica model
   */
  interface tbl_clinicaFieldRefs {
    readonly id_clinica: FieldRef<"tbl_clinica", 'Int'>
    readonly nome: FieldRef<"tbl_clinica", 'String'>
    readonly cnpj: FieldRef<"tbl_clinica", 'String'>
    readonly telefone: FieldRef<"tbl_clinica", 'String'>
    readonly email: FieldRef<"tbl_clinica", 'String'>
    readonly id_cep: FieldRef<"tbl_clinica", 'Int'>
    readonly id_user: FieldRef<"tbl_clinica", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_clinica findUnique
   */
  export type tbl_clinicaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_clinica to fetch.
     */
    where: tbl_clinicaWhereUniqueInput
  }

  /**
   * tbl_clinica findUniqueOrThrow
   */
  export type tbl_clinicaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_clinica to fetch.
     */
    where: tbl_clinicaWhereUniqueInput
  }

  /**
   * tbl_clinica findFirst
   */
  export type tbl_clinicaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_clinica to fetch.
     */
    where?: tbl_clinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_clinicas to fetch.
     */
    orderBy?: tbl_clinicaOrderByWithRelationInput | tbl_clinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_clinicas.
     */
    cursor?: tbl_clinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_clinicas.
     */
    distinct?: Tbl_clinicaScalarFieldEnum | Tbl_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_clinica findFirstOrThrow
   */
  export type tbl_clinicaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_clinica to fetch.
     */
    where?: tbl_clinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_clinicas to fetch.
     */
    orderBy?: tbl_clinicaOrderByWithRelationInput | tbl_clinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_clinicas.
     */
    cursor?: tbl_clinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_clinicas.
     */
    distinct?: Tbl_clinicaScalarFieldEnum | Tbl_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_clinica findMany
   */
  export type tbl_clinicaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_clinicas to fetch.
     */
    where?: tbl_clinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_clinicas to fetch.
     */
    orderBy?: tbl_clinicaOrderByWithRelationInput | tbl_clinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_clinicas.
     */
    cursor?: tbl_clinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_clinicas.
     */
    skip?: number
    distinct?: Tbl_clinicaScalarFieldEnum | Tbl_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_clinica create
   */
  export type tbl_clinicaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_clinica.
     */
    data: XOR<tbl_clinicaCreateInput, tbl_clinicaUncheckedCreateInput>
  }

  /**
   * tbl_clinica createMany
   */
  export type tbl_clinicaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_clinicas.
     */
    data: tbl_clinicaCreateManyInput | tbl_clinicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_clinica update
   */
  export type tbl_clinicaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_clinica.
     */
    data: XOR<tbl_clinicaUpdateInput, tbl_clinicaUncheckedUpdateInput>
    /**
     * Choose, which tbl_clinica to update.
     */
    where: tbl_clinicaWhereUniqueInput
  }

  /**
   * tbl_clinica updateMany
   */
  export type tbl_clinicaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_clinicas.
     */
    data: XOR<tbl_clinicaUpdateManyMutationInput, tbl_clinicaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_clinicas to update
     */
    where?: tbl_clinicaWhereInput
    /**
     * Limit how many tbl_clinicas to update.
     */
    limit?: number
  }

  /**
   * tbl_clinica upsert
   */
  export type tbl_clinicaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_clinica to update in case it exists.
     */
    where: tbl_clinicaWhereUniqueInput
    /**
     * In case the tbl_clinica found by the `where` argument doesn't exist, create a new tbl_clinica with this data.
     */
    create: XOR<tbl_clinicaCreateInput, tbl_clinicaUncheckedCreateInput>
    /**
     * In case the tbl_clinica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_clinicaUpdateInput, tbl_clinicaUncheckedUpdateInput>
  }

  /**
   * tbl_clinica delete
   */
  export type tbl_clinicaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    /**
     * Filter which tbl_clinica to delete.
     */
    where: tbl_clinicaWhereUniqueInput
  }

  /**
   * tbl_clinica deleteMany
   */
  export type tbl_clinicaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_clinicas to delete
     */
    where?: tbl_clinicaWhereInput
    /**
     * Limit how many tbl_clinicas to delete.
     */
    limit?: number
  }

  /**
   * tbl_clinica.tbl_cep
   */
  export type tbl_clinica$tbl_cepArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    where?: tbl_cepWhereInput
  }

  /**
   * tbl_clinica.tbl_user
   */
  export type tbl_clinica$tbl_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    where?: tbl_userWhereInput
  }

  /**
   * tbl_clinica.tbl_especialidade_clinica
   */
  export type tbl_clinica$tbl_especialidade_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    where?: tbl_especialidade_clinicaWhereInput
    orderBy?: tbl_especialidade_clinicaOrderByWithRelationInput | tbl_especialidade_clinicaOrderByWithRelationInput[]
    cursor?: tbl_especialidade_clinicaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_especialidade_clinicaScalarFieldEnum | Tbl_especialidade_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_clinica without action
   */
  export type tbl_clinicaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_especialidade
   */

  export type AggregateTbl_especialidade = {
    _count: Tbl_especialidadeCountAggregateOutputType | null
    _avg: Tbl_especialidadeAvgAggregateOutputType | null
    _sum: Tbl_especialidadeSumAggregateOutputType | null
    _min: Tbl_especialidadeMinAggregateOutputType | null
    _max: Tbl_especialidadeMaxAggregateOutputType | null
  }

  export type Tbl_especialidadeAvgAggregateOutputType = {
    id_especialidade: number | null
  }

  export type Tbl_especialidadeSumAggregateOutputType = {
    id_especialidade: number | null
  }

  export type Tbl_especialidadeMinAggregateOutputType = {
    id_especialidade: number | null
    especialidade: string | null
  }

  export type Tbl_especialidadeMaxAggregateOutputType = {
    id_especialidade: number | null
    especialidade: string | null
  }

  export type Tbl_especialidadeCountAggregateOutputType = {
    id_especialidade: number
    especialidade: number
    _all: number
  }


  export type Tbl_especialidadeAvgAggregateInputType = {
    id_especialidade?: true
  }

  export type Tbl_especialidadeSumAggregateInputType = {
    id_especialidade?: true
  }

  export type Tbl_especialidadeMinAggregateInputType = {
    id_especialidade?: true
    especialidade?: true
  }

  export type Tbl_especialidadeMaxAggregateInputType = {
    id_especialidade?: true
    especialidade?: true
  }

  export type Tbl_especialidadeCountAggregateInputType = {
    id_especialidade?: true
    especialidade?: true
    _all?: true
  }

  export type Tbl_especialidadeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_especialidade to aggregate.
     */
    where?: tbl_especialidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidades to fetch.
     */
    orderBy?: tbl_especialidadeOrderByWithRelationInput | tbl_especialidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_especialidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_especialidades
    **/
    _count?: true | Tbl_especialidadeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_especialidadeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_especialidadeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_especialidadeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_especialidadeMaxAggregateInputType
  }

  export type GetTbl_especialidadeAggregateType<T extends Tbl_especialidadeAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_especialidade]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_especialidade[P]>
      : GetScalarType<T[P], AggregateTbl_especialidade[P]>
  }




  export type tbl_especialidadeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_especialidadeWhereInput
    orderBy?: tbl_especialidadeOrderByWithAggregationInput | tbl_especialidadeOrderByWithAggregationInput[]
    by: Tbl_especialidadeScalarFieldEnum[] | Tbl_especialidadeScalarFieldEnum
    having?: tbl_especialidadeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_especialidadeCountAggregateInputType | true
    _avg?: Tbl_especialidadeAvgAggregateInputType
    _sum?: Tbl_especialidadeSumAggregateInputType
    _min?: Tbl_especialidadeMinAggregateInputType
    _max?: Tbl_especialidadeMaxAggregateInputType
  }

  export type Tbl_especialidadeGroupByOutputType = {
    id_especialidade: number
    especialidade: string | null
    _count: Tbl_especialidadeCountAggregateOutputType | null
    _avg: Tbl_especialidadeAvgAggregateOutputType | null
    _sum: Tbl_especialidadeSumAggregateOutputType | null
    _min: Tbl_especialidadeMinAggregateOutputType | null
    _max: Tbl_especialidadeMaxAggregateOutputType | null
  }

  type GetTbl_especialidadeGroupByPayload<T extends tbl_especialidadeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_especialidadeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_especialidadeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_especialidadeGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_especialidadeGroupByOutputType[P]>
        }
      >
    >


  export type tbl_especialidadeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_especialidade?: boolean
    especialidade?: boolean
    tbl_especialidade_clinica?: boolean | tbl_especialidade$tbl_especialidade_clinicaArgs<ExtArgs>
    tbl_especialidade_medico?: boolean | tbl_especialidade$tbl_especialidade_medicoArgs<ExtArgs>
    _count?: boolean | Tbl_especialidadeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_especialidade"]>



  export type tbl_especialidadeSelectScalar = {
    id_especialidade?: boolean
    especialidade?: boolean
  }

  export type tbl_especialidadeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_especialidade" | "especialidade", ExtArgs["result"]["tbl_especialidade"]>
  export type tbl_especialidadeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_especialidade_clinica?: boolean | tbl_especialidade$tbl_especialidade_clinicaArgs<ExtArgs>
    tbl_especialidade_medico?: boolean | tbl_especialidade$tbl_especialidade_medicoArgs<ExtArgs>
    _count?: boolean | Tbl_especialidadeCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_especialidadePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_especialidade"
    objects: {
      tbl_especialidade_clinica: Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>[]
      tbl_especialidade_medico: Prisma.$tbl_especialidade_medicoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_especialidade: number
      especialidade: string | null
    }, ExtArgs["result"]["tbl_especialidade"]>
    composites: {}
  }

  type tbl_especialidadeGetPayload<S extends boolean | null | undefined | tbl_especialidadeDefaultArgs> = $Result.GetResult<Prisma.$tbl_especialidadePayload, S>

  type tbl_especialidadeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_especialidadeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_especialidadeCountAggregateInputType | true
    }

  export interface tbl_especialidadeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_especialidade'], meta: { name: 'tbl_especialidade' } }
    /**
     * Find zero or one Tbl_especialidade that matches the filter.
     * @param {tbl_especialidadeFindUniqueArgs} args - Arguments to find a Tbl_especialidade
     * @example
     * // Get one Tbl_especialidade
     * const tbl_especialidade = await prisma.tbl_especialidade.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_especialidadeFindUniqueArgs>(args: SelectSubset<T, tbl_especialidadeFindUniqueArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_especialidade that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_especialidadeFindUniqueOrThrowArgs} args - Arguments to find a Tbl_especialidade
     * @example
     * // Get one Tbl_especialidade
     * const tbl_especialidade = await prisma.tbl_especialidade.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_especialidadeFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_especialidadeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_especialidade that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidadeFindFirstArgs} args - Arguments to find a Tbl_especialidade
     * @example
     * // Get one Tbl_especialidade
     * const tbl_especialidade = await prisma.tbl_especialidade.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_especialidadeFindFirstArgs>(args?: SelectSubset<T, tbl_especialidadeFindFirstArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_especialidade that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidadeFindFirstOrThrowArgs} args - Arguments to find a Tbl_especialidade
     * @example
     * // Get one Tbl_especialidade
     * const tbl_especialidade = await prisma.tbl_especialidade.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_especialidadeFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_especialidadeFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_especialidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidadeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_especialidades
     * const tbl_especialidades = await prisma.tbl_especialidade.findMany()
     * 
     * // Get first 10 Tbl_especialidades
     * const tbl_especialidades = await prisma.tbl_especialidade.findMany({ take: 10 })
     * 
     * // Only select the `id_especialidade`
     * const tbl_especialidadeWithId_especialidadeOnly = await prisma.tbl_especialidade.findMany({ select: { id_especialidade: true } })
     * 
     */
    findMany<T extends tbl_especialidadeFindManyArgs>(args?: SelectSubset<T, tbl_especialidadeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_especialidade.
     * @param {tbl_especialidadeCreateArgs} args - Arguments to create a Tbl_especialidade.
     * @example
     * // Create one Tbl_especialidade
     * const Tbl_especialidade = await prisma.tbl_especialidade.create({
     *   data: {
     *     // ... data to create a Tbl_especialidade
     *   }
     * })
     * 
     */
    create<T extends tbl_especialidadeCreateArgs>(args: SelectSubset<T, tbl_especialidadeCreateArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_especialidades.
     * @param {tbl_especialidadeCreateManyArgs} args - Arguments to create many Tbl_especialidades.
     * @example
     * // Create many Tbl_especialidades
     * const tbl_especialidade = await prisma.tbl_especialidade.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_especialidadeCreateManyArgs>(args?: SelectSubset<T, tbl_especialidadeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_especialidade.
     * @param {tbl_especialidadeDeleteArgs} args - Arguments to delete one Tbl_especialidade.
     * @example
     * // Delete one Tbl_especialidade
     * const Tbl_especialidade = await prisma.tbl_especialidade.delete({
     *   where: {
     *     // ... filter to delete one Tbl_especialidade
     *   }
     * })
     * 
     */
    delete<T extends tbl_especialidadeDeleteArgs>(args: SelectSubset<T, tbl_especialidadeDeleteArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_especialidade.
     * @param {tbl_especialidadeUpdateArgs} args - Arguments to update one Tbl_especialidade.
     * @example
     * // Update one Tbl_especialidade
     * const tbl_especialidade = await prisma.tbl_especialidade.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_especialidadeUpdateArgs>(args: SelectSubset<T, tbl_especialidadeUpdateArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_especialidades.
     * @param {tbl_especialidadeDeleteManyArgs} args - Arguments to filter Tbl_especialidades to delete.
     * @example
     * // Delete a few Tbl_especialidades
     * const { count } = await prisma.tbl_especialidade.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_especialidadeDeleteManyArgs>(args?: SelectSubset<T, tbl_especialidadeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_especialidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidadeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_especialidades
     * const tbl_especialidade = await prisma.tbl_especialidade.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_especialidadeUpdateManyArgs>(args: SelectSubset<T, tbl_especialidadeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_especialidade.
     * @param {tbl_especialidadeUpsertArgs} args - Arguments to update or create a Tbl_especialidade.
     * @example
     * // Update or create a Tbl_especialidade
     * const tbl_especialidade = await prisma.tbl_especialidade.upsert({
     *   create: {
     *     // ... data to create a Tbl_especialidade
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_especialidade we want to update
     *   }
     * })
     */
    upsert<T extends tbl_especialidadeUpsertArgs>(args: SelectSubset<T, tbl_especialidadeUpsertArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_especialidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidadeCountArgs} args - Arguments to filter Tbl_especialidades to count.
     * @example
     * // Count the number of Tbl_especialidades
     * const count = await prisma.tbl_especialidade.count({
     *   where: {
     *     // ... the filter for the Tbl_especialidades we want to count
     *   }
     * })
    **/
    count<T extends tbl_especialidadeCountArgs>(
      args?: Subset<T, tbl_especialidadeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_especialidadeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_especialidade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_especialidadeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_especialidadeAggregateArgs>(args: Subset<T, Tbl_especialidadeAggregateArgs>): Prisma.PrismaPromise<GetTbl_especialidadeAggregateType<T>>

    /**
     * Group by Tbl_especialidade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidadeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_especialidadeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_especialidadeGroupByArgs['orderBy'] }
        : { orderBy?: tbl_especialidadeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_especialidadeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_especialidadeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_especialidade model
   */
  readonly fields: tbl_especialidadeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_especialidade.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_especialidadeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_especialidade_clinica<T extends tbl_especialidade$tbl_especialidade_clinicaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_especialidade$tbl_especialidade_clinicaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_especialidade_medico<T extends tbl_especialidade$tbl_especialidade_medicoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_especialidade$tbl_especialidade_medicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_especialidade model
   */
  interface tbl_especialidadeFieldRefs {
    readonly id_especialidade: FieldRef<"tbl_especialidade", 'Int'>
    readonly especialidade: FieldRef<"tbl_especialidade", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_especialidade findUnique
   */
  export type tbl_especialidadeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade to fetch.
     */
    where: tbl_especialidadeWhereUniqueInput
  }

  /**
   * tbl_especialidade findUniqueOrThrow
   */
  export type tbl_especialidadeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade to fetch.
     */
    where: tbl_especialidadeWhereUniqueInput
  }

  /**
   * tbl_especialidade findFirst
   */
  export type tbl_especialidadeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade to fetch.
     */
    where?: tbl_especialidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidades to fetch.
     */
    orderBy?: tbl_especialidadeOrderByWithRelationInput | tbl_especialidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_especialidades.
     */
    cursor?: tbl_especialidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_especialidades.
     */
    distinct?: Tbl_especialidadeScalarFieldEnum | Tbl_especialidadeScalarFieldEnum[]
  }

  /**
   * tbl_especialidade findFirstOrThrow
   */
  export type tbl_especialidadeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade to fetch.
     */
    where?: tbl_especialidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidades to fetch.
     */
    orderBy?: tbl_especialidadeOrderByWithRelationInput | tbl_especialidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_especialidades.
     */
    cursor?: tbl_especialidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_especialidades.
     */
    distinct?: Tbl_especialidadeScalarFieldEnum | Tbl_especialidadeScalarFieldEnum[]
  }

  /**
   * tbl_especialidade findMany
   */
  export type tbl_especialidadeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidades to fetch.
     */
    where?: tbl_especialidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidades to fetch.
     */
    orderBy?: tbl_especialidadeOrderByWithRelationInput | tbl_especialidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_especialidades.
     */
    cursor?: tbl_especialidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidades.
     */
    skip?: number
    distinct?: Tbl_especialidadeScalarFieldEnum | Tbl_especialidadeScalarFieldEnum[]
  }

  /**
   * tbl_especialidade create
   */
  export type tbl_especialidadeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_especialidade.
     */
    data?: XOR<tbl_especialidadeCreateInput, tbl_especialidadeUncheckedCreateInput>
  }

  /**
   * tbl_especialidade createMany
   */
  export type tbl_especialidadeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_especialidades.
     */
    data: tbl_especialidadeCreateManyInput | tbl_especialidadeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_especialidade update
   */
  export type tbl_especialidadeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_especialidade.
     */
    data: XOR<tbl_especialidadeUpdateInput, tbl_especialidadeUncheckedUpdateInput>
    /**
     * Choose, which tbl_especialidade to update.
     */
    where: tbl_especialidadeWhereUniqueInput
  }

  /**
   * tbl_especialidade updateMany
   */
  export type tbl_especialidadeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_especialidades.
     */
    data: XOR<tbl_especialidadeUpdateManyMutationInput, tbl_especialidadeUncheckedUpdateManyInput>
    /**
     * Filter which tbl_especialidades to update
     */
    where?: tbl_especialidadeWhereInput
    /**
     * Limit how many tbl_especialidades to update.
     */
    limit?: number
  }

  /**
   * tbl_especialidade upsert
   */
  export type tbl_especialidadeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_especialidade to update in case it exists.
     */
    where: tbl_especialidadeWhereUniqueInput
    /**
     * In case the tbl_especialidade found by the `where` argument doesn't exist, create a new tbl_especialidade with this data.
     */
    create: XOR<tbl_especialidadeCreateInput, tbl_especialidadeUncheckedCreateInput>
    /**
     * In case the tbl_especialidade was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_especialidadeUpdateInput, tbl_especialidadeUncheckedUpdateInput>
  }

  /**
   * tbl_especialidade delete
   */
  export type tbl_especialidadeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    /**
     * Filter which tbl_especialidade to delete.
     */
    where: tbl_especialidadeWhereUniqueInput
  }

  /**
   * tbl_especialidade deleteMany
   */
  export type tbl_especialidadeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_especialidades to delete
     */
    where?: tbl_especialidadeWhereInput
    /**
     * Limit how many tbl_especialidades to delete.
     */
    limit?: number
  }

  /**
   * tbl_especialidade.tbl_especialidade_clinica
   */
  export type tbl_especialidade$tbl_especialidade_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    where?: tbl_especialidade_clinicaWhereInput
    orderBy?: tbl_especialidade_clinicaOrderByWithRelationInput | tbl_especialidade_clinicaOrderByWithRelationInput[]
    cursor?: tbl_especialidade_clinicaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_especialidade_clinicaScalarFieldEnum | Tbl_especialidade_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_especialidade.tbl_especialidade_medico
   */
  export type tbl_especialidade$tbl_especialidade_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    where?: tbl_especialidade_medicoWhereInput
    orderBy?: tbl_especialidade_medicoOrderByWithRelationInput | tbl_especialidade_medicoOrderByWithRelationInput[]
    cursor?: tbl_especialidade_medicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_especialidade_medicoScalarFieldEnum | Tbl_especialidade_medicoScalarFieldEnum[]
  }

  /**
   * tbl_especialidade without action
   */
  export type tbl_especialidadeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
  }


  /**
   * Model tbl_especialidade_clinica
   */

  export type AggregateTbl_especialidade_clinica = {
    _count: Tbl_especialidade_clinicaCountAggregateOutputType | null
    _avg: Tbl_especialidade_clinicaAvgAggregateOutputType | null
    _sum: Tbl_especialidade_clinicaSumAggregateOutputType | null
    _min: Tbl_especialidade_clinicaMinAggregateOutputType | null
    _max: Tbl_especialidade_clinicaMaxAggregateOutputType | null
  }

  export type Tbl_especialidade_clinicaAvgAggregateOutputType = {
    id: number | null
    id_clinica: number | null
    id_especialidade: number | null
  }

  export type Tbl_especialidade_clinicaSumAggregateOutputType = {
    id: number | null
    id_clinica: number | null
    id_especialidade: number | null
  }

  export type Tbl_especialidade_clinicaMinAggregateOutputType = {
    id: number | null
    id_clinica: number | null
    id_especialidade: number | null
  }

  export type Tbl_especialidade_clinicaMaxAggregateOutputType = {
    id: number | null
    id_clinica: number | null
    id_especialidade: number | null
  }

  export type Tbl_especialidade_clinicaCountAggregateOutputType = {
    id: number
    id_clinica: number
    id_especialidade: number
    _all: number
  }


  export type Tbl_especialidade_clinicaAvgAggregateInputType = {
    id?: true
    id_clinica?: true
    id_especialidade?: true
  }

  export type Tbl_especialidade_clinicaSumAggregateInputType = {
    id?: true
    id_clinica?: true
    id_especialidade?: true
  }

  export type Tbl_especialidade_clinicaMinAggregateInputType = {
    id?: true
    id_clinica?: true
    id_especialidade?: true
  }

  export type Tbl_especialidade_clinicaMaxAggregateInputType = {
    id?: true
    id_clinica?: true
    id_especialidade?: true
  }

  export type Tbl_especialidade_clinicaCountAggregateInputType = {
    id?: true
    id_clinica?: true
    id_especialidade?: true
    _all?: true
  }

  export type Tbl_especialidade_clinicaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_especialidade_clinica to aggregate.
     */
    where?: tbl_especialidade_clinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidade_clinicas to fetch.
     */
    orderBy?: tbl_especialidade_clinicaOrderByWithRelationInput | tbl_especialidade_clinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_especialidade_clinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidade_clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidade_clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_especialidade_clinicas
    **/
    _count?: true | Tbl_especialidade_clinicaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_especialidade_clinicaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_especialidade_clinicaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_especialidade_clinicaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_especialidade_clinicaMaxAggregateInputType
  }

  export type GetTbl_especialidade_clinicaAggregateType<T extends Tbl_especialidade_clinicaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_especialidade_clinica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_especialidade_clinica[P]>
      : GetScalarType<T[P], AggregateTbl_especialidade_clinica[P]>
  }




  export type tbl_especialidade_clinicaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_especialidade_clinicaWhereInput
    orderBy?: tbl_especialidade_clinicaOrderByWithAggregationInput | tbl_especialidade_clinicaOrderByWithAggregationInput[]
    by: Tbl_especialidade_clinicaScalarFieldEnum[] | Tbl_especialidade_clinicaScalarFieldEnum
    having?: tbl_especialidade_clinicaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_especialidade_clinicaCountAggregateInputType | true
    _avg?: Tbl_especialidade_clinicaAvgAggregateInputType
    _sum?: Tbl_especialidade_clinicaSumAggregateInputType
    _min?: Tbl_especialidade_clinicaMinAggregateInputType
    _max?: Tbl_especialidade_clinicaMaxAggregateInputType
  }

  export type Tbl_especialidade_clinicaGroupByOutputType = {
    id: number
    id_clinica: number | null
    id_especialidade: number | null
    _count: Tbl_especialidade_clinicaCountAggregateOutputType | null
    _avg: Tbl_especialidade_clinicaAvgAggregateOutputType | null
    _sum: Tbl_especialidade_clinicaSumAggregateOutputType | null
    _min: Tbl_especialidade_clinicaMinAggregateOutputType | null
    _max: Tbl_especialidade_clinicaMaxAggregateOutputType | null
  }

  type GetTbl_especialidade_clinicaGroupByPayload<T extends tbl_especialidade_clinicaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_especialidade_clinicaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_especialidade_clinicaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_especialidade_clinicaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_especialidade_clinicaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_especialidade_clinicaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_clinica?: boolean
    id_especialidade?: boolean
    tbl_clinica?: boolean | tbl_especialidade_clinica$tbl_clinicaArgs<ExtArgs>
    tbl_especialidade?: boolean | tbl_especialidade_clinica$tbl_especialidadeArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_especialidade_clinica"]>



  export type tbl_especialidade_clinicaSelectScalar = {
    id?: boolean
    id_clinica?: boolean
    id_especialidade?: boolean
  }

  export type tbl_especialidade_clinicaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_clinica" | "id_especialidade", ExtArgs["result"]["tbl_especialidade_clinica"]>
  export type tbl_especialidade_clinicaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_clinica?: boolean | tbl_especialidade_clinica$tbl_clinicaArgs<ExtArgs>
    tbl_especialidade?: boolean | tbl_especialidade_clinica$tbl_especialidadeArgs<ExtArgs>
  }

  export type $tbl_especialidade_clinicaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_especialidade_clinica"
    objects: {
      tbl_clinica: Prisma.$tbl_clinicaPayload<ExtArgs> | null
      tbl_especialidade: Prisma.$tbl_especialidadePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_clinica: number | null
      id_especialidade: number | null
    }, ExtArgs["result"]["tbl_especialidade_clinica"]>
    composites: {}
  }

  type tbl_especialidade_clinicaGetPayload<S extends boolean | null | undefined | tbl_especialidade_clinicaDefaultArgs> = $Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload, S>

  type tbl_especialidade_clinicaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_especialidade_clinicaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_especialidade_clinicaCountAggregateInputType | true
    }

  export interface tbl_especialidade_clinicaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_especialidade_clinica'], meta: { name: 'tbl_especialidade_clinica' } }
    /**
     * Find zero or one Tbl_especialidade_clinica that matches the filter.
     * @param {tbl_especialidade_clinicaFindUniqueArgs} args - Arguments to find a Tbl_especialidade_clinica
     * @example
     * // Get one Tbl_especialidade_clinica
     * const tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_especialidade_clinicaFindUniqueArgs>(args: SelectSubset<T, tbl_especialidade_clinicaFindUniqueArgs<ExtArgs>>): Prisma__tbl_especialidade_clinicaClient<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_especialidade_clinica that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_especialidade_clinicaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_especialidade_clinica
     * @example
     * // Get one Tbl_especialidade_clinica
     * const tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_especialidade_clinicaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_especialidade_clinicaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_especialidade_clinicaClient<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_especialidade_clinica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_clinicaFindFirstArgs} args - Arguments to find a Tbl_especialidade_clinica
     * @example
     * // Get one Tbl_especialidade_clinica
     * const tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_especialidade_clinicaFindFirstArgs>(args?: SelectSubset<T, tbl_especialidade_clinicaFindFirstArgs<ExtArgs>>): Prisma__tbl_especialidade_clinicaClient<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_especialidade_clinica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_clinicaFindFirstOrThrowArgs} args - Arguments to find a Tbl_especialidade_clinica
     * @example
     * // Get one Tbl_especialidade_clinica
     * const tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_especialidade_clinicaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_especialidade_clinicaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_especialidade_clinicaClient<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_especialidade_clinicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_clinicaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_especialidade_clinicas
     * const tbl_especialidade_clinicas = await prisma.tbl_especialidade_clinica.findMany()
     * 
     * // Get first 10 Tbl_especialidade_clinicas
     * const tbl_especialidade_clinicas = await prisma.tbl_especialidade_clinica.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_especialidade_clinicaWithIdOnly = await prisma.tbl_especialidade_clinica.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_especialidade_clinicaFindManyArgs>(args?: SelectSubset<T, tbl_especialidade_clinicaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_especialidade_clinica.
     * @param {tbl_especialidade_clinicaCreateArgs} args - Arguments to create a Tbl_especialidade_clinica.
     * @example
     * // Create one Tbl_especialidade_clinica
     * const Tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.create({
     *   data: {
     *     // ... data to create a Tbl_especialidade_clinica
     *   }
     * })
     * 
     */
    create<T extends tbl_especialidade_clinicaCreateArgs>(args: SelectSubset<T, tbl_especialidade_clinicaCreateArgs<ExtArgs>>): Prisma__tbl_especialidade_clinicaClient<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_especialidade_clinicas.
     * @param {tbl_especialidade_clinicaCreateManyArgs} args - Arguments to create many Tbl_especialidade_clinicas.
     * @example
     * // Create many Tbl_especialidade_clinicas
     * const tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_especialidade_clinicaCreateManyArgs>(args?: SelectSubset<T, tbl_especialidade_clinicaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_especialidade_clinica.
     * @param {tbl_especialidade_clinicaDeleteArgs} args - Arguments to delete one Tbl_especialidade_clinica.
     * @example
     * // Delete one Tbl_especialidade_clinica
     * const Tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.delete({
     *   where: {
     *     // ... filter to delete one Tbl_especialidade_clinica
     *   }
     * })
     * 
     */
    delete<T extends tbl_especialidade_clinicaDeleteArgs>(args: SelectSubset<T, tbl_especialidade_clinicaDeleteArgs<ExtArgs>>): Prisma__tbl_especialidade_clinicaClient<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_especialidade_clinica.
     * @param {tbl_especialidade_clinicaUpdateArgs} args - Arguments to update one Tbl_especialidade_clinica.
     * @example
     * // Update one Tbl_especialidade_clinica
     * const tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_especialidade_clinicaUpdateArgs>(args: SelectSubset<T, tbl_especialidade_clinicaUpdateArgs<ExtArgs>>): Prisma__tbl_especialidade_clinicaClient<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_especialidade_clinicas.
     * @param {tbl_especialidade_clinicaDeleteManyArgs} args - Arguments to filter Tbl_especialidade_clinicas to delete.
     * @example
     * // Delete a few Tbl_especialidade_clinicas
     * const { count } = await prisma.tbl_especialidade_clinica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_especialidade_clinicaDeleteManyArgs>(args?: SelectSubset<T, tbl_especialidade_clinicaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_especialidade_clinicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_clinicaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_especialidade_clinicas
     * const tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_especialidade_clinicaUpdateManyArgs>(args: SelectSubset<T, tbl_especialidade_clinicaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_especialidade_clinica.
     * @param {tbl_especialidade_clinicaUpsertArgs} args - Arguments to update or create a Tbl_especialidade_clinica.
     * @example
     * // Update or create a Tbl_especialidade_clinica
     * const tbl_especialidade_clinica = await prisma.tbl_especialidade_clinica.upsert({
     *   create: {
     *     // ... data to create a Tbl_especialidade_clinica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_especialidade_clinica we want to update
     *   }
     * })
     */
    upsert<T extends tbl_especialidade_clinicaUpsertArgs>(args: SelectSubset<T, tbl_especialidade_clinicaUpsertArgs<ExtArgs>>): Prisma__tbl_especialidade_clinicaClient<$Result.GetResult<Prisma.$tbl_especialidade_clinicaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_especialidade_clinicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_clinicaCountArgs} args - Arguments to filter Tbl_especialidade_clinicas to count.
     * @example
     * // Count the number of Tbl_especialidade_clinicas
     * const count = await prisma.tbl_especialidade_clinica.count({
     *   where: {
     *     // ... the filter for the Tbl_especialidade_clinicas we want to count
     *   }
     * })
    **/
    count<T extends tbl_especialidade_clinicaCountArgs>(
      args?: Subset<T, tbl_especialidade_clinicaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_especialidade_clinicaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_especialidade_clinica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_especialidade_clinicaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_especialidade_clinicaAggregateArgs>(args: Subset<T, Tbl_especialidade_clinicaAggregateArgs>): Prisma.PrismaPromise<GetTbl_especialidade_clinicaAggregateType<T>>

    /**
     * Group by Tbl_especialidade_clinica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_clinicaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_especialidade_clinicaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_especialidade_clinicaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_especialidade_clinicaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_especialidade_clinicaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_especialidade_clinicaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_especialidade_clinica model
   */
  readonly fields: tbl_especialidade_clinicaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_especialidade_clinica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_especialidade_clinicaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_clinica<T extends tbl_especialidade_clinica$tbl_clinicaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_especialidade_clinica$tbl_clinicaArgs<ExtArgs>>): Prisma__tbl_clinicaClient<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_especialidade<T extends tbl_especialidade_clinica$tbl_especialidadeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_especialidade_clinica$tbl_especialidadeArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_especialidade_clinica model
   */
  interface tbl_especialidade_clinicaFieldRefs {
    readonly id: FieldRef<"tbl_especialidade_clinica", 'Int'>
    readonly id_clinica: FieldRef<"tbl_especialidade_clinica", 'Int'>
    readonly id_especialidade: FieldRef<"tbl_especialidade_clinica", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_especialidade_clinica findUnique
   */
  export type tbl_especialidade_clinicaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_clinica to fetch.
     */
    where: tbl_especialidade_clinicaWhereUniqueInput
  }

  /**
   * tbl_especialidade_clinica findUniqueOrThrow
   */
  export type tbl_especialidade_clinicaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_clinica to fetch.
     */
    where: tbl_especialidade_clinicaWhereUniqueInput
  }

  /**
   * tbl_especialidade_clinica findFirst
   */
  export type tbl_especialidade_clinicaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_clinica to fetch.
     */
    where?: tbl_especialidade_clinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidade_clinicas to fetch.
     */
    orderBy?: tbl_especialidade_clinicaOrderByWithRelationInput | tbl_especialidade_clinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_especialidade_clinicas.
     */
    cursor?: tbl_especialidade_clinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidade_clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidade_clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_especialidade_clinicas.
     */
    distinct?: Tbl_especialidade_clinicaScalarFieldEnum | Tbl_especialidade_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_especialidade_clinica findFirstOrThrow
   */
  export type tbl_especialidade_clinicaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_clinica to fetch.
     */
    where?: tbl_especialidade_clinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidade_clinicas to fetch.
     */
    orderBy?: tbl_especialidade_clinicaOrderByWithRelationInput | tbl_especialidade_clinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_especialidade_clinicas.
     */
    cursor?: tbl_especialidade_clinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidade_clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidade_clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_especialidade_clinicas.
     */
    distinct?: Tbl_especialidade_clinicaScalarFieldEnum | Tbl_especialidade_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_especialidade_clinica findMany
   */
  export type tbl_especialidade_clinicaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_clinicas to fetch.
     */
    where?: tbl_especialidade_clinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidade_clinicas to fetch.
     */
    orderBy?: tbl_especialidade_clinicaOrderByWithRelationInput | tbl_especialidade_clinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_especialidade_clinicas.
     */
    cursor?: tbl_especialidade_clinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidade_clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidade_clinicas.
     */
    skip?: number
    distinct?: Tbl_especialidade_clinicaScalarFieldEnum | Tbl_especialidade_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_especialidade_clinica create
   */
  export type tbl_especialidade_clinicaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_especialidade_clinica.
     */
    data?: XOR<tbl_especialidade_clinicaCreateInput, tbl_especialidade_clinicaUncheckedCreateInput>
  }

  /**
   * tbl_especialidade_clinica createMany
   */
  export type tbl_especialidade_clinicaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_especialidade_clinicas.
     */
    data: tbl_especialidade_clinicaCreateManyInput | tbl_especialidade_clinicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_especialidade_clinica update
   */
  export type tbl_especialidade_clinicaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_especialidade_clinica.
     */
    data: XOR<tbl_especialidade_clinicaUpdateInput, tbl_especialidade_clinicaUncheckedUpdateInput>
    /**
     * Choose, which tbl_especialidade_clinica to update.
     */
    where: tbl_especialidade_clinicaWhereUniqueInput
  }

  /**
   * tbl_especialidade_clinica updateMany
   */
  export type tbl_especialidade_clinicaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_especialidade_clinicas.
     */
    data: XOR<tbl_especialidade_clinicaUpdateManyMutationInput, tbl_especialidade_clinicaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_especialidade_clinicas to update
     */
    where?: tbl_especialidade_clinicaWhereInput
    /**
     * Limit how many tbl_especialidade_clinicas to update.
     */
    limit?: number
  }

  /**
   * tbl_especialidade_clinica upsert
   */
  export type tbl_especialidade_clinicaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_especialidade_clinica to update in case it exists.
     */
    where: tbl_especialidade_clinicaWhereUniqueInput
    /**
     * In case the tbl_especialidade_clinica found by the `where` argument doesn't exist, create a new tbl_especialidade_clinica with this data.
     */
    create: XOR<tbl_especialidade_clinicaCreateInput, tbl_especialidade_clinicaUncheckedCreateInput>
    /**
     * In case the tbl_especialidade_clinica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_especialidade_clinicaUpdateInput, tbl_especialidade_clinicaUncheckedUpdateInput>
  }

  /**
   * tbl_especialidade_clinica delete
   */
  export type tbl_especialidade_clinicaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
    /**
     * Filter which tbl_especialidade_clinica to delete.
     */
    where: tbl_especialidade_clinicaWhereUniqueInput
  }

  /**
   * tbl_especialidade_clinica deleteMany
   */
  export type tbl_especialidade_clinicaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_especialidade_clinicas to delete
     */
    where?: tbl_especialidade_clinicaWhereInput
    /**
     * Limit how many tbl_especialidade_clinicas to delete.
     */
    limit?: number
  }

  /**
   * tbl_especialidade_clinica.tbl_clinica
   */
  export type tbl_especialidade_clinica$tbl_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    where?: tbl_clinicaWhereInput
  }

  /**
   * tbl_especialidade_clinica.tbl_especialidade
   */
  export type tbl_especialidade_clinica$tbl_especialidadeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    where?: tbl_especialidadeWhereInput
  }

  /**
   * tbl_especialidade_clinica without action
   */
  export type tbl_especialidade_clinicaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_clinica
     */
    select?: tbl_especialidade_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_clinica
     */
    omit?: tbl_especialidade_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_clinicaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_especialidade_medico
   */

  export type AggregateTbl_especialidade_medico = {
    _count: Tbl_especialidade_medicoCountAggregateOutputType | null
    _avg: Tbl_especialidade_medicoAvgAggregateOutputType | null
    _sum: Tbl_especialidade_medicoSumAggregateOutputType | null
    _min: Tbl_especialidade_medicoMinAggregateOutputType | null
    _max: Tbl_especialidade_medicoMaxAggregateOutputType | null
  }

  export type Tbl_especialidade_medicoAvgAggregateOutputType = {
    id: number | null
    id_medico: number | null
    id_especialidade: number | null
  }

  export type Tbl_especialidade_medicoSumAggregateOutputType = {
    id: number | null
    id_medico: number | null
    id_especialidade: number | null
  }

  export type Tbl_especialidade_medicoMinAggregateOutputType = {
    id: number | null
    id_medico: number | null
    id_especialidade: number | null
  }

  export type Tbl_especialidade_medicoMaxAggregateOutputType = {
    id: number | null
    id_medico: number | null
    id_especialidade: number | null
  }

  export type Tbl_especialidade_medicoCountAggregateOutputType = {
    id: number
    id_medico: number
    id_especialidade: number
    _all: number
  }


  export type Tbl_especialidade_medicoAvgAggregateInputType = {
    id?: true
    id_medico?: true
    id_especialidade?: true
  }

  export type Tbl_especialidade_medicoSumAggregateInputType = {
    id?: true
    id_medico?: true
    id_especialidade?: true
  }

  export type Tbl_especialidade_medicoMinAggregateInputType = {
    id?: true
    id_medico?: true
    id_especialidade?: true
  }

  export type Tbl_especialidade_medicoMaxAggregateInputType = {
    id?: true
    id_medico?: true
    id_especialidade?: true
  }

  export type Tbl_especialidade_medicoCountAggregateInputType = {
    id?: true
    id_medico?: true
    id_especialidade?: true
    _all?: true
  }

  export type Tbl_especialidade_medicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_especialidade_medico to aggregate.
     */
    where?: tbl_especialidade_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidade_medicos to fetch.
     */
    orderBy?: tbl_especialidade_medicoOrderByWithRelationInput | tbl_especialidade_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_especialidade_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidade_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidade_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_especialidade_medicos
    **/
    _count?: true | Tbl_especialidade_medicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_especialidade_medicoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_especialidade_medicoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_especialidade_medicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_especialidade_medicoMaxAggregateInputType
  }

  export type GetTbl_especialidade_medicoAggregateType<T extends Tbl_especialidade_medicoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_especialidade_medico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_especialidade_medico[P]>
      : GetScalarType<T[P], AggregateTbl_especialidade_medico[P]>
  }




  export type tbl_especialidade_medicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_especialidade_medicoWhereInput
    orderBy?: tbl_especialidade_medicoOrderByWithAggregationInput | tbl_especialidade_medicoOrderByWithAggregationInput[]
    by: Tbl_especialidade_medicoScalarFieldEnum[] | Tbl_especialidade_medicoScalarFieldEnum
    having?: tbl_especialidade_medicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_especialidade_medicoCountAggregateInputType | true
    _avg?: Tbl_especialidade_medicoAvgAggregateInputType
    _sum?: Tbl_especialidade_medicoSumAggregateInputType
    _min?: Tbl_especialidade_medicoMinAggregateInputType
    _max?: Tbl_especialidade_medicoMaxAggregateInputType
  }

  export type Tbl_especialidade_medicoGroupByOutputType = {
    id: number
    id_medico: number | null
    id_especialidade: number | null
    _count: Tbl_especialidade_medicoCountAggregateOutputType | null
    _avg: Tbl_especialidade_medicoAvgAggregateOutputType | null
    _sum: Tbl_especialidade_medicoSumAggregateOutputType | null
    _min: Tbl_especialidade_medicoMinAggregateOutputType | null
    _max: Tbl_especialidade_medicoMaxAggregateOutputType | null
  }

  type GetTbl_especialidade_medicoGroupByPayload<T extends tbl_especialidade_medicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_especialidade_medicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_especialidade_medicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_especialidade_medicoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_especialidade_medicoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_especialidade_medicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_medico?: boolean
    id_especialidade?: boolean
    tbl_especialidade?: boolean | tbl_especialidade_medico$tbl_especialidadeArgs<ExtArgs>
    tbl_medico?: boolean | tbl_especialidade_medico$tbl_medicoArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_especialidade_medico"]>



  export type tbl_especialidade_medicoSelectScalar = {
    id?: boolean
    id_medico?: boolean
    id_especialidade?: boolean
  }

  export type tbl_especialidade_medicoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_medico" | "id_especialidade", ExtArgs["result"]["tbl_especialidade_medico"]>
  export type tbl_especialidade_medicoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_especialidade?: boolean | tbl_especialidade_medico$tbl_especialidadeArgs<ExtArgs>
    tbl_medico?: boolean | tbl_especialidade_medico$tbl_medicoArgs<ExtArgs>
  }

  export type $tbl_especialidade_medicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_especialidade_medico"
    objects: {
      tbl_especialidade: Prisma.$tbl_especialidadePayload<ExtArgs> | null
      tbl_medico: Prisma.$tbl_medicoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_medico: number | null
      id_especialidade: number | null
    }, ExtArgs["result"]["tbl_especialidade_medico"]>
    composites: {}
  }

  type tbl_especialidade_medicoGetPayload<S extends boolean | null | undefined | tbl_especialidade_medicoDefaultArgs> = $Result.GetResult<Prisma.$tbl_especialidade_medicoPayload, S>

  type tbl_especialidade_medicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_especialidade_medicoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_especialidade_medicoCountAggregateInputType | true
    }

  export interface tbl_especialidade_medicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_especialidade_medico'], meta: { name: 'tbl_especialidade_medico' } }
    /**
     * Find zero or one Tbl_especialidade_medico that matches the filter.
     * @param {tbl_especialidade_medicoFindUniqueArgs} args - Arguments to find a Tbl_especialidade_medico
     * @example
     * // Get one Tbl_especialidade_medico
     * const tbl_especialidade_medico = await prisma.tbl_especialidade_medico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_especialidade_medicoFindUniqueArgs>(args: SelectSubset<T, tbl_especialidade_medicoFindUniqueArgs<ExtArgs>>): Prisma__tbl_especialidade_medicoClient<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_especialidade_medico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_especialidade_medicoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_especialidade_medico
     * @example
     * // Get one Tbl_especialidade_medico
     * const tbl_especialidade_medico = await prisma.tbl_especialidade_medico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_especialidade_medicoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_especialidade_medicoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_especialidade_medicoClient<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_especialidade_medico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_medicoFindFirstArgs} args - Arguments to find a Tbl_especialidade_medico
     * @example
     * // Get one Tbl_especialidade_medico
     * const tbl_especialidade_medico = await prisma.tbl_especialidade_medico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_especialidade_medicoFindFirstArgs>(args?: SelectSubset<T, tbl_especialidade_medicoFindFirstArgs<ExtArgs>>): Prisma__tbl_especialidade_medicoClient<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_especialidade_medico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_medicoFindFirstOrThrowArgs} args - Arguments to find a Tbl_especialidade_medico
     * @example
     * // Get one Tbl_especialidade_medico
     * const tbl_especialidade_medico = await prisma.tbl_especialidade_medico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_especialidade_medicoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_especialidade_medicoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_especialidade_medicoClient<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_especialidade_medicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_medicoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_especialidade_medicos
     * const tbl_especialidade_medicos = await prisma.tbl_especialidade_medico.findMany()
     * 
     * // Get first 10 Tbl_especialidade_medicos
     * const tbl_especialidade_medicos = await prisma.tbl_especialidade_medico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_especialidade_medicoWithIdOnly = await prisma.tbl_especialidade_medico.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_especialidade_medicoFindManyArgs>(args?: SelectSubset<T, tbl_especialidade_medicoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_especialidade_medico.
     * @param {tbl_especialidade_medicoCreateArgs} args - Arguments to create a Tbl_especialidade_medico.
     * @example
     * // Create one Tbl_especialidade_medico
     * const Tbl_especialidade_medico = await prisma.tbl_especialidade_medico.create({
     *   data: {
     *     // ... data to create a Tbl_especialidade_medico
     *   }
     * })
     * 
     */
    create<T extends tbl_especialidade_medicoCreateArgs>(args: SelectSubset<T, tbl_especialidade_medicoCreateArgs<ExtArgs>>): Prisma__tbl_especialidade_medicoClient<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_especialidade_medicos.
     * @param {tbl_especialidade_medicoCreateManyArgs} args - Arguments to create many Tbl_especialidade_medicos.
     * @example
     * // Create many Tbl_especialidade_medicos
     * const tbl_especialidade_medico = await prisma.tbl_especialidade_medico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_especialidade_medicoCreateManyArgs>(args?: SelectSubset<T, tbl_especialidade_medicoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_especialidade_medico.
     * @param {tbl_especialidade_medicoDeleteArgs} args - Arguments to delete one Tbl_especialidade_medico.
     * @example
     * // Delete one Tbl_especialidade_medico
     * const Tbl_especialidade_medico = await prisma.tbl_especialidade_medico.delete({
     *   where: {
     *     // ... filter to delete one Tbl_especialidade_medico
     *   }
     * })
     * 
     */
    delete<T extends tbl_especialidade_medicoDeleteArgs>(args: SelectSubset<T, tbl_especialidade_medicoDeleteArgs<ExtArgs>>): Prisma__tbl_especialidade_medicoClient<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_especialidade_medico.
     * @param {tbl_especialidade_medicoUpdateArgs} args - Arguments to update one Tbl_especialidade_medico.
     * @example
     * // Update one Tbl_especialidade_medico
     * const tbl_especialidade_medico = await prisma.tbl_especialidade_medico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_especialidade_medicoUpdateArgs>(args: SelectSubset<T, tbl_especialidade_medicoUpdateArgs<ExtArgs>>): Prisma__tbl_especialidade_medicoClient<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_especialidade_medicos.
     * @param {tbl_especialidade_medicoDeleteManyArgs} args - Arguments to filter Tbl_especialidade_medicos to delete.
     * @example
     * // Delete a few Tbl_especialidade_medicos
     * const { count } = await prisma.tbl_especialidade_medico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_especialidade_medicoDeleteManyArgs>(args?: SelectSubset<T, tbl_especialidade_medicoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_especialidade_medicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_medicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_especialidade_medicos
     * const tbl_especialidade_medico = await prisma.tbl_especialidade_medico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_especialidade_medicoUpdateManyArgs>(args: SelectSubset<T, tbl_especialidade_medicoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_especialidade_medico.
     * @param {tbl_especialidade_medicoUpsertArgs} args - Arguments to update or create a Tbl_especialidade_medico.
     * @example
     * // Update or create a Tbl_especialidade_medico
     * const tbl_especialidade_medico = await prisma.tbl_especialidade_medico.upsert({
     *   create: {
     *     // ... data to create a Tbl_especialidade_medico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_especialidade_medico we want to update
     *   }
     * })
     */
    upsert<T extends tbl_especialidade_medicoUpsertArgs>(args: SelectSubset<T, tbl_especialidade_medicoUpsertArgs<ExtArgs>>): Prisma__tbl_especialidade_medicoClient<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_especialidade_medicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_medicoCountArgs} args - Arguments to filter Tbl_especialidade_medicos to count.
     * @example
     * // Count the number of Tbl_especialidade_medicos
     * const count = await prisma.tbl_especialidade_medico.count({
     *   where: {
     *     // ... the filter for the Tbl_especialidade_medicos we want to count
     *   }
     * })
    **/
    count<T extends tbl_especialidade_medicoCountArgs>(
      args?: Subset<T, tbl_especialidade_medicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_especialidade_medicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_especialidade_medico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_especialidade_medicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_especialidade_medicoAggregateArgs>(args: Subset<T, Tbl_especialidade_medicoAggregateArgs>): Prisma.PrismaPromise<GetTbl_especialidade_medicoAggregateType<T>>

    /**
     * Group by Tbl_especialidade_medico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_especialidade_medicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_especialidade_medicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_especialidade_medicoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_especialidade_medicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_especialidade_medicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_especialidade_medicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_especialidade_medico model
   */
  readonly fields: tbl_especialidade_medicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_especialidade_medico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_especialidade_medicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_especialidade<T extends tbl_especialidade_medico$tbl_especialidadeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_especialidade_medico$tbl_especialidadeArgs<ExtArgs>>): Prisma__tbl_especialidadeClient<$Result.GetResult<Prisma.$tbl_especialidadePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_medico<T extends tbl_especialidade_medico$tbl_medicoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_especialidade_medico$tbl_medicoArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_especialidade_medico model
   */
  interface tbl_especialidade_medicoFieldRefs {
    readonly id: FieldRef<"tbl_especialidade_medico", 'Int'>
    readonly id_medico: FieldRef<"tbl_especialidade_medico", 'Int'>
    readonly id_especialidade: FieldRef<"tbl_especialidade_medico", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_especialidade_medico findUnique
   */
  export type tbl_especialidade_medicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_medico to fetch.
     */
    where: tbl_especialidade_medicoWhereUniqueInput
  }

  /**
   * tbl_especialidade_medico findUniqueOrThrow
   */
  export type tbl_especialidade_medicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_medico to fetch.
     */
    where: tbl_especialidade_medicoWhereUniqueInput
  }

  /**
   * tbl_especialidade_medico findFirst
   */
  export type tbl_especialidade_medicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_medico to fetch.
     */
    where?: tbl_especialidade_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidade_medicos to fetch.
     */
    orderBy?: tbl_especialidade_medicoOrderByWithRelationInput | tbl_especialidade_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_especialidade_medicos.
     */
    cursor?: tbl_especialidade_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidade_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidade_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_especialidade_medicos.
     */
    distinct?: Tbl_especialidade_medicoScalarFieldEnum | Tbl_especialidade_medicoScalarFieldEnum[]
  }

  /**
   * tbl_especialidade_medico findFirstOrThrow
   */
  export type tbl_especialidade_medicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_medico to fetch.
     */
    where?: tbl_especialidade_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidade_medicos to fetch.
     */
    orderBy?: tbl_especialidade_medicoOrderByWithRelationInput | tbl_especialidade_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_especialidade_medicos.
     */
    cursor?: tbl_especialidade_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidade_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidade_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_especialidade_medicos.
     */
    distinct?: Tbl_especialidade_medicoScalarFieldEnum | Tbl_especialidade_medicoScalarFieldEnum[]
  }

  /**
   * tbl_especialidade_medico findMany
   */
  export type tbl_especialidade_medicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_especialidade_medicos to fetch.
     */
    where?: tbl_especialidade_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_especialidade_medicos to fetch.
     */
    orderBy?: tbl_especialidade_medicoOrderByWithRelationInput | tbl_especialidade_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_especialidade_medicos.
     */
    cursor?: tbl_especialidade_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_especialidade_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_especialidade_medicos.
     */
    skip?: number
    distinct?: Tbl_especialidade_medicoScalarFieldEnum | Tbl_especialidade_medicoScalarFieldEnum[]
  }

  /**
   * tbl_especialidade_medico create
   */
  export type tbl_especialidade_medicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_especialidade_medico.
     */
    data?: XOR<tbl_especialidade_medicoCreateInput, tbl_especialidade_medicoUncheckedCreateInput>
  }

  /**
   * tbl_especialidade_medico createMany
   */
  export type tbl_especialidade_medicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_especialidade_medicos.
     */
    data: tbl_especialidade_medicoCreateManyInput | tbl_especialidade_medicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_especialidade_medico update
   */
  export type tbl_especialidade_medicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_especialidade_medico.
     */
    data: XOR<tbl_especialidade_medicoUpdateInput, tbl_especialidade_medicoUncheckedUpdateInput>
    /**
     * Choose, which tbl_especialidade_medico to update.
     */
    where: tbl_especialidade_medicoWhereUniqueInput
  }

  /**
   * tbl_especialidade_medico updateMany
   */
  export type tbl_especialidade_medicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_especialidade_medicos.
     */
    data: XOR<tbl_especialidade_medicoUpdateManyMutationInput, tbl_especialidade_medicoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_especialidade_medicos to update
     */
    where?: tbl_especialidade_medicoWhereInput
    /**
     * Limit how many tbl_especialidade_medicos to update.
     */
    limit?: number
  }

  /**
   * tbl_especialidade_medico upsert
   */
  export type tbl_especialidade_medicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_especialidade_medico to update in case it exists.
     */
    where: tbl_especialidade_medicoWhereUniqueInput
    /**
     * In case the tbl_especialidade_medico found by the `where` argument doesn't exist, create a new tbl_especialidade_medico with this data.
     */
    create: XOR<tbl_especialidade_medicoCreateInput, tbl_especialidade_medicoUncheckedCreateInput>
    /**
     * In case the tbl_especialidade_medico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_especialidade_medicoUpdateInput, tbl_especialidade_medicoUncheckedUpdateInput>
  }

  /**
   * tbl_especialidade_medico delete
   */
  export type tbl_especialidade_medicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    /**
     * Filter which tbl_especialidade_medico to delete.
     */
    where: tbl_especialidade_medicoWhereUniqueInput
  }

  /**
   * tbl_especialidade_medico deleteMany
   */
  export type tbl_especialidade_medicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_especialidade_medicos to delete
     */
    where?: tbl_especialidade_medicoWhereInput
    /**
     * Limit how many tbl_especialidade_medicos to delete.
     */
    limit?: number
  }

  /**
   * tbl_especialidade_medico.tbl_especialidade
   */
  export type tbl_especialidade_medico$tbl_especialidadeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade
     */
    select?: tbl_especialidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade
     */
    omit?: tbl_especialidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidadeInclude<ExtArgs> | null
    where?: tbl_especialidadeWhereInput
  }

  /**
   * tbl_especialidade_medico.tbl_medico
   */
  export type tbl_especialidade_medico$tbl_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    where?: tbl_medicoWhereInput
  }

  /**
   * tbl_especialidade_medico without action
   */
  export type tbl_especialidade_medicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_medico
   */

  export type AggregateTbl_medico = {
    _count: Tbl_medicoCountAggregateOutputType | null
    _avg: Tbl_medicoAvgAggregateOutputType | null
    _sum: Tbl_medicoSumAggregateOutputType | null
    _min: Tbl_medicoMinAggregateOutputType | null
    _max: Tbl_medicoMaxAggregateOutputType | null
  }

  export type Tbl_medicoAvgAggregateOutputType = {
    id_medico: number | null
    id_sexo: number | null
    id_user: number | null
  }

  export type Tbl_medicoSumAggregateOutputType = {
    id_medico: number | null
    id_sexo: number | null
    id_user: number | null
  }

  export type Tbl_medicoMinAggregateOutputType = {
    id_medico: number | null
    nome: string | null
    email: string | null
    telefone: string | null
    crm: string | null
    cpf: string | null
    foto: string | null
    id_sexo: number | null
    id_user: number | null
  }

  export type Tbl_medicoMaxAggregateOutputType = {
    id_medico: number | null
    nome: string | null
    email: string | null
    telefone: string | null
    crm: string | null
    cpf: string | null
    foto: string | null
    id_sexo: number | null
    id_user: number | null
  }

  export type Tbl_medicoCountAggregateOutputType = {
    id_medico: number
    nome: number
    email: number
    telefone: number
    crm: number
    cpf: number
    foto: number
    id_sexo: number
    id_user: number
    _all: number
  }


  export type Tbl_medicoAvgAggregateInputType = {
    id_medico?: true
    id_sexo?: true
    id_user?: true
  }

  export type Tbl_medicoSumAggregateInputType = {
    id_medico?: true
    id_sexo?: true
    id_user?: true
  }

  export type Tbl_medicoMinAggregateInputType = {
    id_medico?: true
    nome?: true
    email?: true
    telefone?: true
    crm?: true
    cpf?: true
    foto?: true
    id_sexo?: true
    id_user?: true
  }

  export type Tbl_medicoMaxAggregateInputType = {
    id_medico?: true
    nome?: true
    email?: true
    telefone?: true
    crm?: true
    cpf?: true
    foto?: true
    id_sexo?: true
    id_user?: true
  }

  export type Tbl_medicoCountAggregateInputType = {
    id_medico?: true
    nome?: true
    email?: true
    telefone?: true
    crm?: true
    cpf?: true
    foto?: true
    id_sexo?: true
    id_user?: true
    _all?: true
  }

  export type Tbl_medicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_medico to aggregate.
     */
    where?: tbl_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_medicos to fetch.
     */
    orderBy?: tbl_medicoOrderByWithRelationInput | tbl_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_medicos
    **/
    _count?: true | Tbl_medicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_medicoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_medicoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_medicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_medicoMaxAggregateInputType
  }

  export type GetTbl_medicoAggregateType<T extends Tbl_medicoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_medico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_medico[P]>
      : GetScalarType<T[P], AggregateTbl_medico[P]>
  }




  export type tbl_medicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_medicoWhereInput
    orderBy?: tbl_medicoOrderByWithAggregationInput | tbl_medicoOrderByWithAggregationInput[]
    by: Tbl_medicoScalarFieldEnum[] | Tbl_medicoScalarFieldEnum
    having?: tbl_medicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_medicoCountAggregateInputType | true
    _avg?: Tbl_medicoAvgAggregateInputType
    _sum?: Tbl_medicoSumAggregateInputType
    _min?: Tbl_medicoMinAggregateInputType
    _max?: Tbl_medicoMaxAggregateInputType
  }

  export type Tbl_medicoGroupByOutputType = {
    id_medico: number
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    id_sexo: number | null
    id_user: number | null
    _count: Tbl_medicoCountAggregateOutputType | null
    _avg: Tbl_medicoAvgAggregateOutputType | null
    _sum: Tbl_medicoSumAggregateOutputType | null
    _min: Tbl_medicoMinAggregateOutputType | null
    _max: Tbl_medicoMaxAggregateOutputType | null
  }

  type GetTbl_medicoGroupByPayload<T extends tbl_medicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_medicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_medicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_medicoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_medicoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_medicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_medico?: boolean
    nome?: boolean
    email?: boolean
    telefone?: boolean
    crm?: boolean
    cpf?: boolean
    foto?: boolean
    id_sexo?: boolean
    id_user?: boolean
    tbl_especialidade_medico?: boolean | tbl_medico$tbl_especialidade_medicoArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_medico$tbl_sexoArgs<ExtArgs>
    tbl_user?: boolean | tbl_medico$tbl_userArgs<ExtArgs>
    _count?: boolean | Tbl_medicoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_medico"]>



  export type tbl_medicoSelectScalar = {
    id_medico?: boolean
    nome?: boolean
    email?: boolean
    telefone?: boolean
    crm?: boolean
    cpf?: boolean
    foto?: boolean
    id_sexo?: boolean
    id_user?: boolean
  }

  export type tbl_medicoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_medico" | "nome" | "email" | "telefone" | "crm" | "cpf" | "foto" | "id_sexo" | "id_user", ExtArgs["result"]["tbl_medico"]>
  export type tbl_medicoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_especialidade_medico?: boolean | tbl_medico$tbl_especialidade_medicoArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_medico$tbl_sexoArgs<ExtArgs>
    tbl_user?: boolean | tbl_medico$tbl_userArgs<ExtArgs>
    _count?: boolean | Tbl_medicoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_medicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_medico"
    objects: {
      tbl_especialidade_medico: Prisma.$tbl_especialidade_medicoPayload<ExtArgs>[]
      tbl_sexo: Prisma.$tbl_sexoPayload<ExtArgs> | null
      tbl_user: Prisma.$tbl_userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_medico: number
      nome: string
      email: string
      telefone: string
      crm: string
      cpf: string
      foto: string
      id_sexo: number | null
      id_user: number | null
    }, ExtArgs["result"]["tbl_medico"]>
    composites: {}
  }

  type tbl_medicoGetPayload<S extends boolean | null | undefined | tbl_medicoDefaultArgs> = $Result.GetResult<Prisma.$tbl_medicoPayload, S>

  type tbl_medicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_medicoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_medicoCountAggregateInputType | true
    }

  export interface tbl_medicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_medico'], meta: { name: 'tbl_medico' } }
    /**
     * Find zero or one Tbl_medico that matches the filter.
     * @param {tbl_medicoFindUniqueArgs} args - Arguments to find a Tbl_medico
     * @example
     * // Get one Tbl_medico
     * const tbl_medico = await prisma.tbl_medico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_medicoFindUniqueArgs>(args: SelectSubset<T, tbl_medicoFindUniqueArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_medico that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_medicoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_medico
     * @example
     * // Get one Tbl_medico
     * const tbl_medico = await prisma.tbl_medico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_medicoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_medicoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_medico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_medicoFindFirstArgs} args - Arguments to find a Tbl_medico
     * @example
     * // Get one Tbl_medico
     * const tbl_medico = await prisma.tbl_medico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_medicoFindFirstArgs>(args?: SelectSubset<T, tbl_medicoFindFirstArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_medico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_medicoFindFirstOrThrowArgs} args - Arguments to find a Tbl_medico
     * @example
     * // Get one Tbl_medico
     * const tbl_medico = await prisma.tbl_medico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_medicoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_medicoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_medicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_medicoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_medicos
     * const tbl_medicos = await prisma.tbl_medico.findMany()
     * 
     * // Get first 10 Tbl_medicos
     * const tbl_medicos = await prisma.tbl_medico.findMany({ take: 10 })
     * 
     * // Only select the `id_medico`
     * const tbl_medicoWithId_medicoOnly = await prisma.tbl_medico.findMany({ select: { id_medico: true } })
     * 
     */
    findMany<T extends tbl_medicoFindManyArgs>(args?: SelectSubset<T, tbl_medicoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_medico.
     * @param {tbl_medicoCreateArgs} args - Arguments to create a Tbl_medico.
     * @example
     * // Create one Tbl_medico
     * const Tbl_medico = await prisma.tbl_medico.create({
     *   data: {
     *     // ... data to create a Tbl_medico
     *   }
     * })
     * 
     */
    create<T extends tbl_medicoCreateArgs>(args: SelectSubset<T, tbl_medicoCreateArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_medicos.
     * @param {tbl_medicoCreateManyArgs} args - Arguments to create many Tbl_medicos.
     * @example
     * // Create many Tbl_medicos
     * const tbl_medico = await prisma.tbl_medico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_medicoCreateManyArgs>(args?: SelectSubset<T, tbl_medicoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_medico.
     * @param {tbl_medicoDeleteArgs} args - Arguments to delete one Tbl_medico.
     * @example
     * // Delete one Tbl_medico
     * const Tbl_medico = await prisma.tbl_medico.delete({
     *   where: {
     *     // ... filter to delete one Tbl_medico
     *   }
     * })
     * 
     */
    delete<T extends tbl_medicoDeleteArgs>(args: SelectSubset<T, tbl_medicoDeleteArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_medico.
     * @param {tbl_medicoUpdateArgs} args - Arguments to update one Tbl_medico.
     * @example
     * // Update one Tbl_medico
     * const tbl_medico = await prisma.tbl_medico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_medicoUpdateArgs>(args: SelectSubset<T, tbl_medicoUpdateArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_medicos.
     * @param {tbl_medicoDeleteManyArgs} args - Arguments to filter Tbl_medicos to delete.
     * @example
     * // Delete a few Tbl_medicos
     * const { count } = await prisma.tbl_medico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_medicoDeleteManyArgs>(args?: SelectSubset<T, tbl_medicoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_medicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_medicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_medicos
     * const tbl_medico = await prisma.tbl_medico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_medicoUpdateManyArgs>(args: SelectSubset<T, tbl_medicoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_medico.
     * @param {tbl_medicoUpsertArgs} args - Arguments to update or create a Tbl_medico.
     * @example
     * // Update or create a Tbl_medico
     * const tbl_medico = await prisma.tbl_medico.upsert({
     *   create: {
     *     // ... data to create a Tbl_medico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_medico we want to update
     *   }
     * })
     */
    upsert<T extends tbl_medicoUpsertArgs>(args: SelectSubset<T, tbl_medicoUpsertArgs<ExtArgs>>): Prisma__tbl_medicoClient<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_medicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_medicoCountArgs} args - Arguments to filter Tbl_medicos to count.
     * @example
     * // Count the number of Tbl_medicos
     * const count = await prisma.tbl_medico.count({
     *   where: {
     *     // ... the filter for the Tbl_medicos we want to count
     *   }
     * })
    **/
    count<T extends tbl_medicoCountArgs>(
      args?: Subset<T, tbl_medicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_medicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_medico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_medicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_medicoAggregateArgs>(args: Subset<T, Tbl_medicoAggregateArgs>): Prisma.PrismaPromise<GetTbl_medicoAggregateType<T>>

    /**
     * Group by Tbl_medico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_medicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_medicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_medicoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_medicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_medicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_medicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_medico model
   */
  readonly fields: tbl_medicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_medico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_medicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_especialidade_medico<T extends tbl_medico$tbl_especialidade_medicoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_medico$tbl_especialidade_medicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_especialidade_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_sexo<T extends tbl_medico$tbl_sexoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_medico$tbl_sexoArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_user<T extends tbl_medico$tbl_userArgs<ExtArgs> = {}>(args?: Subset<T, tbl_medico$tbl_userArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_medico model
   */
  interface tbl_medicoFieldRefs {
    readonly id_medico: FieldRef<"tbl_medico", 'Int'>
    readonly nome: FieldRef<"tbl_medico", 'String'>
    readonly email: FieldRef<"tbl_medico", 'String'>
    readonly telefone: FieldRef<"tbl_medico", 'String'>
    readonly crm: FieldRef<"tbl_medico", 'String'>
    readonly cpf: FieldRef<"tbl_medico", 'String'>
    readonly foto: FieldRef<"tbl_medico", 'String'>
    readonly id_sexo: FieldRef<"tbl_medico", 'Int'>
    readonly id_user: FieldRef<"tbl_medico", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_medico findUnique
   */
  export type tbl_medicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_medico to fetch.
     */
    where: tbl_medicoWhereUniqueInput
  }

  /**
   * tbl_medico findUniqueOrThrow
   */
  export type tbl_medicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_medico to fetch.
     */
    where: tbl_medicoWhereUniqueInput
  }

  /**
   * tbl_medico findFirst
   */
  export type tbl_medicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_medico to fetch.
     */
    where?: tbl_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_medicos to fetch.
     */
    orderBy?: tbl_medicoOrderByWithRelationInput | tbl_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_medicos.
     */
    cursor?: tbl_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_medicos.
     */
    distinct?: Tbl_medicoScalarFieldEnum | Tbl_medicoScalarFieldEnum[]
  }

  /**
   * tbl_medico findFirstOrThrow
   */
  export type tbl_medicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_medico to fetch.
     */
    where?: tbl_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_medicos to fetch.
     */
    orderBy?: tbl_medicoOrderByWithRelationInput | tbl_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_medicos.
     */
    cursor?: tbl_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_medicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_medicos.
     */
    distinct?: Tbl_medicoScalarFieldEnum | Tbl_medicoScalarFieldEnum[]
  }

  /**
   * tbl_medico findMany
   */
  export type tbl_medicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_medicos to fetch.
     */
    where?: tbl_medicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_medicos to fetch.
     */
    orderBy?: tbl_medicoOrderByWithRelationInput | tbl_medicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_medicos.
     */
    cursor?: tbl_medicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_medicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_medicos.
     */
    skip?: number
    distinct?: Tbl_medicoScalarFieldEnum | Tbl_medicoScalarFieldEnum[]
  }

  /**
   * tbl_medico create
   */
  export type tbl_medicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_medico.
     */
    data: XOR<tbl_medicoCreateInput, tbl_medicoUncheckedCreateInput>
  }

  /**
   * tbl_medico createMany
   */
  export type tbl_medicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_medicos.
     */
    data: tbl_medicoCreateManyInput | tbl_medicoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_medico update
   */
  export type tbl_medicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_medico.
     */
    data: XOR<tbl_medicoUpdateInput, tbl_medicoUncheckedUpdateInput>
    /**
     * Choose, which tbl_medico to update.
     */
    where: tbl_medicoWhereUniqueInput
  }

  /**
   * tbl_medico updateMany
   */
  export type tbl_medicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_medicos.
     */
    data: XOR<tbl_medicoUpdateManyMutationInput, tbl_medicoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_medicos to update
     */
    where?: tbl_medicoWhereInput
    /**
     * Limit how many tbl_medicos to update.
     */
    limit?: number
  }

  /**
   * tbl_medico upsert
   */
  export type tbl_medicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_medico to update in case it exists.
     */
    where: tbl_medicoWhereUniqueInput
    /**
     * In case the tbl_medico found by the `where` argument doesn't exist, create a new tbl_medico with this data.
     */
    create: XOR<tbl_medicoCreateInput, tbl_medicoUncheckedCreateInput>
    /**
     * In case the tbl_medico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_medicoUpdateInput, tbl_medicoUncheckedUpdateInput>
  }

  /**
   * tbl_medico delete
   */
  export type tbl_medicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    /**
     * Filter which tbl_medico to delete.
     */
    where: tbl_medicoWhereUniqueInput
  }

  /**
   * tbl_medico deleteMany
   */
  export type tbl_medicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_medicos to delete
     */
    where?: tbl_medicoWhereInput
    /**
     * Limit how many tbl_medicos to delete.
     */
    limit?: number
  }

  /**
   * tbl_medico.tbl_especialidade_medico
   */
  export type tbl_medico$tbl_especialidade_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_especialidade_medico
     */
    select?: tbl_especialidade_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_especialidade_medico
     */
    omit?: tbl_especialidade_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_especialidade_medicoInclude<ExtArgs> | null
    where?: tbl_especialidade_medicoWhereInput
    orderBy?: tbl_especialidade_medicoOrderByWithRelationInput | tbl_especialidade_medicoOrderByWithRelationInput[]
    cursor?: tbl_especialidade_medicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_especialidade_medicoScalarFieldEnum | Tbl_especialidade_medicoScalarFieldEnum[]
  }

  /**
   * tbl_medico.tbl_sexo
   */
  export type tbl_medico$tbl_sexoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    where?: tbl_sexoWhereInput
  }

  /**
   * tbl_medico.tbl_user
   */
  export type tbl_medico$tbl_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    where?: tbl_userWhereInput
  }

  /**
   * tbl_medico without action
   */
  export type tbl_medicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_messager
   */

  export type AggregateTbl_messager = {
    _count: Tbl_messagerCountAggregateOutputType | null
    _avg: Tbl_messagerAvgAggregateOutputType | null
    _sum: Tbl_messagerSumAggregateOutputType | null
    _min: Tbl_messagerMinAggregateOutputType | null
    _max: Tbl_messagerMaxAggregateOutputType | null
  }

  export type Tbl_messagerAvgAggregateOutputType = {
    id_mensagem: number | null
    id_tipo_mensagem: number | null
    id_status: number | null
  }

  export type Tbl_messagerSumAggregateOutputType = {
    id_mensagem: number | null
    id_tipo_mensagem: number | null
    id_status: number | null
  }

  export type Tbl_messagerMinAggregateOutputType = {
    id_mensagem: number | null
    conteudo: string | null
    id_tipo_mensagem: number | null
    id_status: number | null
  }

  export type Tbl_messagerMaxAggregateOutputType = {
    id_mensagem: number | null
    conteudo: string | null
    id_tipo_mensagem: number | null
    id_status: number | null
  }

  export type Tbl_messagerCountAggregateOutputType = {
    id_mensagem: number
    conteudo: number
    id_tipo_mensagem: number
    id_status: number
    _all: number
  }


  export type Tbl_messagerAvgAggregateInputType = {
    id_mensagem?: true
    id_tipo_mensagem?: true
    id_status?: true
  }

  export type Tbl_messagerSumAggregateInputType = {
    id_mensagem?: true
    id_tipo_mensagem?: true
    id_status?: true
  }

  export type Tbl_messagerMinAggregateInputType = {
    id_mensagem?: true
    conteudo?: true
    id_tipo_mensagem?: true
    id_status?: true
  }

  export type Tbl_messagerMaxAggregateInputType = {
    id_mensagem?: true
    conteudo?: true
    id_tipo_mensagem?: true
    id_status?: true
  }

  export type Tbl_messagerCountAggregateInputType = {
    id_mensagem?: true
    conteudo?: true
    id_tipo_mensagem?: true
    id_status?: true
    _all?: true
  }

  export type Tbl_messagerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_messager to aggregate.
     */
    where?: tbl_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_messagers to fetch.
     */
    orderBy?: tbl_messagerOrderByWithRelationInput | tbl_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_messagers
    **/
    _count?: true | Tbl_messagerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_messagerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_messagerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_messagerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_messagerMaxAggregateInputType
  }

  export type GetTbl_messagerAggregateType<T extends Tbl_messagerAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_messager]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_messager[P]>
      : GetScalarType<T[P], AggregateTbl_messager[P]>
  }




  export type tbl_messagerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_messagerWhereInput
    orderBy?: tbl_messagerOrderByWithAggregationInput | tbl_messagerOrderByWithAggregationInput[]
    by: Tbl_messagerScalarFieldEnum[] | Tbl_messagerScalarFieldEnum
    having?: tbl_messagerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_messagerCountAggregateInputType | true
    _avg?: Tbl_messagerAvgAggregateInputType
    _sum?: Tbl_messagerSumAggregateInputType
    _min?: Tbl_messagerMinAggregateInputType
    _max?: Tbl_messagerMaxAggregateInputType
  }

  export type Tbl_messagerGroupByOutputType = {
    id_mensagem: number
    conteudo: string
    id_tipo_mensagem: number | null
    id_status: number | null
    _count: Tbl_messagerCountAggregateOutputType | null
    _avg: Tbl_messagerAvgAggregateOutputType | null
    _sum: Tbl_messagerSumAggregateOutputType | null
    _min: Tbl_messagerMinAggregateOutputType | null
    _max: Tbl_messagerMaxAggregateOutputType | null
  }

  type GetTbl_messagerGroupByPayload<T extends tbl_messagerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_messagerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_messagerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_messagerGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_messagerGroupByOutputType[P]>
        }
      >
    >


  export type tbl_messagerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_mensagem?: boolean
    conteudo?: boolean
    id_tipo_mensagem?: boolean
    id_status?: boolean
    tbl_chat?: boolean | tbl_messager$tbl_chatArgs<ExtArgs>
    tbl_status_messager?: boolean | tbl_messager$tbl_status_messagerArgs<ExtArgs>
    tbl_type_messager?: boolean | tbl_messager$tbl_type_messagerArgs<ExtArgs>
    _count?: boolean | Tbl_messagerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_messager"]>



  export type tbl_messagerSelectScalar = {
    id_mensagem?: boolean
    conteudo?: boolean
    id_tipo_mensagem?: boolean
    id_status?: boolean
  }

  export type tbl_messagerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_mensagem" | "conteudo" | "id_tipo_mensagem" | "id_status", ExtArgs["result"]["tbl_messager"]>
  export type tbl_messagerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_chat?: boolean | tbl_messager$tbl_chatArgs<ExtArgs>
    tbl_status_messager?: boolean | tbl_messager$tbl_status_messagerArgs<ExtArgs>
    tbl_type_messager?: boolean | tbl_messager$tbl_type_messagerArgs<ExtArgs>
    _count?: boolean | Tbl_messagerCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_messagerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_messager"
    objects: {
      tbl_chat: Prisma.$tbl_chatPayload<ExtArgs>[]
      tbl_status_messager: Prisma.$tbl_status_messagerPayload<ExtArgs> | null
      tbl_type_messager: Prisma.$tbl_type_messagerPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_mensagem: number
      conteudo: string
      id_tipo_mensagem: number | null
      id_status: number | null
    }, ExtArgs["result"]["tbl_messager"]>
    composites: {}
  }

  type tbl_messagerGetPayload<S extends boolean | null | undefined | tbl_messagerDefaultArgs> = $Result.GetResult<Prisma.$tbl_messagerPayload, S>

  type tbl_messagerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_messagerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_messagerCountAggregateInputType | true
    }

  export interface tbl_messagerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_messager'], meta: { name: 'tbl_messager' } }
    /**
     * Find zero or one Tbl_messager that matches the filter.
     * @param {tbl_messagerFindUniqueArgs} args - Arguments to find a Tbl_messager
     * @example
     * // Get one Tbl_messager
     * const tbl_messager = await prisma.tbl_messager.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_messagerFindUniqueArgs>(args: SelectSubset<T, tbl_messagerFindUniqueArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_messager that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_messagerFindUniqueOrThrowArgs} args - Arguments to find a Tbl_messager
     * @example
     * // Get one Tbl_messager
     * const tbl_messager = await prisma.tbl_messager.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_messagerFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_messagerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_messager that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_messagerFindFirstArgs} args - Arguments to find a Tbl_messager
     * @example
     * // Get one Tbl_messager
     * const tbl_messager = await prisma.tbl_messager.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_messagerFindFirstArgs>(args?: SelectSubset<T, tbl_messagerFindFirstArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_messager that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_messagerFindFirstOrThrowArgs} args - Arguments to find a Tbl_messager
     * @example
     * // Get one Tbl_messager
     * const tbl_messager = await prisma.tbl_messager.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_messagerFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_messagerFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_messagers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_messagerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_messagers
     * const tbl_messagers = await prisma.tbl_messager.findMany()
     * 
     * // Get first 10 Tbl_messagers
     * const tbl_messagers = await prisma.tbl_messager.findMany({ take: 10 })
     * 
     * // Only select the `id_mensagem`
     * const tbl_messagerWithId_mensagemOnly = await prisma.tbl_messager.findMany({ select: { id_mensagem: true } })
     * 
     */
    findMany<T extends tbl_messagerFindManyArgs>(args?: SelectSubset<T, tbl_messagerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_messager.
     * @param {tbl_messagerCreateArgs} args - Arguments to create a Tbl_messager.
     * @example
     * // Create one Tbl_messager
     * const Tbl_messager = await prisma.tbl_messager.create({
     *   data: {
     *     // ... data to create a Tbl_messager
     *   }
     * })
     * 
     */
    create<T extends tbl_messagerCreateArgs>(args: SelectSubset<T, tbl_messagerCreateArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_messagers.
     * @param {tbl_messagerCreateManyArgs} args - Arguments to create many Tbl_messagers.
     * @example
     * // Create many Tbl_messagers
     * const tbl_messager = await prisma.tbl_messager.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_messagerCreateManyArgs>(args?: SelectSubset<T, tbl_messagerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_messager.
     * @param {tbl_messagerDeleteArgs} args - Arguments to delete one Tbl_messager.
     * @example
     * // Delete one Tbl_messager
     * const Tbl_messager = await prisma.tbl_messager.delete({
     *   where: {
     *     // ... filter to delete one Tbl_messager
     *   }
     * })
     * 
     */
    delete<T extends tbl_messagerDeleteArgs>(args: SelectSubset<T, tbl_messagerDeleteArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_messager.
     * @param {tbl_messagerUpdateArgs} args - Arguments to update one Tbl_messager.
     * @example
     * // Update one Tbl_messager
     * const tbl_messager = await prisma.tbl_messager.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_messagerUpdateArgs>(args: SelectSubset<T, tbl_messagerUpdateArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_messagers.
     * @param {tbl_messagerDeleteManyArgs} args - Arguments to filter Tbl_messagers to delete.
     * @example
     * // Delete a few Tbl_messagers
     * const { count } = await prisma.tbl_messager.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_messagerDeleteManyArgs>(args?: SelectSubset<T, tbl_messagerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_messagers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_messagerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_messagers
     * const tbl_messager = await prisma.tbl_messager.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_messagerUpdateManyArgs>(args: SelectSubset<T, tbl_messagerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_messager.
     * @param {tbl_messagerUpsertArgs} args - Arguments to update or create a Tbl_messager.
     * @example
     * // Update or create a Tbl_messager
     * const tbl_messager = await prisma.tbl_messager.upsert({
     *   create: {
     *     // ... data to create a Tbl_messager
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_messager we want to update
     *   }
     * })
     */
    upsert<T extends tbl_messagerUpsertArgs>(args: SelectSubset<T, tbl_messagerUpsertArgs<ExtArgs>>): Prisma__tbl_messagerClient<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_messagers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_messagerCountArgs} args - Arguments to filter Tbl_messagers to count.
     * @example
     * // Count the number of Tbl_messagers
     * const count = await prisma.tbl_messager.count({
     *   where: {
     *     // ... the filter for the Tbl_messagers we want to count
     *   }
     * })
    **/
    count<T extends tbl_messagerCountArgs>(
      args?: Subset<T, tbl_messagerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_messagerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_messager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_messagerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_messagerAggregateArgs>(args: Subset<T, Tbl_messagerAggregateArgs>): Prisma.PrismaPromise<GetTbl_messagerAggregateType<T>>

    /**
     * Group by Tbl_messager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_messagerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_messagerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_messagerGroupByArgs['orderBy'] }
        : { orderBy?: tbl_messagerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_messagerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_messagerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_messager model
   */
  readonly fields: tbl_messagerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_messager.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_messagerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_chat<T extends tbl_messager$tbl_chatArgs<ExtArgs> = {}>(args?: Subset<T, tbl_messager$tbl_chatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_status_messager<T extends tbl_messager$tbl_status_messagerArgs<ExtArgs> = {}>(args?: Subset<T, tbl_messager$tbl_status_messagerArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_type_messager<T extends tbl_messager$tbl_type_messagerArgs<ExtArgs> = {}>(args?: Subset<T, tbl_messager$tbl_type_messagerArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_messager model
   */
  interface tbl_messagerFieldRefs {
    readonly id_mensagem: FieldRef<"tbl_messager", 'Int'>
    readonly conteudo: FieldRef<"tbl_messager", 'String'>
    readonly id_tipo_mensagem: FieldRef<"tbl_messager", 'Int'>
    readonly id_status: FieldRef<"tbl_messager", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_messager findUnique
   */
  export type tbl_messagerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_messager to fetch.
     */
    where: tbl_messagerWhereUniqueInput
  }

  /**
   * tbl_messager findUniqueOrThrow
   */
  export type tbl_messagerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_messager to fetch.
     */
    where: tbl_messagerWhereUniqueInput
  }

  /**
   * tbl_messager findFirst
   */
  export type tbl_messagerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_messager to fetch.
     */
    where?: tbl_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_messagers to fetch.
     */
    orderBy?: tbl_messagerOrderByWithRelationInput | tbl_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_messagers.
     */
    cursor?: tbl_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_messagers.
     */
    distinct?: Tbl_messagerScalarFieldEnum | Tbl_messagerScalarFieldEnum[]
  }

  /**
   * tbl_messager findFirstOrThrow
   */
  export type tbl_messagerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_messager to fetch.
     */
    where?: tbl_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_messagers to fetch.
     */
    orderBy?: tbl_messagerOrderByWithRelationInput | tbl_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_messagers.
     */
    cursor?: tbl_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_messagers.
     */
    distinct?: Tbl_messagerScalarFieldEnum | Tbl_messagerScalarFieldEnum[]
  }

  /**
   * tbl_messager findMany
   */
  export type tbl_messagerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_messagers to fetch.
     */
    where?: tbl_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_messagers to fetch.
     */
    orderBy?: tbl_messagerOrderByWithRelationInput | tbl_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_messagers.
     */
    cursor?: tbl_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_messagers.
     */
    skip?: number
    distinct?: Tbl_messagerScalarFieldEnum | Tbl_messagerScalarFieldEnum[]
  }

  /**
   * tbl_messager create
   */
  export type tbl_messagerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_messager.
     */
    data: XOR<tbl_messagerCreateInput, tbl_messagerUncheckedCreateInput>
  }

  /**
   * tbl_messager createMany
   */
  export type tbl_messagerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_messagers.
     */
    data: tbl_messagerCreateManyInput | tbl_messagerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_messager update
   */
  export type tbl_messagerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_messager.
     */
    data: XOR<tbl_messagerUpdateInput, tbl_messagerUncheckedUpdateInput>
    /**
     * Choose, which tbl_messager to update.
     */
    where: tbl_messagerWhereUniqueInput
  }

  /**
   * tbl_messager updateMany
   */
  export type tbl_messagerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_messagers.
     */
    data: XOR<tbl_messagerUpdateManyMutationInput, tbl_messagerUncheckedUpdateManyInput>
    /**
     * Filter which tbl_messagers to update
     */
    where?: tbl_messagerWhereInput
    /**
     * Limit how many tbl_messagers to update.
     */
    limit?: number
  }

  /**
   * tbl_messager upsert
   */
  export type tbl_messagerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_messager to update in case it exists.
     */
    where: tbl_messagerWhereUniqueInput
    /**
     * In case the tbl_messager found by the `where` argument doesn't exist, create a new tbl_messager with this data.
     */
    create: XOR<tbl_messagerCreateInput, tbl_messagerUncheckedCreateInput>
    /**
     * In case the tbl_messager was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_messagerUpdateInput, tbl_messagerUncheckedUpdateInput>
  }

  /**
   * tbl_messager delete
   */
  export type tbl_messagerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    /**
     * Filter which tbl_messager to delete.
     */
    where: tbl_messagerWhereUniqueInput
  }

  /**
   * tbl_messager deleteMany
   */
  export type tbl_messagerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_messagers to delete
     */
    where?: tbl_messagerWhereInput
    /**
     * Limit how many tbl_messagers to delete.
     */
    limit?: number
  }

  /**
   * tbl_messager.tbl_chat
   */
  export type tbl_messager$tbl_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    where?: tbl_chatWhereInput
    orderBy?: tbl_chatOrderByWithRelationInput | tbl_chatOrderByWithRelationInput[]
    cursor?: tbl_chatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_chatScalarFieldEnum | Tbl_chatScalarFieldEnum[]
  }

  /**
   * tbl_messager.tbl_status_messager
   */
  export type tbl_messager$tbl_status_messagerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    where?: tbl_status_messagerWhereInput
  }

  /**
   * tbl_messager.tbl_type_messager
   */
  export type tbl_messager$tbl_type_messagerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    where?: tbl_type_messagerWhereInput
  }

  /**
   * tbl_messager without action
   */
  export type tbl_messagerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
  }


  /**
   * Model tbl_responsavel
   */

  export type AggregateTbl_responsavel = {
    _count: Tbl_responsavelCountAggregateOutputType | null
    _avg: Tbl_responsavelAvgAggregateOutputType | null
    _sum: Tbl_responsavelSumAggregateOutputType | null
    _min: Tbl_responsavelMinAggregateOutputType | null
    _max: Tbl_responsavelMaxAggregateOutputType | null
  }

  export type Tbl_responsavelAvgAggregateOutputType = {
    id_responsavel: number | null
    id_sexo: number | null
    id_user: number | null
    id_cep: number | null
  }

  export type Tbl_responsavelSumAggregateOutputType = {
    id_responsavel: number | null
    id_sexo: number | null
    id_user: number | null
    id_cep: number | null
  }

  export type Tbl_responsavelMinAggregateOutputType = {
    id_responsavel: number | null
    nome: string | null
    data_nascimento: Date | null
    cpf: string | null
    telefone: string | null
    arquivo: string | null
    cartao_medico: string | null
    cep: string | null
    id_sexo: number | null
    id_user: number | null
    id_cep: number | null
  }

  export type Tbl_responsavelMaxAggregateOutputType = {
    id_responsavel: number | null
    nome: string | null
    data_nascimento: Date | null
    cpf: string | null
    telefone: string | null
    arquivo: string | null
    cartao_medico: string | null
    cep: string | null
    id_sexo: number | null
    id_user: number | null
    id_cep: number | null
  }

  export type Tbl_responsavelCountAggregateOutputType = {
    id_responsavel: number
    nome: number
    data_nascimento: number
    cpf: number
    telefone: number
    arquivo: number
    cartao_medico: number
    cep: number
    id_sexo: number
    id_user: number
    id_cep: number
    _all: number
  }


  export type Tbl_responsavelAvgAggregateInputType = {
    id_responsavel?: true
    id_sexo?: true
    id_user?: true
    id_cep?: true
  }

  export type Tbl_responsavelSumAggregateInputType = {
    id_responsavel?: true
    id_sexo?: true
    id_user?: true
    id_cep?: true
  }

  export type Tbl_responsavelMinAggregateInputType = {
    id_responsavel?: true
    nome?: true
    data_nascimento?: true
    cpf?: true
    telefone?: true
    arquivo?: true
    cartao_medico?: true
    cep?: true
    id_sexo?: true
    id_user?: true
    id_cep?: true
  }

  export type Tbl_responsavelMaxAggregateInputType = {
    id_responsavel?: true
    nome?: true
    data_nascimento?: true
    cpf?: true
    telefone?: true
    arquivo?: true
    cartao_medico?: true
    cep?: true
    id_sexo?: true
    id_user?: true
    id_cep?: true
  }

  export type Tbl_responsavelCountAggregateInputType = {
    id_responsavel?: true
    nome?: true
    data_nascimento?: true
    cpf?: true
    telefone?: true
    arquivo?: true
    cartao_medico?: true
    cep?: true
    id_sexo?: true
    id_user?: true
    id_cep?: true
    _all?: true
  }

  export type Tbl_responsavelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_responsavel to aggregate.
     */
    where?: tbl_responsavelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_responsavels to fetch.
     */
    orderBy?: tbl_responsavelOrderByWithRelationInput | tbl_responsavelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_responsavelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_responsavels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_responsavels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_responsavels
    **/
    _count?: true | Tbl_responsavelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_responsavelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_responsavelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_responsavelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_responsavelMaxAggregateInputType
  }

  export type GetTbl_responsavelAggregateType<T extends Tbl_responsavelAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_responsavel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_responsavel[P]>
      : GetScalarType<T[P], AggregateTbl_responsavel[P]>
  }




  export type tbl_responsavelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_responsavelWhereInput
    orderBy?: tbl_responsavelOrderByWithAggregationInput | tbl_responsavelOrderByWithAggregationInput[]
    by: Tbl_responsavelScalarFieldEnum[] | Tbl_responsavelScalarFieldEnum
    having?: tbl_responsavelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_responsavelCountAggregateInputType | true
    _avg?: Tbl_responsavelAvgAggregateInputType
    _sum?: Tbl_responsavelSumAggregateInputType
    _min?: Tbl_responsavelMinAggregateInputType
    _max?: Tbl_responsavelMaxAggregateInputType
  }

  export type Tbl_responsavelGroupByOutputType = {
    id_responsavel: number
    nome: string
    data_nascimento: Date
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_sexo: number | null
    id_user: number | null
    id_cep: number | null
    _count: Tbl_responsavelCountAggregateOutputType | null
    _avg: Tbl_responsavelAvgAggregateOutputType | null
    _sum: Tbl_responsavelSumAggregateOutputType | null
    _min: Tbl_responsavelMinAggregateOutputType | null
    _max: Tbl_responsavelMaxAggregateOutputType | null
  }

  type GetTbl_responsavelGroupByPayload<T extends tbl_responsavelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_responsavelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_responsavelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_responsavelGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_responsavelGroupByOutputType[P]>
        }
      >
    >


  export type tbl_responsavelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_responsavel?: boolean
    nome?: boolean
    data_nascimento?: boolean
    cpf?: boolean
    telefone?: boolean
    arquivo?: boolean
    cartao_medico?: boolean
    cep?: boolean
    id_sexo?: boolean
    id_user?: boolean
    id_cep?: boolean
    tbl_cep?: boolean | tbl_responsavel$tbl_cepArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_responsavel$tbl_sexoArgs<ExtArgs>
    tbl_user?: boolean | tbl_responsavel$tbl_userArgs<ExtArgs>
    tbl_responsavel_bebe?: boolean | tbl_responsavel$tbl_responsavel_bebeArgs<ExtArgs>
    _count?: boolean | Tbl_responsavelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_responsavel"]>



  export type tbl_responsavelSelectScalar = {
    id_responsavel?: boolean
    nome?: boolean
    data_nascimento?: boolean
    cpf?: boolean
    telefone?: boolean
    arquivo?: boolean
    cartao_medico?: boolean
    cep?: boolean
    id_sexo?: boolean
    id_user?: boolean
    id_cep?: boolean
  }

  export type tbl_responsavelOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_responsavel" | "nome" | "data_nascimento" | "cpf" | "telefone" | "arquivo" | "cartao_medico" | "cep" | "id_sexo" | "id_user" | "id_cep", ExtArgs["result"]["tbl_responsavel"]>
  export type tbl_responsavelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_cep?: boolean | tbl_responsavel$tbl_cepArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_responsavel$tbl_sexoArgs<ExtArgs>
    tbl_user?: boolean | tbl_responsavel$tbl_userArgs<ExtArgs>
    tbl_responsavel_bebe?: boolean | tbl_responsavel$tbl_responsavel_bebeArgs<ExtArgs>
    _count?: boolean | Tbl_responsavelCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_responsavelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_responsavel"
    objects: {
      tbl_cep: Prisma.$tbl_cepPayload<ExtArgs> | null
      tbl_sexo: Prisma.$tbl_sexoPayload<ExtArgs> | null
      tbl_user: Prisma.$tbl_userPayload<ExtArgs> | null
      tbl_responsavel_bebe: Prisma.$tbl_responsavel_bebePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_responsavel: number
      nome: string
      data_nascimento: Date
      cpf: string
      telefone: string
      arquivo: string
      cartao_medico: string
      cep: string
      id_sexo: number | null
      id_user: number | null
      id_cep: number | null
    }, ExtArgs["result"]["tbl_responsavel"]>
    composites: {}
  }

  type tbl_responsavelGetPayload<S extends boolean | null | undefined | tbl_responsavelDefaultArgs> = $Result.GetResult<Prisma.$tbl_responsavelPayload, S>

  type tbl_responsavelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_responsavelFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_responsavelCountAggregateInputType | true
    }

  export interface tbl_responsavelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_responsavel'], meta: { name: 'tbl_responsavel' } }
    /**
     * Find zero or one Tbl_responsavel that matches the filter.
     * @param {tbl_responsavelFindUniqueArgs} args - Arguments to find a Tbl_responsavel
     * @example
     * // Get one Tbl_responsavel
     * const tbl_responsavel = await prisma.tbl_responsavel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_responsavelFindUniqueArgs>(args: SelectSubset<T, tbl_responsavelFindUniqueArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_responsavel that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_responsavelFindUniqueOrThrowArgs} args - Arguments to find a Tbl_responsavel
     * @example
     * // Get one Tbl_responsavel
     * const tbl_responsavel = await prisma.tbl_responsavel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_responsavelFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_responsavelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_responsavel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavelFindFirstArgs} args - Arguments to find a Tbl_responsavel
     * @example
     * // Get one Tbl_responsavel
     * const tbl_responsavel = await prisma.tbl_responsavel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_responsavelFindFirstArgs>(args?: SelectSubset<T, tbl_responsavelFindFirstArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_responsavel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavelFindFirstOrThrowArgs} args - Arguments to find a Tbl_responsavel
     * @example
     * // Get one Tbl_responsavel
     * const tbl_responsavel = await prisma.tbl_responsavel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_responsavelFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_responsavelFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_responsavels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_responsavels
     * const tbl_responsavels = await prisma.tbl_responsavel.findMany()
     * 
     * // Get first 10 Tbl_responsavels
     * const tbl_responsavels = await prisma.tbl_responsavel.findMany({ take: 10 })
     * 
     * // Only select the `id_responsavel`
     * const tbl_responsavelWithId_responsavelOnly = await prisma.tbl_responsavel.findMany({ select: { id_responsavel: true } })
     * 
     */
    findMany<T extends tbl_responsavelFindManyArgs>(args?: SelectSubset<T, tbl_responsavelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_responsavel.
     * @param {tbl_responsavelCreateArgs} args - Arguments to create a Tbl_responsavel.
     * @example
     * // Create one Tbl_responsavel
     * const Tbl_responsavel = await prisma.tbl_responsavel.create({
     *   data: {
     *     // ... data to create a Tbl_responsavel
     *   }
     * })
     * 
     */
    create<T extends tbl_responsavelCreateArgs>(args: SelectSubset<T, tbl_responsavelCreateArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_responsavels.
     * @param {tbl_responsavelCreateManyArgs} args - Arguments to create many Tbl_responsavels.
     * @example
     * // Create many Tbl_responsavels
     * const tbl_responsavel = await prisma.tbl_responsavel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_responsavelCreateManyArgs>(args?: SelectSubset<T, tbl_responsavelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_responsavel.
     * @param {tbl_responsavelDeleteArgs} args - Arguments to delete one Tbl_responsavel.
     * @example
     * // Delete one Tbl_responsavel
     * const Tbl_responsavel = await prisma.tbl_responsavel.delete({
     *   where: {
     *     // ... filter to delete one Tbl_responsavel
     *   }
     * })
     * 
     */
    delete<T extends tbl_responsavelDeleteArgs>(args: SelectSubset<T, tbl_responsavelDeleteArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_responsavel.
     * @param {tbl_responsavelUpdateArgs} args - Arguments to update one Tbl_responsavel.
     * @example
     * // Update one Tbl_responsavel
     * const tbl_responsavel = await prisma.tbl_responsavel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_responsavelUpdateArgs>(args: SelectSubset<T, tbl_responsavelUpdateArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_responsavels.
     * @param {tbl_responsavelDeleteManyArgs} args - Arguments to filter Tbl_responsavels to delete.
     * @example
     * // Delete a few Tbl_responsavels
     * const { count } = await prisma.tbl_responsavel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_responsavelDeleteManyArgs>(args?: SelectSubset<T, tbl_responsavelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_responsavels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_responsavels
     * const tbl_responsavel = await prisma.tbl_responsavel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_responsavelUpdateManyArgs>(args: SelectSubset<T, tbl_responsavelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_responsavel.
     * @param {tbl_responsavelUpsertArgs} args - Arguments to update or create a Tbl_responsavel.
     * @example
     * // Update or create a Tbl_responsavel
     * const tbl_responsavel = await prisma.tbl_responsavel.upsert({
     *   create: {
     *     // ... data to create a Tbl_responsavel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_responsavel we want to update
     *   }
     * })
     */
    upsert<T extends tbl_responsavelUpsertArgs>(args: SelectSubset<T, tbl_responsavelUpsertArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_responsavels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavelCountArgs} args - Arguments to filter Tbl_responsavels to count.
     * @example
     * // Count the number of Tbl_responsavels
     * const count = await prisma.tbl_responsavel.count({
     *   where: {
     *     // ... the filter for the Tbl_responsavels we want to count
     *   }
     * })
    **/
    count<T extends tbl_responsavelCountArgs>(
      args?: Subset<T, tbl_responsavelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_responsavelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_responsavel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_responsavelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_responsavelAggregateArgs>(args: Subset<T, Tbl_responsavelAggregateArgs>): Prisma.PrismaPromise<GetTbl_responsavelAggregateType<T>>

    /**
     * Group by Tbl_responsavel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_responsavelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_responsavelGroupByArgs['orderBy'] }
        : { orderBy?: tbl_responsavelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_responsavelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_responsavelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_responsavel model
   */
  readonly fields: tbl_responsavelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_responsavel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_responsavelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_cep<T extends tbl_responsavel$tbl_cepArgs<ExtArgs> = {}>(args?: Subset<T, tbl_responsavel$tbl_cepArgs<ExtArgs>>): Prisma__tbl_cepClient<$Result.GetResult<Prisma.$tbl_cepPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_sexo<T extends tbl_responsavel$tbl_sexoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_responsavel$tbl_sexoArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_user<T extends tbl_responsavel$tbl_userArgs<ExtArgs> = {}>(args?: Subset<T, tbl_responsavel$tbl_userArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_responsavel_bebe<T extends tbl_responsavel$tbl_responsavel_bebeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_responsavel$tbl_responsavel_bebeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_responsavel model
   */
  interface tbl_responsavelFieldRefs {
    readonly id_responsavel: FieldRef<"tbl_responsavel", 'Int'>
    readonly nome: FieldRef<"tbl_responsavel", 'String'>
    readonly data_nascimento: FieldRef<"tbl_responsavel", 'DateTime'>
    readonly cpf: FieldRef<"tbl_responsavel", 'String'>
    readonly telefone: FieldRef<"tbl_responsavel", 'String'>
    readonly arquivo: FieldRef<"tbl_responsavel", 'String'>
    readonly cartao_medico: FieldRef<"tbl_responsavel", 'String'>
    readonly cep: FieldRef<"tbl_responsavel", 'String'>
    readonly id_sexo: FieldRef<"tbl_responsavel", 'Int'>
    readonly id_user: FieldRef<"tbl_responsavel", 'Int'>
    readonly id_cep: FieldRef<"tbl_responsavel", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_responsavel findUnique
   */
  export type tbl_responsavelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel to fetch.
     */
    where: tbl_responsavelWhereUniqueInput
  }

  /**
   * tbl_responsavel findUniqueOrThrow
   */
  export type tbl_responsavelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel to fetch.
     */
    where: tbl_responsavelWhereUniqueInput
  }

  /**
   * tbl_responsavel findFirst
   */
  export type tbl_responsavelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel to fetch.
     */
    where?: tbl_responsavelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_responsavels to fetch.
     */
    orderBy?: tbl_responsavelOrderByWithRelationInput | tbl_responsavelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_responsavels.
     */
    cursor?: tbl_responsavelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_responsavels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_responsavels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_responsavels.
     */
    distinct?: Tbl_responsavelScalarFieldEnum | Tbl_responsavelScalarFieldEnum[]
  }

  /**
   * tbl_responsavel findFirstOrThrow
   */
  export type tbl_responsavelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel to fetch.
     */
    where?: tbl_responsavelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_responsavels to fetch.
     */
    orderBy?: tbl_responsavelOrderByWithRelationInput | tbl_responsavelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_responsavels.
     */
    cursor?: tbl_responsavelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_responsavels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_responsavels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_responsavels.
     */
    distinct?: Tbl_responsavelScalarFieldEnum | Tbl_responsavelScalarFieldEnum[]
  }

  /**
   * tbl_responsavel findMany
   */
  export type tbl_responsavelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavels to fetch.
     */
    where?: tbl_responsavelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_responsavels to fetch.
     */
    orderBy?: tbl_responsavelOrderByWithRelationInput | tbl_responsavelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_responsavels.
     */
    cursor?: tbl_responsavelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_responsavels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_responsavels.
     */
    skip?: number
    distinct?: Tbl_responsavelScalarFieldEnum | Tbl_responsavelScalarFieldEnum[]
  }

  /**
   * tbl_responsavel create
   */
  export type tbl_responsavelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_responsavel.
     */
    data: XOR<tbl_responsavelCreateInput, tbl_responsavelUncheckedCreateInput>
  }

  /**
   * tbl_responsavel createMany
   */
  export type tbl_responsavelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_responsavels.
     */
    data: tbl_responsavelCreateManyInput | tbl_responsavelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_responsavel update
   */
  export type tbl_responsavelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_responsavel.
     */
    data: XOR<tbl_responsavelUpdateInput, tbl_responsavelUncheckedUpdateInput>
    /**
     * Choose, which tbl_responsavel to update.
     */
    where: tbl_responsavelWhereUniqueInput
  }

  /**
   * tbl_responsavel updateMany
   */
  export type tbl_responsavelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_responsavels.
     */
    data: XOR<tbl_responsavelUpdateManyMutationInput, tbl_responsavelUncheckedUpdateManyInput>
    /**
     * Filter which tbl_responsavels to update
     */
    where?: tbl_responsavelWhereInput
    /**
     * Limit how many tbl_responsavels to update.
     */
    limit?: number
  }

  /**
   * tbl_responsavel upsert
   */
  export type tbl_responsavelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_responsavel to update in case it exists.
     */
    where: tbl_responsavelWhereUniqueInput
    /**
     * In case the tbl_responsavel found by the `where` argument doesn't exist, create a new tbl_responsavel with this data.
     */
    create: XOR<tbl_responsavelCreateInput, tbl_responsavelUncheckedCreateInput>
    /**
     * In case the tbl_responsavel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_responsavelUpdateInput, tbl_responsavelUncheckedUpdateInput>
  }

  /**
   * tbl_responsavel delete
   */
  export type tbl_responsavelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    /**
     * Filter which tbl_responsavel to delete.
     */
    where: tbl_responsavelWhereUniqueInput
  }

  /**
   * tbl_responsavel deleteMany
   */
  export type tbl_responsavelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_responsavels to delete
     */
    where?: tbl_responsavelWhereInput
    /**
     * Limit how many tbl_responsavels to delete.
     */
    limit?: number
  }

  /**
   * tbl_responsavel.tbl_cep
   */
  export type tbl_responsavel$tbl_cepArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cep
     */
    select?: tbl_cepSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_cep
     */
    omit?: tbl_cepOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cepInclude<ExtArgs> | null
    where?: tbl_cepWhereInput
  }

  /**
   * tbl_responsavel.tbl_sexo
   */
  export type tbl_responsavel$tbl_sexoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    where?: tbl_sexoWhereInput
  }

  /**
   * tbl_responsavel.tbl_user
   */
  export type tbl_responsavel$tbl_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    where?: tbl_userWhereInput
  }

  /**
   * tbl_responsavel.tbl_responsavel_bebe
   */
  export type tbl_responsavel$tbl_responsavel_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    where?: tbl_responsavel_bebeWhereInput
    orderBy?: tbl_responsavel_bebeOrderByWithRelationInput | tbl_responsavel_bebeOrderByWithRelationInput[]
    cursor?: tbl_responsavel_bebeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_responsavel_bebeScalarFieldEnum | Tbl_responsavel_bebeScalarFieldEnum[]
  }

  /**
   * tbl_responsavel without action
   */
  export type tbl_responsavelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
  }


  /**
   * Model tbl_responsavel_bebe
   */

  export type AggregateTbl_responsavel_bebe = {
    _count: Tbl_responsavel_bebeCountAggregateOutputType | null
    _avg: Tbl_responsavel_bebeAvgAggregateOutputType | null
    _sum: Tbl_responsavel_bebeSumAggregateOutputType | null
    _min: Tbl_responsavel_bebeMinAggregateOutputType | null
    _max: Tbl_responsavel_bebeMaxAggregateOutputType | null
  }

  export type Tbl_responsavel_bebeAvgAggregateOutputType = {
    id_bebe_responsavel: number | null
    id_bebe: number | null
    id_responsavel: number | null
  }

  export type Tbl_responsavel_bebeSumAggregateOutputType = {
    id_bebe_responsavel: number | null
    id_bebe: number | null
    id_responsavel: number | null
  }

  export type Tbl_responsavel_bebeMinAggregateOutputType = {
    id_bebe_responsavel: number | null
    id_bebe: number | null
    id_responsavel: number | null
  }

  export type Tbl_responsavel_bebeMaxAggregateOutputType = {
    id_bebe_responsavel: number | null
    id_bebe: number | null
    id_responsavel: number | null
  }

  export type Tbl_responsavel_bebeCountAggregateOutputType = {
    id_bebe_responsavel: number
    id_bebe: number
    id_responsavel: number
    _all: number
  }


  export type Tbl_responsavel_bebeAvgAggregateInputType = {
    id_bebe_responsavel?: true
    id_bebe?: true
    id_responsavel?: true
  }

  export type Tbl_responsavel_bebeSumAggregateInputType = {
    id_bebe_responsavel?: true
    id_bebe?: true
    id_responsavel?: true
  }

  export type Tbl_responsavel_bebeMinAggregateInputType = {
    id_bebe_responsavel?: true
    id_bebe?: true
    id_responsavel?: true
  }

  export type Tbl_responsavel_bebeMaxAggregateInputType = {
    id_bebe_responsavel?: true
    id_bebe?: true
    id_responsavel?: true
  }

  export type Tbl_responsavel_bebeCountAggregateInputType = {
    id_bebe_responsavel?: true
    id_bebe?: true
    id_responsavel?: true
    _all?: true
  }

  export type Tbl_responsavel_bebeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_responsavel_bebe to aggregate.
     */
    where?: tbl_responsavel_bebeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_responsavel_bebes to fetch.
     */
    orderBy?: tbl_responsavel_bebeOrderByWithRelationInput | tbl_responsavel_bebeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_responsavel_bebeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_responsavel_bebes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_responsavel_bebes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_responsavel_bebes
    **/
    _count?: true | Tbl_responsavel_bebeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_responsavel_bebeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_responsavel_bebeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_responsavel_bebeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_responsavel_bebeMaxAggregateInputType
  }

  export type GetTbl_responsavel_bebeAggregateType<T extends Tbl_responsavel_bebeAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_responsavel_bebe]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_responsavel_bebe[P]>
      : GetScalarType<T[P], AggregateTbl_responsavel_bebe[P]>
  }




  export type tbl_responsavel_bebeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_responsavel_bebeWhereInput
    orderBy?: tbl_responsavel_bebeOrderByWithAggregationInput | tbl_responsavel_bebeOrderByWithAggregationInput[]
    by: Tbl_responsavel_bebeScalarFieldEnum[] | Tbl_responsavel_bebeScalarFieldEnum
    having?: tbl_responsavel_bebeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_responsavel_bebeCountAggregateInputType | true
    _avg?: Tbl_responsavel_bebeAvgAggregateInputType
    _sum?: Tbl_responsavel_bebeSumAggregateInputType
    _min?: Tbl_responsavel_bebeMinAggregateInputType
    _max?: Tbl_responsavel_bebeMaxAggregateInputType
  }

  export type Tbl_responsavel_bebeGroupByOutputType = {
    id_bebe_responsavel: number
    id_bebe: number | null
    id_responsavel: number | null
    _count: Tbl_responsavel_bebeCountAggregateOutputType | null
    _avg: Tbl_responsavel_bebeAvgAggregateOutputType | null
    _sum: Tbl_responsavel_bebeSumAggregateOutputType | null
    _min: Tbl_responsavel_bebeMinAggregateOutputType | null
    _max: Tbl_responsavel_bebeMaxAggregateOutputType | null
  }

  type GetTbl_responsavel_bebeGroupByPayload<T extends tbl_responsavel_bebeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_responsavel_bebeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_responsavel_bebeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_responsavel_bebeGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_responsavel_bebeGroupByOutputType[P]>
        }
      >
    >


  export type tbl_responsavel_bebeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_bebe_responsavel?: boolean
    id_bebe?: boolean
    id_responsavel?: boolean
    tbl_bebe?: boolean | tbl_responsavel_bebe$tbl_bebeArgs<ExtArgs>
    tbl_responsavel?: boolean | tbl_responsavel_bebe$tbl_responsavelArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_responsavel_bebe"]>



  export type tbl_responsavel_bebeSelectScalar = {
    id_bebe_responsavel?: boolean
    id_bebe?: boolean
    id_responsavel?: boolean
  }

  export type tbl_responsavel_bebeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_bebe_responsavel" | "id_bebe" | "id_responsavel", ExtArgs["result"]["tbl_responsavel_bebe"]>
  export type tbl_responsavel_bebeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_bebe?: boolean | tbl_responsavel_bebe$tbl_bebeArgs<ExtArgs>
    tbl_responsavel?: boolean | tbl_responsavel_bebe$tbl_responsavelArgs<ExtArgs>
  }

  export type $tbl_responsavel_bebePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_responsavel_bebe"
    objects: {
      tbl_bebe: Prisma.$tbl_bebePayload<ExtArgs> | null
      tbl_responsavel: Prisma.$tbl_responsavelPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_bebe_responsavel: number
      id_bebe: number | null
      id_responsavel: number | null
    }, ExtArgs["result"]["tbl_responsavel_bebe"]>
    composites: {}
  }

  type tbl_responsavel_bebeGetPayload<S extends boolean | null | undefined | tbl_responsavel_bebeDefaultArgs> = $Result.GetResult<Prisma.$tbl_responsavel_bebePayload, S>

  type tbl_responsavel_bebeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_responsavel_bebeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_responsavel_bebeCountAggregateInputType | true
    }

  export interface tbl_responsavel_bebeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_responsavel_bebe'], meta: { name: 'tbl_responsavel_bebe' } }
    /**
     * Find zero or one Tbl_responsavel_bebe that matches the filter.
     * @param {tbl_responsavel_bebeFindUniqueArgs} args - Arguments to find a Tbl_responsavel_bebe
     * @example
     * // Get one Tbl_responsavel_bebe
     * const tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_responsavel_bebeFindUniqueArgs>(args: SelectSubset<T, tbl_responsavel_bebeFindUniqueArgs<ExtArgs>>): Prisma__tbl_responsavel_bebeClient<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_responsavel_bebe that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_responsavel_bebeFindUniqueOrThrowArgs} args - Arguments to find a Tbl_responsavel_bebe
     * @example
     * // Get one Tbl_responsavel_bebe
     * const tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_responsavel_bebeFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_responsavel_bebeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_responsavel_bebeClient<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_responsavel_bebe that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavel_bebeFindFirstArgs} args - Arguments to find a Tbl_responsavel_bebe
     * @example
     * // Get one Tbl_responsavel_bebe
     * const tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_responsavel_bebeFindFirstArgs>(args?: SelectSubset<T, tbl_responsavel_bebeFindFirstArgs<ExtArgs>>): Prisma__tbl_responsavel_bebeClient<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_responsavel_bebe that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavel_bebeFindFirstOrThrowArgs} args - Arguments to find a Tbl_responsavel_bebe
     * @example
     * // Get one Tbl_responsavel_bebe
     * const tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_responsavel_bebeFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_responsavel_bebeFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_responsavel_bebeClient<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_responsavel_bebes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavel_bebeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_responsavel_bebes
     * const tbl_responsavel_bebes = await prisma.tbl_responsavel_bebe.findMany()
     * 
     * // Get first 10 Tbl_responsavel_bebes
     * const tbl_responsavel_bebes = await prisma.tbl_responsavel_bebe.findMany({ take: 10 })
     * 
     * // Only select the `id_bebe_responsavel`
     * const tbl_responsavel_bebeWithId_bebe_responsavelOnly = await prisma.tbl_responsavel_bebe.findMany({ select: { id_bebe_responsavel: true } })
     * 
     */
    findMany<T extends tbl_responsavel_bebeFindManyArgs>(args?: SelectSubset<T, tbl_responsavel_bebeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_responsavel_bebe.
     * @param {tbl_responsavel_bebeCreateArgs} args - Arguments to create a Tbl_responsavel_bebe.
     * @example
     * // Create one Tbl_responsavel_bebe
     * const Tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.create({
     *   data: {
     *     // ... data to create a Tbl_responsavel_bebe
     *   }
     * })
     * 
     */
    create<T extends tbl_responsavel_bebeCreateArgs>(args: SelectSubset<T, tbl_responsavel_bebeCreateArgs<ExtArgs>>): Prisma__tbl_responsavel_bebeClient<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_responsavel_bebes.
     * @param {tbl_responsavel_bebeCreateManyArgs} args - Arguments to create many Tbl_responsavel_bebes.
     * @example
     * // Create many Tbl_responsavel_bebes
     * const tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_responsavel_bebeCreateManyArgs>(args?: SelectSubset<T, tbl_responsavel_bebeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_responsavel_bebe.
     * @param {tbl_responsavel_bebeDeleteArgs} args - Arguments to delete one Tbl_responsavel_bebe.
     * @example
     * // Delete one Tbl_responsavel_bebe
     * const Tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.delete({
     *   where: {
     *     // ... filter to delete one Tbl_responsavel_bebe
     *   }
     * })
     * 
     */
    delete<T extends tbl_responsavel_bebeDeleteArgs>(args: SelectSubset<T, tbl_responsavel_bebeDeleteArgs<ExtArgs>>): Prisma__tbl_responsavel_bebeClient<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_responsavel_bebe.
     * @param {tbl_responsavel_bebeUpdateArgs} args - Arguments to update one Tbl_responsavel_bebe.
     * @example
     * // Update one Tbl_responsavel_bebe
     * const tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_responsavel_bebeUpdateArgs>(args: SelectSubset<T, tbl_responsavel_bebeUpdateArgs<ExtArgs>>): Prisma__tbl_responsavel_bebeClient<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_responsavel_bebes.
     * @param {tbl_responsavel_bebeDeleteManyArgs} args - Arguments to filter Tbl_responsavel_bebes to delete.
     * @example
     * // Delete a few Tbl_responsavel_bebes
     * const { count } = await prisma.tbl_responsavel_bebe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_responsavel_bebeDeleteManyArgs>(args?: SelectSubset<T, tbl_responsavel_bebeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_responsavel_bebes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavel_bebeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_responsavel_bebes
     * const tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_responsavel_bebeUpdateManyArgs>(args: SelectSubset<T, tbl_responsavel_bebeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_responsavel_bebe.
     * @param {tbl_responsavel_bebeUpsertArgs} args - Arguments to update or create a Tbl_responsavel_bebe.
     * @example
     * // Update or create a Tbl_responsavel_bebe
     * const tbl_responsavel_bebe = await prisma.tbl_responsavel_bebe.upsert({
     *   create: {
     *     // ... data to create a Tbl_responsavel_bebe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_responsavel_bebe we want to update
     *   }
     * })
     */
    upsert<T extends tbl_responsavel_bebeUpsertArgs>(args: SelectSubset<T, tbl_responsavel_bebeUpsertArgs<ExtArgs>>): Prisma__tbl_responsavel_bebeClient<$Result.GetResult<Prisma.$tbl_responsavel_bebePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_responsavel_bebes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavel_bebeCountArgs} args - Arguments to filter Tbl_responsavel_bebes to count.
     * @example
     * // Count the number of Tbl_responsavel_bebes
     * const count = await prisma.tbl_responsavel_bebe.count({
     *   where: {
     *     // ... the filter for the Tbl_responsavel_bebes we want to count
     *   }
     * })
    **/
    count<T extends tbl_responsavel_bebeCountArgs>(
      args?: Subset<T, tbl_responsavel_bebeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_responsavel_bebeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_responsavel_bebe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_responsavel_bebeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_responsavel_bebeAggregateArgs>(args: Subset<T, Tbl_responsavel_bebeAggregateArgs>): Prisma.PrismaPromise<GetTbl_responsavel_bebeAggregateType<T>>

    /**
     * Group by Tbl_responsavel_bebe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_responsavel_bebeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_responsavel_bebeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_responsavel_bebeGroupByArgs['orderBy'] }
        : { orderBy?: tbl_responsavel_bebeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_responsavel_bebeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_responsavel_bebeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_responsavel_bebe model
   */
  readonly fields: tbl_responsavel_bebeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_responsavel_bebe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_responsavel_bebeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_bebe<T extends tbl_responsavel_bebe$tbl_bebeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_responsavel_bebe$tbl_bebeArgs<ExtArgs>>): Prisma__tbl_bebeClient<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_responsavel<T extends tbl_responsavel_bebe$tbl_responsavelArgs<ExtArgs> = {}>(args?: Subset<T, tbl_responsavel_bebe$tbl_responsavelArgs<ExtArgs>>): Prisma__tbl_responsavelClient<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_responsavel_bebe model
   */
  interface tbl_responsavel_bebeFieldRefs {
    readonly id_bebe_responsavel: FieldRef<"tbl_responsavel_bebe", 'Int'>
    readonly id_bebe: FieldRef<"tbl_responsavel_bebe", 'Int'>
    readonly id_responsavel: FieldRef<"tbl_responsavel_bebe", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_responsavel_bebe findUnique
   */
  export type tbl_responsavel_bebeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel_bebe to fetch.
     */
    where: tbl_responsavel_bebeWhereUniqueInput
  }

  /**
   * tbl_responsavel_bebe findUniqueOrThrow
   */
  export type tbl_responsavel_bebeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel_bebe to fetch.
     */
    where: tbl_responsavel_bebeWhereUniqueInput
  }

  /**
   * tbl_responsavel_bebe findFirst
   */
  export type tbl_responsavel_bebeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel_bebe to fetch.
     */
    where?: tbl_responsavel_bebeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_responsavel_bebes to fetch.
     */
    orderBy?: tbl_responsavel_bebeOrderByWithRelationInput | tbl_responsavel_bebeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_responsavel_bebes.
     */
    cursor?: tbl_responsavel_bebeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_responsavel_bebes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_responsavel_bebes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_responsavel_bebes.
     */
    distinct?: Tbl_responsavel_bebeScalarFieldEnum | Tbl_responsavel_bebeScalarFieldEnum[]
  }

  /**
   * tbl_responsavel_bebe findFirstOrThrow
   */
  export type tbl_responsavel_bebeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel_bebe to fetch.
     */
    where?: tbl_responsavel_bebeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_responsavel_bebes to fetch.
     */
    orderBy?: tbl_responsavel_bebeOrderByWithRelationInput | tbl_responsavel_bebeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_responsavel_bebes.
     */
    cursor?: tbl_responsavel_bebeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_responsavel_bebes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_responsavel_bebes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_responsavel_bebes.
     */
    distinct?: Tbl_responsavel_bebeScalarFieldEnum | Tbl_responsavel_bebeScalarFieldEnum[]
  }

  /**
   * tbl_responsavel_bebe findMany
   */
  export type tbl_responsavel_bebeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * Filter, which tbl_responsavel_bebes to fetch.
     */
    where?: tbl_responsavel_bebeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_responsavel_bebes to fetch.
     */
    orderBy?: tbl_responsavel_bebeOrderByWithRelationInput | tbl_responsavel_bebeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_responsavel_bebes.
     */
    cursor?: tbl_responsavel_bebeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_responsavel_bebes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_responsavel_bebes.
     */
    skip?: number
    distinct?: Tbl_responsavel_bebeScalarFieldEnum | Tbl_responsavel_bebeScalarFieldEnum[]
  }

  /**
   * tbl_responsavel_bebe create
   */
  export type tbl_responsavel_bebeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_responsavel_bebe.
     */
    data?: XOR<tbl_responsavel_bebeCreateInput, tbl_responsavel_bebeUncheckedCreateInput>
  }

  /**
   * tbl_responsavel_bebe createMany
   */
  export type tbl_responsavel_bebeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_responsavel_bebes.
     */
    data: tbl_responsavel_bebeCreateManyInput | tbl_responsavel_bebeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_responsavel_bebe update
   */
  export type tbl_responsavel_bebeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_responsavel_bebe.
     */
    data: XOR<tbl_responsavel_bebeUpdateInput, tbl_responsavel_bebeUncheckedUpdateInput>
    /**
     * Choose, which tbl_responsavel_bebe to update.
     */
    where: tbl_responsavel_bebeWhereUniqueInput
  }

  /**
   * tbl_responsavel_bebe updateMany
   */
  export type tbl_responsavel_bebeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_responsavel_bebes.
     */
    data: XOR<tbl_responsavel_bebeUpdateManyMutationInput, tbl_responsavel_bebeUncheckedUpdateManyInput>
    /**
     * Filter which tbl_responsavel_bebes to update
     */
    where?: tbl_responsavel_bebeWhereInput
    /**
     * Limit how many tbl_responsavel_bebes to update.
     */
    limit?: number
  }

  /**
   * tbl_responsavel_bebe upsert
   */
  export type tbl_responsavel_bebeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_responsavel_bebe to update in case it exists.
     */
    where: tbl_responsavel_bebeWhereUniqueInput
    /**
     * In case the tbl_responsavel_bebe found by the `where` argument doesn't exist, create a new tbl_responsavel_bebe with this data.
     */
    create: XOR<tbl_responsavel_bebeCreateInput, tbl_responsavel_bebeUncheckedCreateInput>
    /**
     * In case the tbl_responsavel_bebe was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_responsavel_bebeUpdateInput, tbl_responsavel_bebeUncheckedUpdateInput>
  }

  /**
   * tbl_responsavel_bebe delete
   */
  export type tbl_responsavel_bebeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
    /**
     * Filter which tbl_responsavel_bebe to delete.
     */
    where: tbl_responsavel_bebeWhereUniqueInput
  }

  /**
   * tbl_responsavel_bebe deleteMany
   */
  export type tbl_responsavel_bebeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_responsavel_bebes to delete
     */
    where?: tbl_responsavel_bebeWhereInput
    /**
     * Limit how many tbl_responsavel_bebes to delete.
     */
    limit?: number
  }

  /**
   * tbl_responsavel_bebe.tbl_bebe
   */
  export type tbl_responsavel_bebe$tbl_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    where?: tbl_bebeWhereInput
  }

  /**
   * tbl_responsavel_bebe.tbl_responsavel
   */
  export type tbl_responsavel_bebe$tbl_responsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    where?: tbl_responsavelWhereInput
  }

  /**
   * tbl_responsavel_bebe without action
   */
  export type tbl_responsavel_bebeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel_bebe
     */
    select?: tbl_responsavel_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel_bebe
     */
    omit?: tbl_responsavel_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavel_bebeInclude<ExtArgs> | null
  }


  /**
   * Model tbl_rotina
   */

  export type AggregateTbl_rotina = {
    _count: Tbl_rotinaCountAggregateOutputType | null
    _avg: Tbl_rotinaAvgAggregateOutputType | null
    _sum: Tbl_rotinaSumAggregateOutputType | null
    _min: Tbl_rotinaMinAggregateOutputType | null
    _max: Tbl_rotinaMaxAggregateOutputType | null
  }

  export type Tbl_rotinaAvgAggregateOutputType = {
    id_base: number | null
    id_user: number | null
    id_rotina_base: number | null
  }

  export type Tbl_rotinaSumAggregateOutputType = {
    id_base: number | null
    id_user: number | null
    id_rotina_base: number | null
  }

  export type Tbl_rotinaMinAggregateOutputType = {
    id_base: number | null
    titulo: string | null
    cor: string | null
    data_rotina: Date | null
    hora: Date | null
    descricao: string | null
    id_user: number | null
    id_rotina_base: number | null
  }

  export type Tbl_rotinaMaxAggregateOutputType = {
    id_base: number | null
    titulo: string | null
    cor: string | null
    data_rotina: Date | null
    hora: Date | null
    descricao: string | null
    id_user: number | null
    id_rotina_base: number | null
  }

  export type Tbl_rotinaCountAggregateOutputType = {
    id_base: number
    titulo: number
    cor: number
    data_rotina: number
    hora: number
    descricao: number
    id_user: number
    id_rotina_base: number
    _all: number
  }


  export type Tbl_rotinaAvgAggregateInputType = {
    id_base?: true
    id_user?: true
    id_rotina_base?: true
  }

  export type Tbl_rotinaSumAggregateInputType = {
    id_base?: true
    id_user?: true
    id_rotina_base?: true
  }

  export type Tbl_rotinaMinAggregateInputType = {
    id_base?: true
    titulo?: true
    cor?: true
    data_rotina?: true
    hora?: true
    descricao?: true
    id_user?: true
    id_rotina_base?: true
  }

  export type Tbl_rotinaMaxAggregateInputType = {
    id_base?: true
    titulo?: true
    cor?: true
    data_rotina?: true
    hora?: true
    descricao?: true
    id_user?: true
    id_rotina_base?: true
  }

  export type Tbl_rotinaCountAggregateInputType = {
    id_base?: true
    titulo?: true
    cor?: true
    data_rotina?: true
    hora?: true
    descricao?: true
    id_user?: true
    id_rotina_base?: true
    _all?: true
  }

  export type Tbl_rotinaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_rotina to aggregate.
     */
    where?: tbl_rotinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_rotinas to fetch.
     */
    orderBy?: tbl_rotinaOrderByWithRelationInput | tbl_rotinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_rotinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_rotinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_rotinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_rotinas
    **/
    _count?: true | Tbl_rotinaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_rotinaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_rotinaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_rotinaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_rotinaMaxAggregateInputType
  }

  export type GetTbl_rotinaAggregateType<T extends Tbl_rotinaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_rotina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_rotina[P]>
      : GetScalarType<T[P], AggregateTbl_rotina[P]>
  }




  export type tbl_rotinaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_rotinaWhereInput
    orderBy?: tbl_rotinaOrderByWithAggregationInput | tbl_rotinaOrderByWithAggregationInput[]
    by: Tbl_rotinaScalarFieldEnum[] | Tbl_rotinaScalarFieldEnum
    having?: tbl_rotinaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_rotinaCountAggregateInputType | true
    _avg?: Tbl_rotinaAvgAggregateInputType
    _sum?: Tbl_rotinaSumAggregateInputType
    _min?: Tbl_rotinaMinAggregateInputType
    _max?: Tbl_rotinaMaxAggregateInputType
  }

  export type Tbl_rotinaGroupByOutputType = {
    id_base: number
    titulo: string
    cor: string
    data_rotina: Date
    hora: Date
    descricao: string
    id_user: number | null
    id_rotina_base: number | null
    _count: Tbl_rotinaCountAggregateOutputType | null
    _avg: Tbl_rotinaAvgAggregateOutputType | null
    _sum: Tbl_rotinaSumAggregateOutputType | null
    _min: Tbl_rotinaMinAggregateOutputType | null
    _max: Tbl_rotinaMaxAggregateOutputType | null
  }

  type GetTbl_rotinaGroupByPayload<T extends tbl_rotinaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_rotinaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_rotinaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_rotinaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_rotinaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_rotinaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_base?: boolean
    titulo?: boolean
    cor?: boolean
    data_rotina?: boolean
    hora?: boolean
    descricao?: boolean
    id_user?: boolean
    id_rotina_base?: boolean
    tbl_rotina_base?: boolean | tbl_rotina$tbl_rotina_baseArgs<ExtArgs>
    tbl_user?: boolean | tbl_rotina$tbl_userArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_rotina"]>



  export type tbl_rotinaSelectScalar = {
    id_base?: boolean
    titulo?: boolean
    cor?: boolean
    data_rotina?: boolean
    hora?: boolean
    descricao?: boolean
    id_user?: boolean
    id_rotina_base?: boolean
  }

  export type tbl_rotinaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_base" | "titulo" | "cor" | "data_rotina" | "hora" | "descricao" | "id_user" | "id_rotina_base", ExtArgs["result"]["tbl_rotina"]>
  export type tbl_rotinaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_rotina_base?: boolean | tbl_rotina$tbl_rotina_baseArgs<ExtArgs>
    tbl_user?: boolean | tbl_rotina$tbl_userArgs<ExtArgs>
  }

  export type $tbl_rotinaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_rotina"
    objects: {
      tbl_rotina_base: Prisma.$tbl_rotina_basePayload<ExtArgs> | null
      tbl_user: Prisma.$tbl_userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_base: number
      titulo: string
      cor: string
      data_rotina: Date
      hora: Date
      descricao: string
      id_user: number | null
      id_rotina_base: number | null
    }, ExtArgs["result"]["tbl_rotina"]>
    composites: {}
  }

  type tbl_rotinaGetPayload<S extends boolean | null | undefined | tbl_rotinaDefaultArgs> = $Result.GetResult<Prisma.$tbl_rotinaPayload, S>

  type tbl_rotinaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_rotinaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_rotinaCountAggregateInputType | true
    }

  export interface tbl_rotinaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_rotina'], meta: { name: 'tbl_rotina' } }
    /**
     * Find zero or one Tbl_rotina that matches the filter.
     * @param {tbl_rotinaFindUniqueArgs} args - Arguments to find a Tbl_rotina
     * @example
     * // Get one Tbl_rotina
     * const tbl_rotina = await prisma.tbl_rotina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_rotinaFindUniqueArgs>(args: SelectSubset<T, tbl_rotinaFindUniqueArgs<ExtArgs>>): Prisma__tbl_rotinaClient<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_rotina that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_rotinaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_rotina
     * @example
     * // Get one Tbl_rotina
     * const tbl_rotina = await prisma.tbl_rotina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_rotinaFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_rotinaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_rotinaClient<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_rotina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotinaFindFirstArgs} args - Arguments to find a Tbl_rotina
     * @example
     * // Get one Tbl_rotina
     * const tbl_rotina = await prisma.tbl_rotina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_rotinaFindFirstArgs>(args?: SelectSubset<T, tbl_rotinaFindFirstArgs<ExtArgs>>): Prisma__tbl_rotinaClient<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_rotina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotinaFindFirstOrThrowArgs} args - Arguments to find a Tbl_rotina
     * @example
     * // Get one Tbl_rotina
     * const tbl_rotina = await prisma.tbl_rotina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_rotinaFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_rotinaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_rotinaClient<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_rotinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotinaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_rotinas
     * const tbl_rotinas = await prisma.tbl_rotina.findMany()
     * 
     * // Get first 10 Tbl_rotinas
     * const tbl_rotinas = await prisma.tbl_rotina.findMany({ take: 10 })
     * 
     * // Only select the `id_base`
     * const tbl_rotinaWithId_baseOnly = await prisma.tbl_rotina.findMany({ select: { id_base: true } })
     * 
     */
    findMany<T extends tbl_rotinaFindManyArgs>(args?: SelectSubset<T, tbl_rotinaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_rotina.
     * @param {tbl_rotinaCreateArgs} args - Arguments to create a Tbl_rotina.
     * @example
     * // Create one Tbl_rotina
     * const Tbl_rotina = await prisma.tbl_rotina.create({
     *   data: {
     *     // ... data to create a Tbl_rotina
     *   }
     * })
     * 
     */
    create<T extends tbl_rotinaCreateArgs>(args: SelectSubset<T, tbl_rotinaCreateArgs<ExtArgs>>): Prisma__tbl_rotinaClient<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_rotinas.
     * @param {tbl_rotinaCreateManyArgs} args - Arguments to create many Tbl_rotinas.
     * @example
     * // Create many Tbl_rotinas
     * const tbl_rotina = await prisma.tbl_rotina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_rotinaCreateManyArgs>(args?: SelectSubset<T, tbl_rotinaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_rotina.
     * @param {tbl_rotinaDeleteArgs} args - Arguments to delete one Tbl_rotina.
     * @example
     * // Delete one Tbl_rotina
     * const Tbl_rotina = await prisma.tbl_rotina.delete({
     *   where: {
     *     // ... filter to delete one Tbl_rotina
     *   }
     * })
     * 
     */
    delete<T extends tbl_rotinaDeleteArgs>(args: SelectSubset<T, tbl_rotinaDeleteArgs<ExtArgs>>): Prisma__tbl_rotinaClient<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_rotina.
     * @param {tbl_rotinaUpdateArgs} args - Arguments to update one Tbl_rotina.
     * @example
     * // Update one Tbl_rotina
     * const tbl_rotina = await prisma.tbl_rotina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_rotinaUpdateArgs>(args: SelectSubset<T, tbl_rotinaUpdateArgs<ExtArgs>>): Prisma__tbl_rotinaClient<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_rotinas.
     * @param {tbl_rotinaDeleteManyArgs} args - Arguments to filter Tbl_rotinas to delete.
     * @example
     * // Delete a few Tbl_rotinas
     * const { count } = await prisma.tbl_rotina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_rotinaDeleteManyArgs>(args?: SelectSubset<T, tbl_rotinaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_rotinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotinaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_rotinas
     * const tbl_rotina = await prisma.tbl_rotina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_rotinaUpdateManyArgs>(args: SelectSubset<T, tbl_rotinaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_rotina.
     * @param {tbl_rotinaUpsertArgs} args - Arguments to update or create a Tbl_rotina.
     * @example
     * // Update or create a Tbl_rotina
     * const tbl_rotina = await prisma.tbl_rotina.upsert({
     *   create: {
     *     // ... data to create a Tbl_rotina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_rotina we want to update
     *   }
     * })
     */
    upsert<T extends tbl_rotinaUpsertArgs>(args: SelectSubset<T, tbl_rotinaUpsertArgs<ExtArgs>>): Prisma__tbl_rotinaClient<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_rotinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotinaCountArgs} args - Arguments to filter Tbl_rotinas to count.
     * @example
     * // Count the number of Tbl_rotinas
     * const count = await prisma.tbl_rotina.count({
     *   where: {
     *     // ... the filter for the Tbl_rotinas we want to count
     *   }
     * })
    **/
    count<T extends tbl_rotinaCountArgs>(
      args?: Subset<T, tbl_rotinaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_rotinaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_rotina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_rotinaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_rotinaAggregateArgs>(args: Subset<T, Tbl_rotinaAggregateArgs>): Prisma.PrismaPromise<GetTbl_rotinaAggregateType<T>>

    /**
     * Group by Tbl_rotina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotinaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_rotinaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_rotinaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_rotinaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_rotinaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_rotinaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_rotina model
   */
  readonly fields: tbl_rotinaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_rotina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_rotinaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_rotina_base<T extends tbl_rotina$tbl_rotina_baseArgs<ExtArgs> = {}>(args?: Subset<T, tbl_rotina$tbl_rotina_baseArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tbl_user<T extends tbl_rotina$tbl_userArgs<ExtArgs> = {}>(args?: Subset<T, tbl_rotina$tbl_userArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_rotina model
   */
  interface tbl_rotinaFieldRefs {
    readonly id_base: FieldRef<"tbl_rotina", 'Int'>
    readonly titulo: FieldRef<"tbl_rotina", 'String'>
    readonly cor: FieldRef<"tbl_rotina", 'String'>
    readonly data_rotina: FieldRef<"tbl_rotina", 'DateTime'>
    readonly hora: FieldRef<"tbl_rotina", 'DateTime'>
    readonly descricao: FieldRef<"tbl_rotina", 'String'>
    readonly id_user: FieldRef<"tbl_rotina", 'Int'>
    readonly id_rotina_base: FieldRef<"tbl_rotina", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_rotina findUnique
   */
  export type tbl_rotinaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina to fetch.
     */
    where: tbl_rotinaWhereUniqueInput
  }

  /**
   * tbl_rotina findUniqueOrThrow
   */
  export type tbl_rotinaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina to fetch.
     */
    where: tbl_rotinaWhereUniqueInput
  }

  /**
   * tbl_rotina findFirst
   */
  export type tbl_rotinaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina to fetch.
     */
    where?: tbl_rotinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_rotinas to fetch.
     */
    orderBy?: tbl_rotinaOrderByWithRelationInput | tbl_rotinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_rotinas.
     */
    cursor?: tbl_rotinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_rotinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_rotinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_rotinas.
     */
    distinct?: Tbl_rotinaScalarFieldEnum | Tbl_rotinaScalarFieldEnum[]
  }

  /**
   * tbl_rotina findFirstOrThrow
   */
  export type tbl_rotinaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina to fetch.
     */
    where?: tbl_rotinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_rotinas to fetch.
     */
    orderBy?: tbl_rotinaOrderByWithRelationInput | tbl_rotinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_rotinas.
     */
    cursor?: tbl_rotinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_rotinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_rotinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_rotinas.
     */
    distinct?: Tbl_rotinaScalarFieldEnum | Tbl_rotinaScalarFieldEnum[]
  }

  /**
   * tbl_rotina findMany
   */
  export type tbl_rotinaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotinas to fetch.
     */
    where?: tbl_rotinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_rotinas to fetch.
     */
    orderBy?: tbl_rotinaOrderByWithRelationInput | tbl_rotinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_rotinas.
     */
    cursor?: tbl_rotinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_rotinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_rotinas.
     */
    skip?: number
    distinct?: Tbl_rotinaScalarFieldEnum | Tbl_rotinaScalarFieldEnum[]
  }

  /**
   * tbl_rotina create
   */
  export type tbl_rotinaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_rotina.
     */
    data: XOR<tbl_rotinaCreateInput, tbl_rotinaUncheckedCreateInput>
  }

  /**
   * tbl_rotina createMany
   */
  export type tbl_rotinaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_rotinas.
     */
    data: tbl_rotinaCreateManyInput | tbl_rotinaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_rotina update
   */
  export type tbl_rotinaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_rotina.
     */
    data: XOR<tbl_rotinaUpdateInput, tbl_rotinaUncheckedUpdateInput>
    /**
     * Choose, which tbl_rotina to update.
     */
    where: tbl_rotinaWhereUniqueInput
  }

  /**
   * tbl_rotina updateMany
   */
  export type tbl_rotinaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_rotinas.
     */
    data: XOR<tbl_rotinaUpdateManyMutationInput, tbl_rotinaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_rotinas to update
     */
    where?: tbl_rotinaWhereInput
    /**
     * Limit how many tbl_rotinas to update.
     */
    limit?: number
  }

  /**
   * tbl_rotina upsert
   */
  export type tbl_rotinaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_rotina to update in case it exists.
     */
    where: tbl_rotinaWhereUniqueInput
    /**
     * In case the tbl_rotina found by the `where` argument doesn't exist, create a new tbl_rotina with this data.
     */
    create: XOR<tbl_rotinaCreateInput, tbl_rotinaUncheckedCreateInput>
    /**
     * In case the tbl_rotina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_rotinaUpdateInput, tbl_rotinaUncheckedUpdateInput>
  }

  /**
   * tbl_rotina delete
   */
  export type tbl_rotinaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    /**
     * Filter which tbl_rotina to delete.
     */
    where: tbl_rotinaWhereUniqueInput
  }

  /**
   * tbl_rotina deleteMany
   */
  export type tbl_rotinaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_rotinas to delete
     */
    where?: tbl_rotinaWhereInput
    /**
     * Limit how many tbl_rotinas to delete.
     */
    limit?: number
  }

  /**
   * tbl_rotina.tbl_rotina_base
   */
  export type tbl_rotina$tbl_rotina_baseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    where?: tbl_rotina_baseWhereInput
  }

  /**
   * tbl_rotina.tbl_user
   */
  export type tbl_rotina$tbl_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    where?: tbl_userWhereInput
  }

  /**
   * tbl_rotina without action
   */
  export type tbl_rotinaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_rotina_base
   */

  export type AggregateTbl_rotina_base = {
    _count: Tbl_rotina_baseCountAggregateOutputType | null
    _avg: Tbl_rotina_baseAvgAggregateOutputType | null
    _sum: Tbl_rotina_baseSumAggregateOutputType | null
    _min: Tbl_rotina_baseMinAggregateOutputType | null
    _max: Tbl_rotina_baseMaxAggregateOutputType | null
  }

  export type Tbl_rotina_baseAvgAggregateOutputType = {
    id_rotina_base: number | null
  }

  export type Tbl_rotina_baseSumAggregateOutputType = {
    id_rotina_base: number | null
  }

  export type Tbl_rotina_baseMinAggregateOutputType = {
    id_rotina_base: number | null
    titulo: string | null
    cor: string | null
    data_rotina: Date | null
    hora: Date | null
    descricao: string | null
  }

  export type Tbl_rotina_baseMaxAggregateOutputType = {
    id_rotina_base: number | null
    titulo: string | null
    cor: string | null
    data_rotina: Date | null
    hora: Date | null
    descricao: string | null
  }

  export type Tbl_rotina_baseCountAggregateOutputType = {
    id_rotina_base: number
    titulo: number
    cor: number
    data_rotina: number
    hora: number
    descricao: number
    _all: number
  }


  export type Tbl_rotina_baseAvgAggregateInputType = {
    id_rotina_base?: true
  }

  export type Tbl_rotina_baseSumAggregateInputType = {
    id_rotina_base?: true
  }

  export type Tbl_rotina_baseMinAggregateInputType = {
    id_rotina_base?: true
    titulo?: true
    cor?: true
    data_rotina?: true
    hora?: true
    descricao?: true
  }

  export type Tbl_rotina_baseMaxAggregateInputType = {
    id_rotina_base?: true
    titulo?: true
    cor?: true
    data_rotina?: true
    hora?: true
    descricao?: true
  }

  export type Tbl_rotina_baseCountAggregateInputType = {
    id_rotina_base?: true
    titulo?: true
    cor?: true
    data_rotina?: true
    hora?: true
    descricao?: true
    _all?: true
  }

  export type Tbl_rotina_baseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_rotina_base to aggregate.
     */
    where?: tbl_rotina_baseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_rotina_bases to fetch.
     */
    orderBy?: tbl_rotina_baseOrderByWithRelationInput | tbl_rotina_baseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_rotina_baseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_rotina_bases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_rotina_bases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_rotina_bases
    **/
    _count?: true | Tbl_rotina_baseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_rotina_baseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_rotina_baseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_rotina_baseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_rotina_baseMaxAggregateInputType
  }

  export type GetTbl_rotina_baseAggregateType<T extends Tbl_rotina_baseAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_rotina_base]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_rotina_base[P]>
      : GetScalarType<T[P], AggregateTbl_rotina_base[P]>
  }




  export type tbl_rotina_baseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_rotina_baseWhereInput
    orderBy?: tbl_rotina_baseOrderByWithAggregationInput | tbl_rotina_baseOrderByWithAggregationInput[]
    by: Tbl_rotina_baseScalarFieldEnum[] | Tbl_rotina_baseScalarFieldEnum
    having?: tbl_rotina_baseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_rotina_baseCountAggregateInputType | true
    _avg?: Tbl_rotina_baseAvgAggregateInputType
    _sum?: Tbl_rotina_baseSumAggregateInputType
    _min?: Tbl_rotina_baseMinAggregateInputType
    _max?: Tbl_rotina_baseMaxAggregateInputType
  }

  export type Tbl_rotina_baseGroupByOutputType = {
    id_rotina_base: number
    titulo: string
    cor: string
    data_rotina: Date
    hora: Date
    descricao: string
    _count: Tbl_rotina_baseCountAggregateOutputType | null
    _avg: Tbl_rotina_baseAvgAggregateOutputType | null
    _sum: Tbl_rotina_baseSumAggregateOutputType | null
    _min: Tbl_rotina_baseMinAggregateOutputType | null
    _max: Tbl_rotina_baseMaxAggregateOutputType | null
  }

  type GetTbl_rotina_baseGroupByPayload<T extends tbl_rotina_baseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_rotina_baseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_rotina_baseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_rotina_baseGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_rotina_baseGroupByOutputType[P]>
        }
      >
    >


  export type tbl_rotina_baseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_rotina_base?: boolean
    titulo?: boolean
    cor?: boolean
    data_rotina?: boolean
    hora?: boolean
    descricao?: boolean
    tbl_rotina?: boolean | tbl_rotina_base$tbl_rotinaArgs<ExtArgs>
    _count?: boolean | Tbl_rotina_baseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_rotina_base"]>



  export type tbl_rotina_baseSelectScalar = {
    id_rotina_base?: boolean
    titulo?: boolean
    cor?: boolean
    data_rotina?: boolean
    hora?: boolean
    descricao?: boolean
  }

  export type tbl_rotina_baseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_rotina_base" | "titulo" | "cor" | "data_rotina" | "hora" | "descricao", ExtArgs["result"]["tbl_rotina_base"]>
  export type tbl_rotina_baseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_rotina?: boolean | tbl_rotina_base$tbl_rotinaArgs<ExtArgs>
    _count?: boolean | Tbl_rotina_baseCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_rotina_basePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_rotina_base"
    objects: {
      tbl_rotina: Prisma.$tbl_rotinaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_rotina_base: number
      titulo: string
      cor: string
      data_rotina: Date
      hora: Date
      descricao: string
    }, ExtArgs["result"]["tbl_rotina_base"]>
    composites: {}
  }

  type tbl_rotina_baseGetPayload<S extends boolean | null | undefined | tbl_rotina_baseDefaultArgs> = $Result.GetResult<Prisma.$tbl_rotina_basePayload, S>

  type tbl_rotina_baseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_rotina_baseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_rotina_baseCountAggregateInputType | true
    }

  export interface tbl_rotina_baseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_rotina_base'], meta: { name: 'tbl_rotina_base' } }
    /**
     * Find zero or one Tbl_rotina_base that matches the filter.
     * @param {tbl_rotina_baseFindUniqueArgs} args - Arguments to find a Tbl_rotina_base
     * @example
     * // Get one Tbl_rotina_base
     * const tbl_rotina_base = await prisma.tbl_rotina_base.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_rotina_baseFindUniqueArgs>(args: SelectSubset<T, tbl_rotina_baseFindUniqueArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_rotina_base that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_rotina_baseFindUniqueOrThrowArgs} args - Arguments to find a Tbl_rotina_base
     * @example
     * // Get one Tbl_rotina_base
     * const tbl_rotina_base = await prisma.tbl_rotina_base.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_rotina_baseFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_rotina_baseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_rotina_base that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotina_baseFindFirstArgs} args - Arguments to find a Tbl_rotina_base
     * @example
     * // Get one Tbl_rotina_base
     * const tbl_rotina_base = await prisma.tbl_rotina_base.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_rotina_baseFindFirstArgs>(args?: SelectSubset<T, tbl_rotina_baseFindFirstArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_rotina_base that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotina_baseFindFirstOrThrowArgs} args - Arguments to find a Tbl_rotina_base
     * @example
     * // Get one Tbl_rotina_base
     * const tbl_rotina_base = await prisma.tbl_rotina_base.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_rotina_baseFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_rotina_baseFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_rotina_bases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotina_baseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_rotina_bases
     * const tbl_rotina_bases = await prisma.tbl_rotina_base.findMany()
     * 
     * // Get first 10 Tbl_rotina_bases
     * const tbl_rotina_bases = await prisma.tbl_rotina_base.findMany({ take: 10 })
     * 
     * // Only select the `id_rotina_base`
     * const tbl_rotina_baseWithId_rotina_baseOnly = await prisma.tbl_rotina_base.findMany({ select: { id_rotina_base: true } })
     * 
     */
    findMany<T extends tbl_rotina_baseFindManyArgs>(args?: SelectSubset<T, tbl_rotina_baseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_rotina_base.
     * @param {tbl_rotina_baseCreateArgs} args - Arguments to create a Tbl_rotina_base.
     * @example
     * // Create one Tbl_rotina_base
     * const Tbl_rotina_base = await prisma.tbl_rotina_base.create({
     *   data: {
     *     // ... data to create a Tbl_rotina_base
     *   }
     * })
     * 
     */
    create<T extends tbl_rotina_baseCreateArgs>(args: SelectSubset<T, tbl_rotina_baseCreateArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_rotina_bases.
     * @param {tbl_rotina_baseCreateManyArgs} args - Arguments to create many Tbl_rotina_bases.
     * @example
     * // Create many Tbl_rotina_bases
     * const tbl_rotina_base = await prisma.tbl_rotina_base.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_rotina_baseCreateManyArgs>(args?: SelectSubset<T, tbl_rotina_baseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_rotina_base.
     * @param {tbl_rotina_baseDeleteArgs} args - Arguments to delete one Tbl_rotina_base.
     * @example
     * // Delete one Tbl_rotina_base
     * const Tbl_rotina_base = await prisma.tbl_rotina_base.delete({
     *   where: {
     *     // ... filter to delete one Tbl_rotina_base
     *   }
     * })
     * 
     */
    delete<T extends tbl_rotina_baseDeleteArgs>(args: SelectSubset<T, tbl_rotina_baseDeleteArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_rotina_base.
     * @param {tbl_rotina_baseUpdateArgs} args - Arguments to update one Tbl_rotina_base.
     * @example
     * // Update one Tbl_rotina_base
     * const tbl_rotina_base = await prisma.tbl_rotina_base.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_rotina_baseUpdateArgs>(args: SelectSubset<T, tbl_rotina_baseUpdateArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_rotina_bases.
     * @param {tbl_rotina_baseDeleteManyArgs} args - Arguments to filter Tbl_rotina_bases to delete.
     * @example
     * // Delete a few Tbl_rotina_bases
     * const { count } = await prisma.tbl_rotina_base.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_rotina_baseDeleteManyArgs>(args?: SelectSubset<T, tbl_rotina_baseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_rotina_bases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotina_baseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_rotina_bases
     * const tbl_rotina_base = await prisma.tbl_rotina_base.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_rotina_baseUpdateManyArgs>(args: SelectSubset<T, tbl_rotina_baseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_rotina_base.
     * @param {tbl_rotina_baseUpsertArgs} args - Arguments to update or create a Tbl_rotina_base.
     * @example
     * // Update or create a Tbl_rotina_base
     * const tbl_rotina_base = await prisma.tbl_rotina_base.upsert({
     *   create: {
     *     // ... data to create a Tbl_rotina_base
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_rotina_base we want to update
     *   }
     * })
     */
    upsert<T extends tbl_rotina_baseUpsertArgs>(args: SelectSubset<T, tbl_rotina_baseUpsertArgs<ExtArgs>>): Prisma__tbl_rotina_baseClient<$Result.GetResult<Prisma.$tbl_rotina_basePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_rotina_bases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotina_baseCountArgs} args - Arguments to filter Tbl_rotina_bases to count.
     * @example
     * // Count the number of Tbl_rotina_bases
     * const count = await prisma.tbl_rotina_base.count({
     *   where: {
     *     // ... the filter for the Tbl_rotina_bases we want to count
     *   }
     * })
    **/
    count<T extends tbl_rotina_baseCountArgs>(
      args?: Subset<T, tbl_rotina_baseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_rotina_baseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_rotina_base.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_rotina_baseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_rotina_baseAggregateArgs>(args: Subset<T, Tbl_rotina_baseAggregateArgs>): Prisma.PrismaPromise<GetTbl_rotina_baseAggregateType<T>>

    /**
     * Group by Tbl_rotina_base.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_rotina_baseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_rotina_baseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_rotina_baseGroupByArgs['orderBy'] }
        : { orderBy?: tbl_rotina_baseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_rotina_baseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_rotina_baseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_rotina_base model
   */
  readonly fields: tbl_rotina_baseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_rotina_base.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_rotina_baseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_rotina<T extends tbl_rotina_base$tbl_rotinaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_rotina_base$tbl_rotinaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_rotina_base model
   */
  interface tbl_rotina_baseFieldRefs {
    readonly id_rotina_base: FieldRef<"tbl_rotina_base", 'Int'>
    readonly titulo: FieldRef<"tbl_rotina_base", 'String'>
    readonly cor: FieldRef<"tbl_rotina_base", 'String'>
    readonly data_rotina: FieldRef<"tbl_rotina_base", 'DateTime'>
    readonly hora: FieldRef<"tbl_rotina_base", 'DateTime'>
    readonly descricao: FieldRef<"tbl_rotina_base", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_rotina_base findUnique
   */
  export type tbl_rotina_baseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina_base to fetch.
     */
    where: tbl_rotina_baseWhereUniqueInput
  }

  /**
   * tbl_rotina_base findUniqueOrThrow
   */
  export type tbl_rotina_baseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina_base to fetch.
     */
    where: tbl_rotina_baseWhereUniqueInput
  }

  /**
   * tbl_rotina_base findFirst
   */
  export type tbl_rotina_baseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina_base to fetch.
     */
    where?: tbl_rotina_baseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_rotina_bases to fetch.
     */
    orderBy?: tbl_rotina_baseOrderByWithRelationInput | tbl_rotina_baseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_rotina_bases.
     */
    cursor?: tbl_rotina_baseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_rotina_bases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_rotina_bases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_rotina_bases.
     */
    distinct?: Tbl_rotina_baseScalarFieldEnum | Tbl_rotina_baseScalarFieldEnum[]
  }

  /**
   * tbl_rotina_base findFirstOrThrow
   */
  export type tbl_rotina_baseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina_base to fetch.
     */
    where?: tbl_rotina_baseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_rotina_bases to fetch.
     */
    orderBy?: tbl_rotina_baseOrderByWithRelationInput | tbl_rotina_baseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_rotina_bases.
     */
    cursor?: tbl_rotina_baseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_rotina_bases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_rotina_bases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_rotina_bases.
     */
    distinct?: Tbl_rotina_baseScalarFieldEnum | Tbl_rotina_baseScalarFieldEnum[]
  }

  /**
   * tbl_rotina_base findMany
   */
  export type tbl_rotina_baseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * Filter, which tbl_rotina_bases to fetch.
     */
    where?: tbl_rotina_baseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_rotina_bases to fetch.
     */
    orderBy?: tbl_rotina_baseOrderByWithRelationInput | tbl_rotina_baseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_rotina_bases.
     */
    cursor?: tbl_rotina_baseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_rotina_bases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_rotina_bases.
     */
    skip?: number
    distinct?: Tbl_rotina_baseScalarFieldEnum | Tbl_rotina_baseScalarFieldEnum[]
  }

  /**
   * tbl_rotina_base create
   */
  export type tbl_rotina_baseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_rotina_base.
     */
    data: XOR<tbl_rotina_baseCreateInput, tbl_rotina_baseUncheckedCreateInput>
  }

  /**
   * tbl_rotina_base createMany
   */
  export type tbl_rotina_baseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_rotina_bases.
     */
    data: tbl_rotina_baseCreateManyInput | tbl_rotina_baseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_rotina_base update
   */
  export type tbl_rotina_baseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_rotina_base.
     */
    data: XOR<tbl_rotina_baseUpdateInput, tbl_rotina_baseUncheckedUpdateInput>
    /**
     * Choose, which tbl_rotina_base to update.
     */
    where: tbl_rotina_baseWhereUniqueInput
  }

  /**
   * tbl_rotina_base updateMany
   */
  export type tbl_rotina_baseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_rotina_bases.
     */
    data: XOR<tbl_rotina_baseUpdateManyMutationInput, tbl_rotina_baseUncheckedUpdateManyInput>
    /**
     * Filter which tbl_rotina_bases to update
     */
    where?: tbl_rotina_baseWhereInput
    /**
     * Limit how many tbl_rotina_bases to update.
     */
    limit?: number
  }

  /**
   * tbl_rotina_base upsert
   */
  export type tbl_rotina_baseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_rotina_base to update in case it exists.
     */
    where: tbl_rotina_baseWhereUniqueInput
    /**
     * In case the tbl_rotina_base found by the `where` argument doesn't exist, create a new tbl_rotina_base with this data.
     */
    create: XOR<tbl_rotina_baseCreateInput, tbl_rotina_baseUncheckedCreateInput>
    /**
     * In case the tbl_rotina_base was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_rotina_baseUpdateInput, tbl_rotina_baseUncheckedUpdateInput>
  }

  /**
   * tbl_rotina_base delete
   */
  export type tbl_rotina_baseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
    /**
     * Filter which tbl_rotina_base to delete.
     */
    where: tbl_rotina_baseWhereUniqueInput
  }

  /**
   * tbl_rotina_base deleteMany
   */
  export type tbl_rotina_baseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_rotina_bases to delete
     */
    where?: tbl_rotina_baseWhereInput
    /**
     * Limit how many tbl_rotina_bases to delete.
     */
    limit?: number
  }

  /**
   * tbl_rotina_base.tbl_rotina
   */
  export type tbl_rotina_base$tbl_rotinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    where?: tbl_rotinaWhereInput
    orderBy?: tbl_rotinaOrderByWithRelationInput | tbl_rotinaOrderByWithRelationInput[]
    cursor?: tbl_rotinaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_rotinaScalarFieldEnum | Tbl_rotinaScalarFieldEnum[]
  }

  /**
   * tbl_rotina_base without action
   */
  export type tbl_rotina_baseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina_base
     */
    select?: tbl_rotina_baseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina_base
     */
    omit?: tbl_rotina_baseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotina_baseInclude<ExtArgs> | null
  }


  /**
   * Model tbl_sangue
   */

  export type AggregateTbl_sangue = {
    _count: Tbl_sangueCountAggregateOutputType | null
    _avg: Tbl_sangueAvgAggregateOutputType | null
    _sum: Tbl_sangueSumAggregateOutputType | null
    _min: Tbl_sangueMinAggregateOutputType | null
    _max: Tbl_sangueMaxAggregateOutputType | null
  }

  export type Tbl_sangueAvgAggregateOutputType = {
    id_sangue: number | null
  }

  export type Tbl_sangueSumAggregateOutputType = {
    id_sangue: number | null
  }

  export type Tbl_sangueMinAggregateOutputType = {
    id_sangue: number | null
    tipo_sanguineo: string | null
  }

  export type Tbl_sangueMaxAggregateOutputType = {
    id_sangue: number | null
    tipo_sanguineo: string | null
  }

  export type Tbl_sangueCountAggregateOutputType = {
    id_sangue: number
    tipo_sanguineo: number
    _all: number
  }


  export type Tbl_sangueAvgAggregateInputType = {
    id_sangue?: true
  }

  export type Tbl_sangueSumAggregateInputType = {
    id_sangue?: true
  }

  export type Tbl_sangueMinAggregateInputType = {
    id_sangue?: true
    tipo_sanguineo?: true
  }

  export type Tbl_sangueMaxAggregateInputType = {
    id_sangue?: true
    tipo_sanguineo?: true
  }

  export type Tbl_sangueCountAggregateInputType = {
    id_sangue?: true
    tipo_sanguineo?: true
    _all?: true
  }

  export type Tbl_sangueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_sangue to aggregate.
     */
    where?: tbl_sangueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sangues to fetch.
     */
    orderBy?: tbl_sangueOrderByWithRelationInput | tbl_sangueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_sangueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sangues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sangues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_sangues
    **/
    _count?: true | Tbl_sangueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_sangueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_sangueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_sangueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_sangueMaxAggregateInputType
  }

  export type GetTbl_sangueAggregateType<T extends Tbl_sangueAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_sangue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_sangue[P]>
      : GetScalarType<T[P], AggregateTbl_sangue[P]>
  }




  export type tbl_sangueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_sangueWhereInput
    orderBy?: tbl_sangueOrderByWithAggregationInput | tbl_sangueOrderByWithAggregationInput[]
    by: Tbl_sangueScalarFieldEnum[] | Tbl_sangueScalarFieldEnum
    having?: tbl_sangueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_sangueCountAggregateInputType | true
    _avg?: Tbl_sangueAvgAggregateInputType
    _sum?: Tbl_sangueSumAggregateInputType
    _min?: Tbl_sangueMinAggregateInputType
    _max?: Tbl_sangueMaxAggregateInputType
  }

  export type Tbl_sangueGroupByOutputType = {
    id_sangue: number
    tipo_sanguineo: string
    _count: Tbl_sangueCountAggregateOutputType | null
    _avg: Tbl_sangueAvgAggregateOutputType | null
    _sum: Tbl_sangueSumAggregateOutputType | null
    _min: Tbl_sangueMinAggregateOutputType | null
    _max: Tbl_sangueMaxAggregateOutputType | null
  }

  type GetTbl_sangueGroupByPayload<T extends tbl_sangueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_sangueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_sangueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_sangueGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_sangueGroupByOutputType[P]>
        }
      >
    >


  export type tbl_sangueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sangue?: boolean
    tipo_sanguineo?: boolean
    tbl_bebe?: boolean | tbl_sangue$tbl_bebeArgs<ExtArgs>
    _count?: boolean | Tbl_sangueCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_sangue"]>



  export type tbl_sangueSelectScalar = {
    id_sangue?: boolean
    tipo_sanguineo?: boolean
  }

  export type tbl_sangueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_sangue" | "tipo_sanguineo", ExtArgs["result"]["tbl_sangue"]>
  export type tbl_sangueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_bebe?: boolean | tbl_sangue$tbl_bebeArgs<ExtArgs>
    _count?: boolean | Tbl_sangueCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_sanguePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_sangue"
    objects: {
      tbl_bebe: Prisma.$tbl_bebePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sangue: number
      tipo_sanguineo: string
    }, ExtArgs["result"]["tbl_sangue"]>
    composites: {}
  }

  type tbl_sangueGetPayload<S extends boolean | null | undefined | tbl_sangueDefaultArgs> = $Result.GetResult<Prisma.$tbl_sanguePayload, S>

  type tbl_sangueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_sangueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_sangueCountAggregateInputType | true
    }

  export interface tbl_sangueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_sangue'], meta: { name: 'tbl_sangue' } }
    /**
     * Find zero or one Tbl_sangue that matches the filter.
     * @param {tbl_sangueFindUniqueArgs} args - Arguments to find a Tbl_sangue
     * @example
     * // Get one Tbl_sangue
     * const tbl_sangue = await prisma.tbl_sangue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_sangueFindUniqueArgs>(args: SelectSubset<T, tbl_sangueFindUniqueArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_sangue that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_sangueFindUniqueOrThrowArgs} args - Arguments to find a Tbl_sangue
     * @example
     * // Get one Tbl_sangue
     * const tbl_sangue = await prisma.tbl_sangue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_sangueFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_sangueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_sangue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sangueFindFirstArgs} args - Arguments to find a Tbl_sangue
     * @example
     * // Get one Tbl_sangue
     * const tbl_sangue = await prisma.tbl_sangue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_sangueFindFirstArgs>(args?: SelectSubset<T, tbl_sangueFindFirstArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_sangue that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sangueFindFirstOrThrowArgs} args - Arguments to find a Tbl_sangue
     * @example
     * // Get one Tbl_sangue
     * const tbl_sangue = await prisma.tbl_sangue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_sangueFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_sangueFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_sangues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sangueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_sangues
     * const tbl_sangues = await prisma.tbl_sangue.findMany()
     * 
     * // Get first 10 Tbl_sangues
     * const tbl_sangues = await prisma.tbl_sangue.findMany({ take: 10 })
     * 
     * // Only select the `id_sangue`
     * const tbl_sangueWithId_sangueOnly = await prisma.tbl_sangue.findMany({ select: { id_sangue: true } })
     * 
     */
    findMany<T extends tbl_sangueFindManyArgs>(args?: SelectSubset<T, tbl_sangueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_sangue.
     * @param {tbl_sangueCreateArgs} args - Arguments to create a Tbl_sangue.
     * @example
     * // Create one Tbl_sangue
     * const Tbl_sangue = await prisma.tbl_sangue.create({
     *   data: {
     *     // ... data to create a Tbl_sangue
     *   }
     * })
     * 
     */
    create<T extends tbl_sangueCreateArgs>(args: SelectSubset<T, tbl_sangueCreateArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_sangues.
     * @param {tbl_sangueCreateManyArgs} args - Arguments to create many Tbl_sangues.
     * @example
     * // Create many Tbl_sangues
     * const tbl_sangue = await prisma.tbl_sangue.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_sangueCreateManyArgs>(args?: SelectSubset<T, tbl_sangueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_sangue.
     * @param {tbl_sangueDeleteArgs} args - Arguments to delete one Tbl_sangue.
     * @example
     * // Delete one Tbl_sangue
     * const Tbl_sangue = await prisma.tbl_sangue.delete({
     *   where: {
     *     // ... filter to delete one Tbl_sangue
     *   }
     * })
     * 
     */
    delete<T extends tbl_sangueDeleteArgs>(args: SelectSubset<T, tbl_sangueDeleteArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_sangue.
     * @param {tbl_sangueUpdateArgs} args - Arguments to update one Tbl_sangue.
     * @example
     * // Update one Tbl_sangue
     * const tbl_sangue = await prisma.tbl_sangue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_sangueUpdateArgs>(args: SelectSubset<T, tbl_sangueUpdateArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_sangues.
     * @param {tbl_sangueDeleteManyArgs} args - Arguments to filter Tbl_sangues to delete.
     * @example
     * // Delete a few Tbl_sangues
     * const { count } = await prisma.tbl_sangue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_sangueDeleteManyArgs>(args?: SelectSubset<T, tbl_sangueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_sangues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sangueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_sangues
     * const tbl_sangue = await prisma.tbl_sangue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_sangueUpdateManyArgs>(args: SelectSubset<T, tbl_sangueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_sangue.
     * @param {tbl_sangueUpsertArgs} args - Arguments to update or create a Tbl_sangue.
     * @example
     * // Update or create a Tbl_sangue
     * const tbl_sangue = await prisma.tbl_sangue.upsert({
     *   create: {
     *     // ... data to create a Tbl_sangue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_sangue we want to update
     *   }
     * })
     */
    upsert<T extends tbl_sangueUpsertArgs>(args: SelectSubset<T, tbl_sangueUpsertArgs<ExtArgs>>): Prisma__tbl_sangueClient<$Result.GetResult<Prisma.$tbl_sanguePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_sangues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sangueCountArgs} args - Arguments to filter Tbl_sangues to count.
     * @example
     * // Count the number of Tbl_sangues
     * const count = await prisma.tbl_sangue.count({
     *   where: {
     *     // ... the filter for the Tbl_sangues we want to count
     *   }
     * })
    **/
    count<T extends tbl_sangueCountArgs>(
      args?: Subset<T, tbl_sangueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_sangueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_sangue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_sangueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_sangueAggregateArgs>(args: Subset<T, Tbl_sangueAggregateArgs>): Prisma.PrismaPromise<GetTbl_sangueAggregateType<T>>

    /**
     * Group by Tbl_sangue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sangueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_sangueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_sangueGroupByArgs['orderBy'] }
        : { orderBy?: tbl_sangueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_sangueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_sangueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_sangue model
   */
  readonly fields: tbl_sangueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_sangue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_sangueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_bebe<T extends tbl_sangue$tbl_bebeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sangue$tbl_bebeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_sangue model
   */
  interface tbl_sangueFieldRefs {
    readonly id_sangue: FieldRef<"tbl_sangue", 'Int'>
    readonly tipo_sanguineo: FieldRef<"tbl_sangue", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_sangue findUnique
   */
  export type tbl_sangueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sangue to fetch.
     */
    where: tbl_sangueWhereUniqueInput
  }

  /**
   * tbl_sangue findUniqueOrThrow
   */
  export type tbl_sangueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sangue to fetch.
     */
    where: tbl_sangueWhereUniqueInput
  }

  /**
   * tbl_sangue findFirst
   */
  export type tbl_sangueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sangue to fetch.
     */
    where?: tbl_sangueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sangues to fetch.
     */
    orderBy?: tbl_sangueOrderByWithRelationInput | tbl_sangueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_sangues.
     */
    cursor?: tbl_sangueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sangues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sangues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_sangues.
     */
    distinct?: Tbl_sangueScalarFieldEnum | Tbl_sangueScalarFieldEnum[]
  }

  /**
   * tbl_sangue findFirstOrThrow
   */
  export type tbl_sangueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sangue to fetch.
     */
    where?: tbl_sangueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sangues to fetch.
     */
    orderBy?: tbl_sangueOrderByWithRelationInput | tbl_sangueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_sangues.
     */
    cursor?: tbl_sangueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sangues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sangues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_sangues.
     */
    distinct?: Tbl_sangueScalarFieldEnum | Tbl_sangueScalarFieldEnum[]
  }

  /**
   * tbl_sangue findMany
   */
  export type tbl_sangueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sangues to fetch.
     */
    where?: tbl_sangueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sangues to fetch.
     */
    orderBy?: tbl_sangueOrderByWithRelationInput | tbl_sangueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_sangues.
     */
    cursor?: tbl_sangueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sangues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sangues.
     */
    skip?: number
    distinct?: Tbl_sangueScalarFieldEnum | Tbl_sangueScalarFieldEnum[]
  }

  /**
   * tbl_sangue create
   */
  export type tbl_sangueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_sangue.
     */
    data: XOR<tbl_sangueCreateInput, tbl_sangueUncheckedCreateInput>
  }

  /**
   * tbl_sangue createMany
   */
  export type tbl_sangueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_sangues.
     */
    data: tbl_sangueCreateManyInput | tbl_sangueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_sangue update
   */
  export type tbl_sangueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_sangue.
     */
    data: XOR<tbl_sangueUpdateInput, tbl_sangueUncheckedUpdateInput>
    /**
     * Choose, which tbl_sangue to update.
     */
    where: tbl_sangueWhereUniqueInput
  }

  /**
   * tbl_sangue updateMany
   */
  export type tbl_sangueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_sangues.
     */
    data: XOR<tbl_sangueUpdateManyMutationInput, tbl_sangueUncheckedUpdateManyInput>
    /**
     * Filter which tbl_sangues to update
     */
    where?: tbl_sangueWhereInput
    /**
     * Limit how many tbl_sangues to update.
     */
    limit?: number
  }

  /**
   * tbl_sangue upsert
   */
  export type tbl_sangueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_sangue to update in case it exists.
     */
    where: tbl_sangueWhereUniqueInput
    /**
     * In case the tbl_sangue found by the `where` argument doesn't exist, create a new tbl_sangue with this data.
     */
    create: XOR<tbl_sangueCreateInput, tbl_sangueUncheckedCreateInput>
    /**
     * In case the tbl_sangue was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_sangueUpdateInput, tbl_sangueUncheckedUpdateInput>
  }

  /**
   * tbl_sangue delete
   */
  export type tbl_sangueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
    /**
     * Filter which tbl_sangue to delete.
     */
    where: tbl_sangueWhereUniqueInput
  }

  /**
   * tbl_sangue deleteMany
   */
  export type tbl_sangueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_sangues to delete
     */
    where?: tbl_sangueWhereInput
    /**
     * Limit how many tbl_sangues to delete.
     */
    limit?: number
  }

  /**
   * tbl_sangue.tbl_bebe
   */
  export type tbl_sangue$tbl_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    where?: tbl_bebeWhereInput
    orderBy?: tbl_bebeOrderByWithRelationInput | tbl_bebeOrderByWithRelationInput[]
    cursor?: tbl_bebeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_bebeScalarFieldEnum | Tbl_bebeScalarFieldEnum[]
  }

  /**
   * tbl_sangue without action
   */
  export type tbl_sangueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sangue
     */
    select?: tbl_sangueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sangue
     */
    omit?: tbl_sangueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sangueInclude<ExtArgs> | null
  }


  /**
   * Model tbl_sexo
   */

  export type AggregateTbl_sexo = {
    _count: Tbl_sexoCountAggregateOutputType | null
    _avg: Tbl_sexoAvgAggregateOutputType | null
    _sum: Tbl_sexoSumAggregateOutputType | null
    _min: Tbl_sexoMinAggregateOutputType | null
    _max: Tbl_sexoMaxAggregateOutputType | null
  }

  export type Tbl_sexoAvgAggregateOutputType = {
    id_sexo: number | null
  }

  export type Tbl_sexoSumAggregateOutputType = {
    id_sexo: number | null
  }

  export type Tbl_sexoMinAggregateOutputType = {
    id_sexo: number | null
    sexo: string | null
  }

  export type Tbl_sexoMaxAggregateOutputType = {
    id_sexo: number | null
    sexo: string | null
  }

  export type Tbl_sexoCountAggregateOutputType = {
    id_sexo: number
    sexo: number
    _all: number
  }


  export type Tbl_sexoAvgAggregateInputType = {
    id_sexo?: true
  }

  export type Tbl_sexoSumAggregateInputType = {
    id_sexo?: true
  }

  export type Tbl_sexoMinAggregateInputType = {
    id_sexo?: true
    sexo?: true
  }

  export type Tbl_sexoMaxAggregateInputType = {
    id_sexo?: true
    sexo?: true
  }

  export type Tbl_sexoCountAggregateInputType = {
    id_sexo?: true
    sexo?: true
    _all?: true
  }

  export type Tbl_sexoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_sexo to aggregate.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_sexos
    **/
    _count?: true | Tbl_sexoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_sexoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_sexoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_sexoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_sexoMaxAggregateInputType
  }

  export type GetTbl_sexoAggregateType<T extends Tbl_sexoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_sexo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_sexo[P]>
      : GetScalarType<T[P], AggregateTbl_sexo[P]>
  }




  export type tbl_sexoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_sexoWhereInput
    orderBy?: tbl_sexoOrderByWithAggregationInput | tbl_sexoOrderByWithAggregationInput[]
    by: Tbl_sexoScalarFieldEnum[] | Tbl_sexoScalarFieldEnum
    having?: tbl_sexoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_sexoCountAggregateInputType | true
    _avg?: Tbl_sexoAvgAggregateInputType
    _sum?: Tbl_sexoSumAggregateInputType
    _min?: Tbl_sexoMinAggregateInputType
    _max?: Tbl_sexoMaxAggregateInputType
  }

  export type Tbl_sexoGroupByOutputType = {
    id_sexo: number
    sexo: string
    _count: Tbl_sexoCountAggregateOutputType | null
    _avg: Tbl_sexoAvgAggregateOutputType | null
    _sum: Tbl_sexoSumAggregateOutputType | null
    _min: Tbl_sexoMinAggregateOutputType | null
    _max: Tbl_sexoMaxAggregateOutputType | null
  }

  type GetTbl_sexoGroupByPayload<T extends tbl_sexoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_sexoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_sexoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_sexoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_sexoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_sexoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sexo?: boolean
    sexo?: boolean
    tbl_bebe?: boolean | tbl_sexo$tbl_bebeArgs<ExtArgs>
    tbl_medico?: boolean | tbl_sexo$tbl_medicoArgs<ExtArgs>
    tbl_responsavel?: boolean | tbl_sexo$tbl_responsavelArgs<ExtArgs>
    _count?: boolean | Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_sexo"]>



  export type tbl_sexoSelectScalar = {
    id_sexo?: boolean
    sexo?: boolean
  }

  export type tbl_sexoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_sexo" | "sexo", ExtArgs["result"]["tbl_sexo"]>
  export type tbl_sexoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_bebe?: boolean | tbl_sexo$tbl_bebeArgs<ExtArgs>
    tbl_medico?: boolean | tbl_sexo$tbl_medicoArgs<ExtArgs>
    tbl_responsavel?: boolean | tbl_sexo$tbl_responsavelArgs<ExtArgs>
    _count?: boolean | Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_sexoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_sexo"
    objects: {
      tbl_bebe: Prisma.$tbl_bebePayload<ExtArgs>[]
      tbl_medico: Prisma.$tbl_medicoPayload<ExtArgs>[]
      tbl_responsavel: Prisma.$tbl_responsavelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sexo: number
      sexo: string
    }, ExtArgs["result"]["tbl_sexo"]>
    composites: {}
  }

  type tbl_sexoGetPayload<S extends boolean | null | undefined | tbl_sexoDefaultArgs> = $Result.GetResult<Prisma.$tbl_sexoPayload, S>

  type tbl_sexoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_sexoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_sexoCountAggregateInputType | true
    }

  export interface tbl_sexoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_sexo'], meta: { name: 'tbl_sexo' } }
    /**
     * Find zero or one Tbl_sexo that matches the filter.
     * @param {tbl_sexoFindUniqueArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_sexoFindUniqueArgs>(args: SelectSubset<T, tbl_sexoFindUniqueArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_sexo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_sexoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_sexoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_sexoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_sexo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindFirstArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_sexoFindFirstArgs>(args?: SelectSubset<T, tbl_sexoFindFirstArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_sexo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindFirstOrThrowArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_sexoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_sexoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_sexos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_sexos
     * const tbl_sexos = await prisma.tbl_sexo.findMany()
     * 
     * // Get first 10 Tbl_sexos
     * const tbl_sexos = await prisma.tbl_sexo.findMany({ take: 10 })
     * 
     * // Only select the `id_sexo`
     * const tbl_sexoWithId_sexoOnly = await prisma.tbl_sexo.findMany({ select: { id_sexo: true } })
     * 
     */
    findMany<T extends tbl_sexoFindManyArgs>(args?: SelectSubset<T, tbl_sexoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_sexo.
     * @param {tbl_sexoCreateArgs} args - Arguments to create a Tbl_sexo.
     * @example
     * // Create one Tbl_sexo
     * const Tbl_sexo = await prisma.tbl_sexo.create({
     *   data: {
     *     // ... data to create a Tbl_sexo
     *   }
     * })
     * 
     */
    create<T extends tbl_sexoCreateArgs>(args: SelectSubset<T, tbl_sexoCreateArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_sexos.
     * @param {tbl_sexoCreateManyArgs} args - Arguments to create many Tbl_sexos.
     * @example
     * // Create many Tbl_sexos
     * const tbl_sexo = await prisma.tbl_sexo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_sexoCreateManyArgs>(args?: SelectSubset<T, tbl_sexoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_sexo.
     * @param {tbl_sexoDeleteArgs} args - Arguments to delete one Tbl_sexo.
     * @example
     * // Delete one Tbl_sexo
     * const Tbl_sexo = await prisma.tbl_sexo.delete({
     *   where: {
     *     // ... filter to delete one Tbl_sexo
     *   }
     * })
     * 
     */
    delete<T extends tbl_sexoDeleteArgs>(args: SelectSubset<T, tbl_sexoDeleteArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_sexo.
     * @param {tbl_sexoUpdateArgs} args - Arguments to update one Tbl_sexo.
     * @example
     * // Update one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_sexoUpdateArgs>(args: SelectSubset<T, tbl_sexoUpdateArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_sexos.
     * @param {tbl_sexoDeleteManyArgs} args - Arguments to filter Tbl_sexos to delete.
     * @example
     * // Delete a few Tbl_sexos
     * const { count } = await prisma.tbl_sexo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_sexoDeleteManyArgs>(args?: SelectSubset<T, tbl_sexoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_sexos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_sexos
     * const tbl_sexo = await prisma.tbl_sexo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_sexoUpdateManyArgs>(args: SelectSubset<T, tbl_sexoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_sexo.
     * @param {tbl_sexoUpsertArgs} args - Arguments to update or create a Tbl_sexo.
     * @example
     * // Update or create a Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.upsert({
     *   create: {
     *     // ... data to create a Tbl_sexo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_sexo we want to update
     *   }
     * })
     */
    upsert<T extends tbl_sexoUpsertArgs>(args: SelectSubset<T, tbl_sexoUpsertArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_sexos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoCountArgs} args - Arguments to filter Tbl_sexos to count.
     * @example
     * // Count the number of Tbl_sexos
     * const count = await prisma.tbl_sexo.count({
     *   where: {
     *     // ... the filter for the Tbl_sexos we want to count
     *   }
     * })
    **/
    count<T extends tbl_sexoCountArgs>(
      args?: Subset<T, tbl_sexoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_sexoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_sexo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_sexoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_sexoAggregateArgs>(args: Subset<T, Tbl_sexoAggregateArgs>): Prisma.PrismaPromise<GetTbl_sexoAggregateType<T>>

    /**
     * Group by Tbl_sexo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_sexoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_sexoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_sexoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_sexoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_sexoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_sexo model
   */
  readonly fields: tbl_sexoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_sexo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_sexoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_bebe<T extends tbl_sexo$tbl_bebeArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexo$tbl_bebeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_bebePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_medico<T extends tbl_sexo$tbl_medicoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexo$tbl_medicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_responsavel<T extends tbl_sexo$tbl_responsavelArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexo$tbl_responsavelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_sexo model
   */
  interface tbl_sexoFieldRefs {
    readonly id_sexo: FieldRef<"tbl_sexo", 'Int'>
    readonly sexo: FieldRef<"tbl_sexo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_sexo findUnique
   */
  export type tbl_sexoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where: tbl_sexoWhereUniqueInput
  }

  /**
   * tbl_sexo findUniqueOrThrow
   */
  export type tbl_sexoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where: tbl_sexoWhereUniqueInput
  }

  /**
   * tbl_sexo findFirst
   */
  export type tbl_sexoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_sexos.
     */
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }

  /**
   * tbl_sexo findFirstOrThrow
   */
  export type tbl_sexoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_sexos.
     */
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }

  /**
   * tbl_sexo findMany
   */
  export type tbl_sexoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexos to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }

  /**
   * tbl_sexo create
   */
  export type tbl_sexoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_sexo.
     */
    data: XOR<tbl_sexoCreateInput, tbl_sexoUncheckedCreateInput>
  }

  /**
   * tbl_sexo createMany
   */
  export type tbl_sexoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_sexos.
     */
    data: tbl_sexoCreateManyInput | tbl_sexoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_sexo update
   */
  export type tbl_sexoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_sexo.
     */
    data: XOR<tbl_sexoUpdateInput, tbl_sexoUncheckedUpdateInput>
    /**
     * Choose, which tbl_sexo to update.
     */
    where: tbl_sexoWhereUniqueInput
  }

  /**
   * tbl_sexo updateMany
   */
  export type tbl_sexoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_sexos.
     */
    data: XOR<tbl_sexoUpdateManyMutationInput, tbl_sexoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_sexos to update
     */
    where?: tbl_sexoWhereInput
    /**
     * Limit how many tbl_sexos to update.
     */
    limit?: number
  }

  /**
   * tbl_sexo upsert
   */
  export type tbl_sexoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_sexo to update in case it exists.
     */
    where: tbl_sexoWhereUniqueInput
    /**
     * In case the tbl_sexo found by the `where` argument doesn't exist, create a new tbl_sexo with this data.
     */
    create: XOR<tbl_sexoCreateInput, tbl_sexoUncheckedCreateInput>
    /**
     * In case the tbl_sexo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_sexoUpdateInput, tbl_sexoUncheckedUpdateInput>
  }

  /**
   * tbl_sexo delete
   */
  export type tbl_sexoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter which tbl_sexo to delete.
     */
    where: tbl_sexoWhereUniqueInput
  }

  /**
   * tbl_sexo deleteMany
   */
  export type tbl_sexoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_sexos to delete
     */
    where?: tbl_sexoWhereInput
    /**
     * Limit how many tbl_sexos to delete.
     */
    limit?: number
  }

  /**
   * tbl_sexo.tbl_bebe
   */
  export type tbl_sexo$tbl_bebeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_bebe
     */
    select?: tbl_bebeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_bebe
     */
    omit?: tbl_bebeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_bebeInclude<ExtArgs> | null
    where?: tbl_bebeWhereInput
    orderBy?: tbl_bebeOrderByWithRelationInput | tbl_bebeOrderByWithRelationInput[]
    cursor?: tbl_bebeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_bebeScalarFieldEnum | Tbl_bebeScalarFieldEnum[]
  }

  /**
   * tbl_sexo.tbl_medico
   */
  export type tbl_sexo$tbl_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    where?: tbl_medicoWhereInput
    orderBy?: tbl_medicoOrderByWithRelationInput | tbl_medicoOrderByWithRelationInput[]
    cursor?: tbl_medicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_medicoScalarFieldEnum | Tbl_medicoScalarFieldEnum[]
  }

  /**
   * tbl_sexo.tbl_responsavel
   */
  export type tbl_sexo$tbl_responsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    where?: tbl_responsavelWhereInput
    orderBy?: tbl_responsavelOrderByWithRelationInput | tbl_responsavelOrderByWithRelationInput[]
    cursor?: tbl_responsavelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_responsavelScalarFieldEnum | Tbl_responsavelScalarFieldEnum[]
  }

  /**
   * tbl_sexo without action
   */
  export type tbl_sexoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_sexo
     */
    omit?: tbl_sexoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_status_messager
   */

  export type AggregateTbl_status_messager = {
    _count: Tbl_status_messagerCountAggregateOutputType | null
    _avg: Tbl_status_messagerAvgAggregateOutputType | null
    _sum: Tbl_status_messagerSumAggregateOutputType | null
    _min: Tbl_status_messagerMinAggregateOutputType | null
    _max: Tbl_status_messagerMaxAggregateOutputType | null
  }

  export type Tbl_status_messagerAvgAggregateOutputType = {
    id_status: number | null
  }

  export type Tbl_status_messagerSumAggregateOutputType = {
    id_status: number | null
  }

  export type Tbl_status_messagerMinAggregateOutputType = {
    id_status: number | null
    status_messagem: string | null
  }

  export type Tbl_status_messagerMaxAggregateOutputType = {
    id_status: number | null
    status_messagem: string | null
  }

  export type Tbl_status_messagerCountAggregateOutputType = {
    id_status: number
    status_messagem: number
    _all: number
  }


  export type Tbl_status_messagerAvgAggregateInputType = {
    id_status?: true
  }

  export type Tbl_status_messagerSumAggregateInputType = {
    id_status?: true
  }

  export type Tbl_status_messagerMinAggregateInputType = {
    id_status?: true
    status_messagem?: true
  }

  export type Tbl_status_messagerMaxAggregateInputType = {
    id_status?: true
    status_messagem?: true
  }

  export type Tbl_status_messagerCountAggregateInputType = {
    id_status?: true
    status_messagem?: true
    _all?: true
  }

  export type Tbl_status_messagerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_status_messager to aggregate.
     */
    where?: tbl_status_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_status_messagers to fetch.
     */
    orderBy?: tbl_status_messagerOrderByWithRelationInput | tbl_status_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_status_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_status_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_status_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_status_messagers
    **/
    _count?: true | Tbl_status_messagerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_status_messagerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_status_messagerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_status_messagerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_status_messagerMaxAggregateInputType
  }

  export type GetTbl_status_messagerAggregateType<T extends Tbl_status_messagerAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_status_messager]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_status_messager[P]>
      : GetScalarType<T[P], AggregateTbl_status_messager[P]>
  }




  export type tbl_status_messagerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_status_messagerWhereInput
    orderBy?: tbl_status_messagerOrderByWithAggregationInput | tbl_status_messagerOrderByWithAggregationInput[]
    by: Tbl_status_messagerScalarFieldEnum[] | Tbl_status_messagerScalarFieldEnum
    having?: tbl_status_messagerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_status_messagerCountAggregateInputType | true
    _avg?: Tbl_status_messagerAvgAggregateInputType
    _sum?: Tbl_status_messagerSumAggregateInputType
    _min?: Tbl_status_messagerMinAggregateInputType
    _max?: Tbl_status_messagerMaxAggregateInputType
  }

  export type Tbl_status_messagerGroupByOutputType = {
    id_status: number
    status_messagem: string | null
    _count: Tbl_status_messagerCountAggregateOutputType | null
    _avg: Tbl_status_messagerAvgAggregateOutputType | null
    _sum: Tbl_status_messagerSumAggregateOutputType | null
    _min: Tbl_status_messagerMinAggregateOutputType | null
    _max: Tbl_status_messagerMaxAggregateOutputType | null
  }

  type GetTbl_status_messagerGroupByPayload<T extends tbl_status_messagerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_status_messagerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_status_messagerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_status_messagerGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_status_messagerGroupByOutputType[P]>
        }
      >
    >


  export type tbl_status_messagerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_status?: boolean
    status_messagem?: boolean
    tbl_messager?: boolean | tbl_status_messager$tbl_messagerArgs<ExtArgs>
    _count?: boolean | Tbl_status_messagerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_status_messager"]>



  export type tbl_status_messagerSelectScalar = {
    id_status?: boolean
    status_messagem?: boolean
  }

  export type tbl_status_messagerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_status" | "status_messagem", ExtArgs["result"]["tbl_status_messager"]>
  export type tbl_status_messagerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_messager?: boolean | tbl_status_messager$tbl_messagerArgs<ExtArgs>
    _count?: boolean | Tbl_status_messagerCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_status_messagerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_status_messager"
    objects: {
      tbl_messager: Prisma.$tbl_messagerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_status: number
      status_messagem: string | null
    }, ExtArgs["result"]["tbl_status_messager"]>
    composites: {}
  }

  type tbl_status_messagerGetPayload<S extends boolean | null | undefined | tbl_status_messagerDefaultArgs> = $Result.GetResult<Prisma.$tbl_status_messagerPayload, S>

  type tbl_status_messagerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_status_messagerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_status_messagerCountAggregateInputType | true
    }

  export interface tbl_status_messagerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_status_messager'], meta: { name: 'tbl_status_messager' } }
    /**
     * Find zero or one Tbl_status_messager that matches the filter.
     * @param {tbl_status_messagerFindUniqueArgs} args - Arguments to find a Tbl_status_messager
     * @example
     * // Get one Tbl_status_messager
     * const tbl_status_messager = await prisma.tbl_status_messager.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_status_messagerFindUniqueArgs>(args: SelectSubset<T, tbl_status_messagerFindUniqueArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_status_messager that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_status_messagerFindUniqueOrThrowArgs} args - Arguments to find a Tbl_status_messager
     * @example
     * // Get one Tbl_status_messager
     * const tbl_status_messager = await prisma.tbl_status_messager.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_status_messagerFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_status_messagerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_status_messager that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_status_messagerFindFirstArgs} args - Arguments to find a Tbl_status_messager
     * @example
     * // Get one Tbl_status_messager
     * const tbl_status_messager = await prisma.tbl_status_messager.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_status_messagerFindFirstArgs>(args?: SelectSubset<T, tbl_status_messagerFindFirstArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_status_messager that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_status_messagerFindFirstOrThrowArgs} args - Arguments to find a Tbl_status_messager
     * @example
     * // Get one Tbl_status_messager
     * const tbl_status_messager = await prisma.tbl_status_messager.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_status_messagerFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_status_messagerFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_status_messagers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_status_messagerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_status_messagers
     * const tbl_status_messagers = await prisma.tbl_status_messager.findMany()
     * 
     * // Get first 10 Tbl_status_messagers
     * const tbl_status_messagers = await prisma.tbl_status_messager.findMany({ take: 10 })
     * 
     * // Only select the `id_status`
     * const tbl_status_messagerWithId_statusOnly = await prisma.tbl_status_messager.findMany({ select: { id_status: true } })
     * 
     */
    findMany<T extends tbl_status_messagerFindManyArgs>(args?: SelectSubset<T, tbl_status_messagerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_status_messager.
     * @param {tbl_status_messagerCreateArgs} args - Arguments to create a Tbl_status_messager.
     * @example
     * // Create one Tbl_status_messager
     * const Tbl_status_messager = await prisma.tbl_status_messager.create({
     *   data: {
     *     // ... data to create a Tbl_status_messager
     *   }
     * })
     * 
     */
    create<T extends tbl_status_messagerCreateArgs>(args: SelectSubset<T, tbl_status_messagerCreateArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_status_messagers.
     * @param {tbl_status_messagerCreateManyArgs} args - Arguments to create many Tbl_status_messagers.
     * @example
     * // Create many Tbl_status_messagers
     * const tbl_status_messager = await prisma.tbl_status_messager.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_status_messagerCreateManyArgs>(args?: SelectSubset<T, tbl_status_messagerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_status_messager.
     * @param {tbl_status_messagerDeleteArgs} args - Arguments to delete one Tbl_status_messager.
     * @example
     * // Delete one Tbl_status_messager
     * const Tbl_status_messager = await prisma.tbl_status_messager.delete({
     *   where: {
     *     // ... filter to delete one Tbl_status_messager
     *   }
     * })
     * 
     */
    delete<T extends tbl_status_messagerDeleteArgs>(args: SelectSubset<T, tbl_status_messagerDeleteArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_status_messager.
     * @param {tbl_status_messagerUpdateArgs} args - Arguments to update one Tbl_status_messager.
     * @example
     * // Update one Tbl_status_messager
     * const tbl_status_messager = await prisma.tbl_status_messager.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_status_messagerUpdateArgs>(args: SelectSubset<T, tbl_status_messagerUpdateArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_status_messagers.
     * @param {tbl_status_messagerDeleteManyArgs} args - Arguments to filter Tbl_status_messagers to delete.
     * @example
     * // Delete a few Tbl_status_messagers
     * const { count } = await prisma.tbl_status_messager.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_status_messagerDeleteManyArgs>(args?: SelectSubset<T, tbl_status_messagerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_status_messagers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_status_messagerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_status_messagers
     * const tbl_status_messager = await prisma.tbl_status_messager.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_status_messagerUpdateManyArgs>(args: SelectSubset<T, tbl_status_messagerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_status_messager.
     * @param {tbl_status_messagerUpsertArgs} args - Arguments to update or create a Tbl_status_messager.
     * @example
     * // Update or create a Tbl_status_messager
     * const tbl_status_messager = await prisma.tbl_status_messager.upsert({
     *   create: {
     *     // ... data to create a Tbl_status_messager
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_status_messager we want to update
     *   }
     * })
     */
    upsert<T extends tbl_status_messagerUpsertArgs>(args: SelectSubset<T, tbl_status_messagerUpsertArgs<ExtArgs>>): Prisma__tbl_status_messagerClient<$Result.GetResult<Prisma.$tbl_status_messagerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_status_messagers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_status_messagerCountArgs} args - Arguments to filter Tbl_status_messagers to count.
     * @example
     * // Count the number of Tbl_status_messagers
     * const count = await prisma.tbl_status_messager.count({
     *   where: {
     *     // ... the filter for the Tbl_status_messagers we want to count
     *   }
     * })
    **/
    count<T extends tbl_status_messagerCountArgs>(
      args?: Subset<T, tbl_status_messagerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_status_messagerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_status_messager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_status_messagerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_status_messagerAggregateArgs>(args: Subset<T, Tbl_status_messagerAggregateArgs>): Prisma.PrismaPromise<GetTbl_status_messagerAggregateType<T>>

    /**
     * Group by Tbl_status_messager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_status_messagerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_status_messagerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_status_messagerGroupByArgs['orderBy'] }
        : { orderBy?: tbl_status_messagerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_status_messagerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_status_messagerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_status_messager model
   */
  readonly fields: tbl_status_messagerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_status_messager.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_status_messagerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_messager<T extends tbl_status_messager$tbl_messagerArgs<ExtArgs> = {}>(args?: Subset<T, tbl_status_messager$tbl_messagerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_status_messager model
   */
  interface tbl_status_messagerFieldRefs {
    readonly id_status: FieldRef<"tbl_status_messager", 'Int'>
    readonly status_messagem: FieldRef<"tbl_status_messager", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_status_messager findUnique
   */
  export type tbl_status_messagerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_status_messager to fetch.
     */
    where: tbl_status_messagerWhereUniqueInput
  }

  /**
   * tbl_status_messager findUniqueOrThrow
   */
  export type tbl_status_messagerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_status_messager to fetch.
     */
    where: tbl_status_messagerWhereUniqueInput
  }

  /**
   * tbl_status_messager findFirst
   */
  export type tbl_status_messagerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_status_messager to fetch.
     */
    where?: tbl_status_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_status_messagers to fetch.
     */
    orderBy?: tbl_status_messagerOrderByWithRelationInput | tbl_status_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_status_messagers.
     */
    cursor?: tbl_status_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_status_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_status_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_status_messagers.
     */
    distinct?: Tbl_status_messagerScalarFieldEnum | Tbl_status_messagerScalarFieldEnum[]
  }

  /**
   * tbl_status_messager findFirstOrThrow
   */
  export type tbl_status_messagerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_status_messager to fetch.
     */
    where?: tbl_status_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_status_messagers to fetch.
     */
    orderBy?: tbl_status_messagerOrderByWithRelationInput | tbl_status_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_status_messagers.
     */
    cursor?: tbl_status_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_status_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_status_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_status_messagers.
     */
    distinct?: Tbl_status_messagerScalarFieldEnum | Tbl_status_messagerScalarFieldEnum[]
  }

  /**
   * tbl_status_messager findMany
   */
  export type tbl_status_messagerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_status_messagers to fetch.
     */
    where?: tbl_status_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_status_messagers to fetch.
     */
    orderBy?: tbl_status_messagerOrderByWithRelationInput | tbl_status_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_status_messagers.
     */
    cursor?: tbl_status_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_status_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_status_messagers.
     */
    skip?: number
    distinct?: Tbl_status_messagerScalarFieldEnum | Tbl_status_messagerScalarFieldEnum[]
  }

  /**
   * tbl_status_messager create
   */
  export type tbl_status_messagerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_status_messager.
     */
    data?: XOR<tbl_status_messagerCreateInput, tbl_status_messagerUncheckedCreateInput>
  }

  /**
   * tbl_status_messager createMany
   */
  export type tbl_status_messagerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_status_messagers.
     */
    data: tbl_status_messagerCreateManyInput | tbl_status_messagerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_status_messager update
   */
  export type tbl_status_messagerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_status_messager.
     */
    data: XOR<tbl_status_messagerUpdateInput, tbl_status_messagerUncheckedUpdateInput>
    /**
     * Choose, which tbl_status_messager to update.
     */
    where: tbl_status_messagerWhereUniqueInput
  }

  /**
   * tbl_status_messager updateMany
   */
  export type tbl_status_messagerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_status_messagers.
     */
    data: XOR<tbl_status_messagerUpdateManyMutationInput, tbl_status_messagerUncheckedUpdateManyInput>
    /**
     * Filter which tbl_status_messagers to update
     */
    where?: tbl_status_messagerWhereInput
    /**
     * Limit how many tbl_status_messagers to update.
     */
    limit?: number
  }

  /**
   * tbl_status_messager upsert
   */
  export type tbl_status_messagerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_status_messager to update in case it exists.
     */
    where: tbl_status_messagerWhereUniqueInput
    /**
     * In case the tbl_status_messager found by the `where` argument doesn't exist, create a new tbl_status_messager with this data.
     */
    create: XOR<tbl_status_messagerCreateInput, tbl_status_messagerUncheckedCreateInput>
    /**
     * In case the tbl_status_messager was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_status_messagerUpdateInput, tbl_status_messagerUncheckedUpdateInput>
  }

  /**
   * tbl_status_messager delete
   */
  export type tbl_status_messagerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
    /**
     * Filter which tbl_status_messager to delete.
     */
    where: tbl_status_messagerWhereUniqueInput
  }

  /**
   * tbl_status_messager deleteMany
   */
  export type tbl_status_messagerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_status_messagers to delete
     */
    where?: tbl_status_messagerWhereInput
    /**
     * Limit how many tbl_status_messagers to delete.
     */
    limit?: number
  }

  /**
   * tbl_status_messager.tbl_messager
   */
  export type tbl_status_messager$tbl_messagerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    where?: tbl_messagerWhereInput
    orderBy?: tbl_messagerOrderByWithRelationInput | tbl_messagerOrderByWithRelationInput[]
    cursor?: tbl_messagerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_messagerScalarFieldEnum | Tbl_messagerScalarFieldEnum[]
  }

  /**
   * tbl_status_messager without action
   */
  export type tbl_status_messagerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_status_messager
     */
    select?: tbl_status_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_status_messager
     */
    omit?: tbl_status_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_status_messagerInclude<ExtArgs> | null
  }


  /**
   * Model tbl_type_messager
   */

  export type AggregateTbl_type_messager = {
    _count: Tbl_type_messagerCountAggregateOutputType | null
    _avg: Tbl_type_messagerAvgAggregateOutputType | null
    _sum: Tbl_type_messagerSumAggregateOutputType | null
    _min: Tbl_type_messagerMinAggregateOutputType | null
    _max: Tbl_type_messagerMaxAggregateOutputType | null
  }

  export type Tbl_type_messagerAvgAggregateOutputType = {
    id_tipo_mensagem: number | null
  }

  export type Tbl_type_messagerSumAggregateOutputType = {
    id_tipo_mensagem: number | null
  }

  export type Tbl_type_messagerMinAggregateOutputType = {
    id_tipo_mensagem: number | null
    tipo_mensagem: string | null
  }

  export type Tbl_type_messagerMaxAggregateOutputType = {
    id_tipo_mensagem: number | null
    tipo_mensagem: string | null
  }

  export type Tbl_type_messagerCountAggregateOutputType = {
    id_tipo_mensagem: number
    tipo_mensagem: number
    _all: number
  }


  export type Tbl_type_messagerAvgAggregateInputType = {
    id_tipo_mensagem?: true
  }

  export type Tbl_type_messagerSumAggregateInputType = {
    id_tipo_mensagem?: true
  }

  export type Tbl_type_messagerMinAggregateInputType = {
    id_tipo_mensagem?: true
    tipo_mensagem?: true
  }

  export type Tbl_type_messagerMaxAggregateInputType = {
    id_tipo_mensagem?: true
    tipo_mensagem?: true
  }

  export type Tbl_type_messagerCountAggregateInputType = {
    id_tipo_mensagem?: true
    tipo_mensagem?: true
    _all?: true
  }

  export type Tbl_type_messagerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_type_messager to aggregate.
     */
    where?: tbl_type_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_type_messagers to fetch.
     */
    orderBy?: tbl_type_messagerOrderByWithRelationInput | tbl_type_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_type_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_type_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_type_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_type_messagers
    **/
    _count?: true | Tbl_type_messagerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_type_messagerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_type_messagerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_type_messagerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_type_messagerMaxAggregateInputType
  }

  export type GetTbl_type_messagerAggregateType<T extends Tbl_type_messagerAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_type_messager]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_type_messager[P]>
      : GetScalarType<T[P], AggregateTbl_type_messager[P]>
  }




  export type tbl_type_messagerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_type_messagerWhereInput
    orderBy?: tbl_type_messagerOrderByWithAggregationInput | tbl_type_messagerOrderByWithAggregationInput[]
    by: Tbl_type_messagerScalarFieldEnum[] | Tbl_type_messagerScalarFieldEnum
    having?: tbl_type_messagerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_type_messagerCountAggregateInputType | true
    _avg?: Tbl_type_messagerAvgAggregateInputType
    _sum?: Tbl_type_messagerSumAggregateInputType
    _min?: Tbl_type_messagerMinAggregateInputType
    _max?: Tbl_type_messagerMaxAggregateInputType
  }

  export type Tbl_type_messagerGroupByOutputType = {
    id_tipo_mensagem: number
    tipo_mensagem: string | null
    _count: Tbl_type_messagerCountAggregateOutputType | null
    _avg: Tbl_type_messagerAvgAggregateOutputType | null
    _sum: Tbl_type_messagerSumAggregateOutputType | null
    _min: Tbl_type_messagerMinAggregateOutputType | null
    _max: Tbl_type_messagerMaxAggregateOutputType | null
  }

  type GetTbl_type_messagerGroupByPayload<T extends tbl_type_messagerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_type_messagerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_type_messagerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_type_messagerGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_type_messagerGroupByOutputType[P]>
        }
      >
    >


  export type tbl_type_messagerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_tipo_mensagem?: boolean
    tipo_mensagem?: boolean
    tbl_messager?: boolean | tbl_type_messager$tbl_messagerArgs<ExtArgs>
    _count?: boolean | Tbl_type_messagerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_type_messager"]>



  export type tbl_type_messagerSelectScalar = {
    id_tipo_mensagem?: boolean
    tipo_mensagem?: boolean
  }

  export type tbl_type_messagerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_tipo_mensagem" | "tipo_mensagem", ExtArgs["result"]["tbl_type_messager"]>
  export type tbl_type_messagerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_messager?: boolean | tbl_type_messager$tbl_messagerArgs<ExtArgs>
    _count?: boolean | Tbl_type_messagerCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_type_messagerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_type_messager"
    objects: {
      tbl_messager: Prisma.$tbl_messagerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_tipo_mensagem: number
      tipo_mensagem: string | null
    }, ExtArgs["result"]["tbl_type_messager"]>
    composites: {}
  }

  type tbl_type_messagerGetPayload<S extends boolean | null | undefined | tbl_type_messagerDefaultArgs> = $Result.GetResult<Prisma.$tbl_type_messagerPayload, S>

  type tbl_type_messagerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_type_messagerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_type_messagerCountAggregateInputType | true
    }

  export interface tbl_type_messagerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_type_messager'], meta: { name: 'tbl_type_messager' } }
    /**
     * Find zero or one Tbl_type_messager that matches the filter.
     * @param {tbl_type_messagerFindUniqueArgs} args - Arguments to find a Tbl_type_messager
     * @example
     * // Get one Tbl_type_messager
     * const tbl_type_messager = await prisma.tbl_type_messager.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_type_messagerFindUniqueArgs>(args: SelectSubset<T, tbl_type_messagerFindUniqueArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_type_messager that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_type_messagerFindUniqueOrThrowArgs} args - Arguments to find a Tbl_type_messager
     * @example
     * // Get one Tbl_type_messager
     * const tbl_type_messager = await prisma.tbl_type_messager.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_type_messagerFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_type_messagerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_type_messager that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_messagerFindFirstArgs} args - Arguments to find a Tbl_type_messager
     * @example
     * // Get one Tbl_type_messager
     * const tbl_type_messager = await prisma.tbl_type_messager.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_type_messagerFindFirstArgs>(args?: SelectSubset<T, tbl_type_messagerFindFirstArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_type_messager that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_messagerFindFirstOrThrowArgs} args - Arguments to find a Tbl_type_messager
     * @example
     * // Get one Tbl_type_messager
     * const tbl_type_messager = await prisma.tbl_type_messager.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_type_messagerFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_type_messagerFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_type_messagers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_messagerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_type_messagers
     * const tbl_type_messagers = await prisma.tbl_type_messager.findMany()
     * 
     * // Get first 10 Tbl_type_messagers
     * const tbl_type_messagers = await prisma.tbl_type_messager.findMany({ take: 10 })
     * 
     * // Only select the `id_tipo_mensagem`
     * const tbl_type_messagerWithId_tipo_mensagemOnly = await prisma.tbl_type_messager.findMany({ select: { id_tipo_mensagem: true } })
     * 
     */
    findMany<T extends tbl_type_messagerFindManyArgs>(args?: SelectSubset<T, tbl_type_messagerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_type_messager.
     * @param {tbl_type_messagerCreateArgs} args - Arguments to create a Tbl_type_messager.
     * @example
     * // Create one Tbl_type_messager
     * const Tbl_type_messager = await prisma.tbl_type_messager.create({
     *   data: {
     *     // ... data to create a Tbl_type_messager
     *   }
     * })
     * 
     */
    create<T extends tbl_type_messagerCreateArgs>(args: SelectSubset<T, tbl_type_messagerCreateArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_type_messagers.
     * @param {tbl_type_messagerCreateManyArgs} args - Arguments to create many Tbl_type_messagers.
     * @example
     * // Create many Tbl_type_messagers
     * const tbl_type_messager = await prisma.tbl_type_messager.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_type_messagerCreateManyArgs>(args?: SelectSubset<T, tbl_type_messagerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_type_messager.
     * @param {tbl_type_messagerDeleteArgs} args - Arguments to delete one Tbl_type_messager.
     * @example
     * // Delete one Tbl_type_messager
     * const Tbl_type_messager = await prisma.tbl_type_messager.delete({
     *   where: {
     *     // ... filter to delete one Tbl_type_messager
     *   }
     * })
     * 
     */
    delete<T extends tbl_type_messagerDeleteArgs>(args: SelectSubset<T, tbl_type_messagerDeleteArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_type_messager.
     * @param {tbl_type_messagerUpdateArgs} args - Arguments to update one Tbl_type_messager.
     * @example
     * // Update one Tbl_type_messager
     * const tbl_type_messager = await prisma.tbl_type_messager.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_type_messagerUpdateArgs>(args: SelectSubset<T, tbl_type_messagerUpdateArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_type_messagers.
     * @param {tbl_type_messagerDeleteManyArgs} args - Arguments to filter Tbl_type_messagers to delete.
     * @example
     * // Delete a few Tbl_type_messagers
     * const { count } = await prisma.tbl_type_messager.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_type_messagerDeleteManyArgs>(args?: SelectSubset<T, tbl_type_messagerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_type_messagers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_messagerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_type_messagers
     * const tbl_type_messager = await prisma.tbl_type_messager.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_type_messagerUpdateManyArgs>(args: SelectSubset<T, tbl_type_messagerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_type_messager.
     * @param {tbl_type_messagerUpsertArgs} args - Arguments to update or create a Tbl_type_messager.
     * @example
     * // Update or create a Tbl_type_messager
     * const tbl_type_messager = await prisma.tbl_type_messager.upsert({
     *   create: {
     *     // ... data to create a Tbl_type_messager
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_type_messager we want to update
     *   }
     * })
     */
    upsert<T extends tbl_type_messagerUpsertArgs>(args: SelectSubset<T, tbl_type_messagerUpsertArgs<ExtArgs>>): Prisma__tbl_type_messagerClient<$Result.GetResult<Prisma.$tbl_type_messagerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_type_messagers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_messagerCountArgs} args - Arguments to filter Tbl_type_messagers to count.
     * @example
     * // Count the number of Tbl_type_messagers
     * const count = await prisma.tbl_type_messager.count({
     *   where: {
     *     // ... the filter for the Tbl_type_messagers we want to count
     *   }
     * })
    **/
    count<T extends tbl_type_messagerCountArgs>(
      args?: Subset<T, tbl_type_messagerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_type_messagerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_type_messager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_type_messagerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_type_messagerAggregateArgs>(args: Subset<T, Tbl_type_messagerAggregateArgs>): Prisma.PrismaPromise<GetTbl_type_messagerAggregateType<T>>

    /**
     * Group by Tbl_type_messager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_messagerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_type_messagerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_type_messagerGroupByArgs['orderBy'] }
        : { orderBy?: tbl_type_messagerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_type_messagerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_type_messagerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_type_messager model
   */
  readonly fields: tbl_type_messagerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_type_messager.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_type_messagerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_messager<T extends tbl_type_messager$tbl_messagerArgs<ExtArgs> = {}>(args?: Subset<T, tbl_type_messager$tbl_messagerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_messagerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_type_messager model
   */
  interface tbl_type_messagerFieldRefs {
    readonly id_tipo_mensagem: FieldRef<"tbl_type_messager", 'Int'>
    readonly tipo_mensagem: FieldRef<"tbl_type_messager", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_type_messager findUnique
   */
  export type tbl_type_messagerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_messager to fetch.
     */
    where: tbl_type_messagerWhereUniqueInput
  }

  /**
   * tbl_type_messager findUniqueOrThrow
   */
  export type tbl_type_messagerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_messager to fetch.
     */
    where: tbl_type_messagerWhereUniqueInput
  }

  /**
   * tbl_type_messager findFirst
   */
  export type tbl_type_messagerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_messager to fetch.
     */
    where?: tbl_type_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_type_messagers to fetch.
     */
    orderBy?: tbl_type_messagerOrderByWithRelationInput | tbl_type_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_type_messagers.
     */
    cursor?: tbl_type_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_type_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_type_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_type_messagers.
     */
    distinct?: Tbl_type_messagerScalarFieldEnum | Tbl_type_messagerScalarFieldEnum[]
  }

  /**
   * tbl_type_messager findFirstOrThrow
   */
  export type tbl_type_messagerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_messager to fetch.
     */
    where?: tbl_type_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_type_messagers to fetch.
     */
    orderBy?: tbl_type_messagerOrderByWithRelationInput | tbl_type_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_type_messagers.
     */
    cursor?: tbl_type_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_type_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_type_messagers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_type_messagers.
     */
    distinct?: Tbl_type_messagerScalarFieldEnum | Tbl_type_messagerScalarFieldEnum[]
  }

  /**
   * tbl_type_messager findMany
   */
  export type tbl_type_messagerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_messagers to fetch.
     */
    where?: tbl_type_messagerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_type_messagers to fetch.
     */
    orderBy?: tbl_type_messagerOrderByWithRelationInput | tbl_type_messagerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_type_messagers.
     */
    cursor?: tbl_type_messagerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_type_messagers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_type_messagers.
     */
    skip?: number
    distinct?: Tbl_type_messagerScalarFieldEnum | Tbl_type_messagerScalarFieldEnum[]
  }

  /**
   * tbl_type_messager create
   */
  export type tbl_type_messagerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_type_messager.
     */
    data?: XOR<tbl_type_messagerCreateInput, tbl_type_messagerUncheckedCreateInput>
  }

  /**
   * tbl_type_messager createMany
   */
  export type tbl_type_messagerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_type_messagers.
     */
    data: tbl_type_messagerCreateManyInput | tbl_type_messagerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_type_messager update
   */
  export type tbl_type_messagerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_type_messager.
     */
    data: XOR<tbl_type_messagerUpdateInput, tbl_type_messagerUncheckedUpdateInput>
    /**
     * Choose, which tbl_type_messager to update.
     */
    where: tbl_type_messagerWhereUniqueInput
  }

  /**
   * tbl_type_messager updateMany
   */
  export type tbl_type_messagerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_type_messagers.
     */
    data: XOR<tbl_type_messagerUpdateManyMutationInput, tbl_type_messagerUncheckedUpdateManyInput>
    /**
     * Filter which tbl_type_messagers to update
     */
    where?: tbl_type_messagerWhereInput
    /**
     * Limit how many tbl_type_messagers to update.
     */
    limit?: number
  }

  /**
   * tbl_type_messager upsert
   */
  export type tbl_type_messagerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_type_messager to update in case it exists.
     */
    where: tbl_type_messagerWhereUniqueInput
    /**
     * In case the tbl_type_messager found by the `where` argument doesn't exist, create a new tbl_type_messager with this data.
     */
    create: XOR<tbl_type_messagerCreateInput, tbl_type_messagerUncheckedCreateInput>
    /**
     * In case the tbl_type_messager was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_type_messagerUpdateInput, tbl_type_messagerUncheckedUpdateInput>
  }

  /**
   * tbl_type_messager delete
   */
  export type tbl_type_messagerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
    /**
     * Filter which tbl_type_messager to delete.
     */
    where: tbl_type_messagerWhereUniqueInput
  }

  /**
   * tbl_type_messager deleteMany
   */
  export type tbl_type_messagerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_type_messagers to delete
     */
    where?: tbl_type_messagerWhereInput
    /**
     * Limit how many tbl_type_messagers to delete.
     */
    limit?: number
  }

  /**
   * tbl_type_messager.tbl_messager
   */
  export type tbl_type_messager$tbl_messagerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_messager
     */
    select?: tbl_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_messager
     */
    omit?: tbl_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_messagerInclude<ExtArgs> | null
    where?: tbl_messagerWhereInput
    orderBy?: tbl_messagerOrderByWithRelationInput | tbl_messagerOrderByWithRelationInput[]
    cursor?: tbl_messagerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_messagerScalarFieldEnum | Tbl_messagerScalarFieldEnum[]
  }

  /**
   * tbl_type_messager without action
   */
  export type tbl_type_messagerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_messager
     */
    select?: tbl_type_messagerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_messager
     */
    omit?: tbl_type_messagerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_messagerInclude<ExtArgs> | null
  }


  /**
   * Model tbl_type_user
   */

  export type AggregateTbl_type_user = {
    _count: Tbl_type_userCountAggregateOutputType | null
    _avg: Tbl_type_userAvgAggregateOutputType | null
    _sum: Tbl_type_userSumAggregateOutputType | null
    _min: Tbl_type_userMinAggregateOutputType | null
    _max: Tbl_type_userMaxAggregateOutputType | null
  }

  export type Tbl_type_userAvgAggregateOutputType = {
    id_tipo: number | null
  }

  export type Tbl_type_userSumAggregateOutputType = {
    id_tipo: number | null
  }

  export type Tbl_type_userMinAggregateOutputType = {
    id_tipo: number | null
    tipo: string | null
  }

  export type Tbl_type_userMaxAggregateOutputType = {
    id_tipo: number | null
    tipo: string | null
  }

  export type Tbl_type_userCountAggregateOutputType = {
    id_tipo: number
    tipo: number
    _all: number
  }


  export type Tbl_type_userAvgAggregateInputType = {
    id_tipo?: true
  }

  export type Tbl_type_userSumAggregateInputType = {
    id_tipo?: true
  }

  export type Tbl_type_userMinAggregateInputType = {
    id_tipo?: true
    tipo?: true
  }

  export type Tbl_type_userMaxAggregateInputType = {
    id_tipo?: true
    tipo?: true
  }

  export type Tbl_type_userCountAggregateInputType = {
    id_tipo?: true
    tipo?: true
    _all?: true
  }

  export type Tbl_type_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_type_user to aggregate.
     */
    where?: tbl_type_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_type_users to fetch.
     */
    orderBy?: tbl_type_userOrderByWithRelationInput | tbl_type_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_type_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_type_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_type_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_type_users
    **/
    _count?: true | Tbl_type_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_type_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_type_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_type_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_type_userMaxAggregateInputType
  }

  export type GetTbl_type_userAggregateType<T extends Tbl_type_userAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_type_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_type_user[P]>
      : GetScalarType<T[P], AggregateTbl_type_user[P]>
  }




  export type tbl_type_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_type_userWhereInput
    orderBy?: tbl_type_userOrderByWithAggregationInput | tbl_type_userOrderByWithAggregationInput[]
    by: Tbl_type_userScalarFieldEnum[] | Tbl_type_userScalarFieldEnum
    having?: tbl_type_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_type_userCountAggregateInputType | true
    _avg?: Tbl_type_userAvgAggregateInputType
    _sum?: Tbl_type_userSumAggregateInputType
    _min?: Tbl_type_userMinAggregateInputType
    _max?: Tbl_type_userMaxAggregateInputType
  }

  export type Tbl_type_userGroupByOutputType = {
    id_tipo: number
    tipo: string | null
    _count: Tbl_type_userCountAggregateOutputType | null
    _avg: Tbl_type_userAvgAggregateOutputType | null
    _sum: Tbl_type_userSumAggregateOutputType | null
    _min: Tbl_type_userMinAggregateOutputType | null
    _max: Tbl_type_userMaxAggregateOutputType | null
  }

  type GetTbl_type_userGroupByPayload<T extends tbl_type_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_type_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_type_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_type_userGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_type_userGroupByOutputType[P]>
        }
      >
    >


  export type tbl_type_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_tipo?: boolean
    tipo?: boolean
    tbl_user?: boolean | tbl_type_user$tbl_userArgs<ExtArgs>
    _count?: boolean | Tbl_type_userCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_type_user"]>



  export type tbl_type_userSelectScalar = {
    id_tipo?: boolean
    tipo?: boolean
  }

  export type tbl_type_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_tipo" | "tipo", ExtArgs["result"]["tbl_type_user"]>
  export type tbl_type_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_user?: boolean | tbl_type_user$tbl_userArgs<ExtArgs>
    _count?: boolean | Tbl_type_userCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_type_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_type_user"
    objects: {
      tbl_user: Prisma.$tbl_userPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_tipo: number
      tipo: string | null
    }, ExtArgs["result"]["tbl_type_user"]>
    composites: {}
  }

  type tbl_type_userGetPayload<S extends boolean | null | undefined | tbl_type_userDefaultArgs> = $Result.GetResult<Prisma.$tbl_type_userPayload, S>

  type tbl_type_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_type_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_type_userCountAggregateInputType | true
    }

  export interface tbl_type_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_type_user'], meta: { name: 'tbl_type_user' } }
    /**
     * Find zero or one Tbl_type_user that matches the filter.
     * @param {tbl_type_userFindUniqueArgs} args - Arguments to find a Tbl_type_user
     * @example
     * // Get one Tbl_type_user
     * const tbl_type_user = await prisma.tbl_type_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_type_userFindUniqueArgs>(args: SelectSubset<T, tbl_type_userFindUniqueArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_type_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_type_userFindUniqueOrThrowArgs} args - Arguments to find a Tbl_type_user
     * @example
     * // Get one Tbl_type_user
     * const tbl_type_user = await prisma.tbl_type_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_type_userFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_type_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_type_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_userFindFirstArgs} args - Arguments to find a Tbl_type_user
     * @example
     * // Get one Tbl_type_user
     * const tbl_type_user = await prisma.tbl_type_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_type_userFindFirstArgs>(args?: SelectSubset<T, tbl_type_userFindFirstArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_type_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_userFindFirstOrThrowArgs} args - Arguments to find a Tbl_type_user
     * @example
     * // Get one Tbl_type_user
     * const tbl_type_user = await prisma.tbl_type_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_type_userFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_type_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_type_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_type_users
     * const tbl_type_users = await prisma.tbl_type_user.findMany()
     * 
     * // Get first 10 Tbl_type_users
     * const tbl_type_users = await prisma.tbl_type_user.findMany({ take: 10 })
     * 
     * // Only select the `id_tipo`
     * const tbl_type_userWithId_tipoOnly = await prisma.tbl_type_user.findMany({ select: { id_tipo: true } })
     * 
     */
    findMany<T extends tbl_type_userFindManyArgs>(args?: SelectSubset<T, tbl_type_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_type_user.
     * @param {tbl_type_userCreateArgs} args - Arguments to create a Tbl_type_user.
     * @example
     * // Create one Tbl_type_user
     * const Tbl_type_user = await prisma.tbl_type_user.create({
     *   data: {
     *     // ... data to create a Tbl_type_user
     *   }
     * })
     * 
     */
    create<T extends tbl_type_userCreateArgs>(args: SelectSubset<T, tbl_type_userCreateArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_type_users.
     * @param {tbl_type_userCreateManyArgs} args - Arguments to create many Tbl_type_users.
     * @example
     * // Create many Tbl_type_users
     * const tbl_type_user = await prisma.tbl_type_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_type_userCreateManyArgs>(args?: SelectSubset<T, tbl_type_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_type_user.
     * @param {tbl_type_userDeleteArgs} args - Arguments to delete one Tbl_type_user.
     * @example
     * // Delete one Tbl_type_user
     * const Tbl_type_user = await prisma.tbl_type_user.delete({
     *   where: {
     *     // ... filter to delete one Tbl_type_user
     *   }
     * })
     * 
     */
    delete<T extends tbl_type_userDeleteArgs>(args: SelectSubset<T, tbl_type_userDeleteArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_type_user.
     * @param {tbl_type_userUpdateArgs} args - Arguments to update one Tbl_type_user.
     * @example
     * // Update one Tbl_type_user
     * const tbl_type_user = await prisma.tbl_type_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_type_userUpdateArgs>(args: SelectSubset<T, tbl_type_userUpdateArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_type_users.
     * @param {tbl_type_userDeleteManyArgs} args - Arguments to filter Tbl_type_users to delete.
     * @example
     * // Delete a few Tbl_type_users
     * const { count } = await prisma.tbl_type_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_type_userDeleteManyArgs>(args?: SelectSubset<T, tbl_type_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_type_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_type_users
     * const tbl_type_user = await prisma.tbl_type_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_type_userUpdateManyArgs>(args: SelectSubset<T, tbl_type_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_type_user.
     * @param {tbl_type_userUpsertArgs} args - Arguments to update or create a Tbl_type_user.
     * @example
     * // Update or create a Tbl_type_user
     * const tbl_type_user = await prisma.tbl_type_user.upsert({
     *   create: {
     *     // ... data to create a Tbl_type_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_type_user we want to update
     *   }
     * })
     */
    upsert<T extends tbl_type_userUpsertArgs>(args: SelectSubset<T, tbl_type_userUpsertArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_type_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_userCountArgs} args - Arguments to filter Tbl_type_users to count.
     * @example
     * // Count the number of Tbl_type_users
     * const count = await prisma.tbl_type_user.count({
     *   where: {
     *     // ... the filter for the Tbl_type_users we want to count
     *   }
     * })
    **/
    count<T extends tbl_type_userCountArgs>(
      args?: Subset<T, tbl_type_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_type_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_type_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_type_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_type_userAggregateArgs>(args: Subset<T, Tbl_type_userAggregateArgs>): Prisma.PrismaPromise<GetTbl_type_userAggregateType<T>>

    /**
     * Group by Tbl_type_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_type_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_type_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_type_userGroupByArgs['orderBy'] }
        : { orderBy?: tbl_type_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_type_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_type_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_type_user model
   */
  readonly fields: tbl_type_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_type_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_type_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_user<T extends tbl_type_user$tbl_userArgs<ExtArgs> = {}>(args?: Subset<T, tbl_type_user$tbl_userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_type_user model
   */
  interface tbl_type_userFieldRefs {
    readonly id_tipo: FieldRef<"tbl_type_user", 'Int'>
    readonly tipo: FieldRef<"tbl_type_user", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_type_user findUnique
   */
  export type tbl_type_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_user to fetch.
     */
    where: tbl_type_userWhereUniqueInput
  }

  /**
   * tbl_type_user findUniqueOrThrow
   */
  export type tbl_type_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_user to fetch.
     */
    where: tbl_type_userWhereUniqueInput
  }

  /**
   * tbl_type_user findFirst
   */
  export type tbl_type_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_user to fetch.
     */
    where?: tbl_type_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_type_users to fetch.
     */
    orderBy?: tbl_type_userOrderByWithRelationInput | tbl_type_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_type_users.
     */
    cursor?: tbl_type_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_type_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_type_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_type_users.
     */
    distinct?: Tbl_type_userScalarFieldEnum | Tbl_type_userScalarFieldEnum[]
  }

  /**
   * tbl_type_user findFirstOrThrow
   */
  export type tbl_type_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_user to fetch.
     */
    where?: tbl_type_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_type_users to fetch.
     */
    orderBy?: tbl_type_userOrderByWithRelationInput | tbl_type_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_type_users.
     */
    cursor?: tbl_type_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_type_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_type_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_type_users.
     */
    distinct?: Tbl_type_userScalarFieldEnum | Tbl_type_userScalarFieldEnum[]
  }

  /**
   * tbl_type_user findMany
   */
  export type tbl_type_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_type_users to fetch.
     */
    where?: tbl_type_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_type_users to fetch.
     */
    orderBy?: tbl_type_userOrderByWithRelationInput | tbl_type_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_type_users.
     */
    cursor?: tbl_type_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_type_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_type_users.
     */
    skip?: number
    distinct?: Tbl_type_userScalarFieldEnum | Tbl_type_userScalarFieldEnum[]
  }

  /**
   * tbl_type_user create
   */
  export type tbl_type_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_type_user.
     */
    data?: XOR<tbl_type_userCreateInput, tbl_type_userUncheckedCreateInput>
  }

  /**
   * tbl_type_user createMany
   */
  export type tbl_type_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_type_users.
     */
    data: tbl_type_userCreateManyInput | tbl_type_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_type_user update
   */
  export type tbl_type_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_type_user.
     */
    data: XOR<tbl_type_userUpdateInput, tbl_type_userUncheckedUpdateInput>
    /**
     * Choose, which tbl_type_user to update.
     */
    where: tbl_type_userWhereUniqueInput
  }

  /**
   * tbl_type_user updateMany
   */
  export type tbl_type_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_type_users.
     */
    data: XOR<tbl_type_userUpdateManyMutationInput, tbl_type_userUncheckedUpdateManyInput>
    /**
     * Filter which tbl_type_users to update
     */
    where?: tbl_type_userWhereInput
    /**
     * Limit how many tbl_type_users to update.
     */
    limit?: number
  }

  /**
   * tbl_type_user upsert
   */
  export type tbl_type_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_type_user to update in case it exists.
     */
    where: tbl_type_userWhereUniqueInput
    /**
     * In case the tbl_type_user found by the `where` argument doesn't exist, create a new tbl_type_user with this data.
     */
    create: XOR<tbl_type_userCreateInput, tbl_type_userUncheckedCreateInput>
    /**
     * In case the tbl_type_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_type_userUpdateInput, tbl_type_userUncheckedUpdateInput>
  }

  /**
   * tbl_type_user delete
   */
  export type tbl_type_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    /**
     * Filter which tbl_type_user to delete.
     */
    where: tbl_type_userWhereUniqueInput
  }

  /**
   * tbl_type_user deleteMany
   */
  export type tbl_type_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_type_users to delete
     */
    where?: tbl_type_userWhereInput
    /**
     * Limit how many tbl_type_users to delete.
     */
    limit?: number
  }

  /**
   * tbl_type_user.tbl_user
   */
  export type tbl_type_user$tbl_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    where?: tbl_userWhereInput
    orderBy?: tbl_userOrderByWithRelationInput | tbl_userOrderByWithRelationInput[]
    cursor?: tbl_userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_userScalarFieldEnum | Tbl_userScalarFieldEnum[]
  }

  /**
   * tbl_type_user without action
   */
  export type tbl_type_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
  }


  /**
   * Model tbl_user
   */

  export type AggregateTbl_user = {
    _count: Tbl_userCountAggregateOutputType | null
    _avg: Tbl_userAvgAggregateOutputType | null
    _sum: Tbl_userSumAggregateOutputType | null
    _min: Tbl_userMinAggregateOutputType | null
    _max: Tbl_userMaxAggregateOutputType | null
  }

  export type Tbl_userAvgAggregateOutputType = {
    id_user: number | null
    id_tipo: number | null
  }

  export type Tbl_userSumAggregateOutputType = {
    id_user: number | null
    id_tipo: number | null
  }

  export type Tbl_userMinAggregateOutputType = {
    id_user: number | null
    email: string | null
    senha: string | null
    id_tipo: number | null
  }

  export type Tbl_userMaxAggregateOutputType = {
    id_user: number | null
    email: string | null
    senha: string | null
    id_tipo: number | null
  }

  export type Tbl_userCountAggregateOutputType = {
    id_user: number
    email: number
    senha: number
    id_tipo: number
    _all: number
  }


  export type Tbl_userAvgAggregateInputType = {
    id_user?: true
    id_tipo?: true
  }

  export type Tbl_userSumAggregateInputType = {
    id_user?: true
    id_tipo?: true
  }

  export type Tbl_userMinAggregateInputType = {
    id_user?: true
    email?: true
    senha?: true
    id_tipo?: true
  }

  export type Tbl_userMaxAggregateInputType = {
    id_user?: true
    email?: true
    senha?: true
    id_tipo?: true
  }

  export type Tbl_userCountAggregateInputType = {
    id_user?: true
    email?: true
    senha?: true
    id_tipo?: true
    _all?: true
  }

  export type Tbl_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_user to aggregate.
     */
    where?: tbl_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_users to fetch.
     */
    orderBy?: tbl_userOrderByWithRelationInput | tbl_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_users
    **/
    _count?: true | Tbl_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_userMaxAggregateInputType
  }

  export type GetTbl_userAggregateType<T extends Tbl_userAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_user[P]>
      : GetScalarType<T[P], AggregateTbl_user[P]>
  }




  export type tbl_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_userWhereInput
    orderBy?: tbl_userOrderByWithAggregationInput | tbl_userOrderByWithAggregationInput[]
    by: Tbl_userScalarFieldEnum[] | Tbl_userScalarFieldEnum
    having?: tbl_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_userCountAggregateInputType | true
    _avg?: Tbl_userAvgAggregateInputType
    _sum?: Tbl_userSumAggregateInputType
    _min?: Tbl_userMinAggregateInputType
    _max?: Tbl_userMaxAggregateInputType
  }

  export type Tbl_userGroupByOutputType = {
    id_user: number
    email: string
    senha: string
    id_tipo: number | null
    _count: Tbl_userCountAggregateOutputType | null
    _avg: Tbl_userAvgAggregateOutputType | null
    _sum: Tbl_userSumAggregateOutputType | null
    _min: Tbl_userMinAggregateOutputType | null
    _max: Tbl_userMaxAggregateOutputType | null
  }

  type GetTbl_userGroupByPayload<T extends tbl_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_userGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_userGroupByOutputType[P]>
        }
      >
    >


  export type tbl_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_user?: boolean
    email?: boolean
    senha?: boolean
    id_tipo?: boolean
    tbl_chat?: boolean | tbl_user$tbl_chatArgs<ExtArgs>
    tbl_clinica?: boolean | tbl_user$tbl_clinicaArgs<ExtArgs>
    tbl_medico?: boolean | tbl_user$tbl_medicoArgs<ExtArgs>
    tbl_responsavel?: boolean | tbl_user$tbl_responsavelArgs<ExtArgs>
    tbl_rotina?: boolean | tbl_user$tbl_rotinaArgs<ExtArgs>
    tbl_type_user?: boolean | tbl_user$tbl_type_userArgs<ExtArgs>
    _count?: boolean | Tbl_userCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_user"]>



  export type tbl_userSelectScalar = {
    id_user?: boolean
    email?: boolean
    senha?: boolean
    id_tipo?: boolean
  }

  export type tbl_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_user" | "email" | "senha" | "id_tipo", ExtArgs["result"]["tbl_user"]>
  export type tbl_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_chat?: boolean | tbl_user$tbl_chatArgs<ExtArgs>
    tbl_clinica?: boolean | tbl_user$tbl_clinicaArgs<ExtArgs>
    tbl_medico?: boolean | tbl_user$tbl_medicoArgs<ExtArgs>
    tbl_responsavel?: boolean | tbl_user$tbl_responsavelArgs<ExtArgs>
    tbl_rotina?: boolean | tbl_user$tbl_rotinaArgs<ExtArgs>
    tbl_type_user?: boolean | tbl_user$tbl_type_userArgs<ExtArgs>
    _count?: boolean | Tbl_userCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_user"
    objects: {
      tbl_chat: Prisma.$tbl_chatPayload<ExtArgs>[]
      tbl_clinica: Prisma.$tbl_clinicaPayload<ExtArgs>[]
      tbl_medico: Prisma.$tbl_medicoPayload<ExtArgs>[]
      tbl_responsavel: Prisma.$tbl_responsavelPayload<ExtArgs>[]
      tbl_rotina: Prisma.$tbl_rotinaPayload<ExtArgs>[]
      tbl_type_user: Prisma.$tbl_type_userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_user: number
      email: string
      senha: string
      id_tipo: number | null
    }, ExtArgs["result"]["tbl_user"]>
    composites: {}
  }

  type tbl_userGetPayload<S extends boolean | null | undefined | tbl_userDefaultArgs> = $Result.GetResult<Prisma.$tbl_userPayload, S>

  type tbl_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tbl_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tbl_userCountAggregateInputType | true
    }

  export interface tbl_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_user'], meta: { name: 'tbl_user' } }
    /**
     * Find zero or one Tbl_user that matches the filter.
     * @param {tbl_userFindUniqueArgs} args - Arguments to find a Tbl_user
     * @example
     * // Get one Tbl_user
     * const tbl_user = await prisma.tbl_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_userFindUniqueArgs>(args: SelectSubset<T, tbl_userFindUniqueArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tbl_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tbl_userFindUniqueOrThrowArgs} args - Arguments to find a Tbl_user
     * @example
     * // Get one Tbl_user
     * const tbl_user = await prisma.tbl_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_userFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_userFindFirstArgs} args - Arguments to find a Tbl_user
     * @example
     * // Get one Tbl_user
     * const tbl_user = await prisma.tbl_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_userFindFirstArgs>(args?: SelectSubset<T, tbl_userFindFirstArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tbl_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_userFindFirstOrThrowArgs} args - Arguments to find a Tbl_user
     * @example
     * // Get one Tbl_user
     * const tbl_user = await prisma.tbl_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_userFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tbl_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_users
     * const tbl_users = await prisma.tbl_user.findMany()
     * 
     * // Get first 10 Tbl_users
     * const tbl_users = await prisma.tbl_user.findMany({ take: 10 })
     * 
     * // Only select the `id_user`
     * const tbl_userWithId_userOnly = await prisma.tbl_user.findMany({ select: { id_user: true } })
     * 
     */
    findMany<T extends tbl_userFindManyArgs>(args?: SelectSubset<T, tbl_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tbl_user.
     * @param {tbl_userCreateArgs} args - Arguments to create a Tbl_user.
     * @example
     * // Create one Tbl_user
     * const Tbl_user = await prisma.tbl_user.create({
     *   data: {
     *     // ... data to create a Tbl_user
     *   }
     * })
     * 
     */
    create<T extends tbl_userCreateArgs>(args: SelectSubset<T, tbl_userCreateArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tbl_users.
     * @param {tbl_userCreateManyArgs} args - Arguments to create many Tbl_users.
     * @example
     * // Create many Tbl_users
     * const tbl_user = await prisma.tbl_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_userCreateManyArgs>(args?: SelectSubset<T, tbl_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_user.
     * @param {tbl_userDeleteArgs} args - Arguments to delete one Tbl_user.
     * @example
     * // Delete one Tbl_user
     * const Tbl_user = await prisma.tbl_user.delete({
     *   where: {
     *     // ... filter to delete one Tbl_user
     *   }
     * })
     * 
     */
    delete<T extends tbl_userDeleteArgs>(args: SelectSubset<T, tbl_userDeleteArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tbl_user.
     * @param {tbl_userUpdateArgs} args - Arguments to update one Tbl_user.
     * @example
     * // Update one Tbl_user
     * const tbl_user = await prisma.tbl_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_userUpdateArgs>(args: SelectSubset<T, tbl_userUpdateArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tbl_users.
     * @param {tbl_userDeleteManyArgs} args - Arguments to filter Tbl_users to delete.
     * @example
     * // Delete a few Tbl_users
     * const { count } = await prisma.tbl_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_userDeleteManyArgs>(args?: SelectSubset<T, tbl_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_users
     * const tbl_user = await prisma.tbl_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_userUpdateManyArgs>(args: SelectSubset<T, tbl_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_user.
     * @param {tbl_userUpsertArgs} args - Arguments to update or create a Tbl_user.
     * @example
     * // Update or create a Tbl_user
     * const tbl_user = await prisma.tbl_user.upsert({
     *   create: {
     *     // ... data to create a Tbl_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_user we want to update
     *   }
     * })
     */
    upsert<T extends tbl_userUpsertArgs>(args: SelectSubset<T, tbl_userUpsertArgs<ExtArgs>>): Prisma__tbl_userClient<$Result.GetResult<Prisma.$tbl_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tbl_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_userCountArgs} args - Arguments to filter Tbl_users to count.
     * @example
     * // Count the number of Tbl_users
     * const count = await prisma.tbl_user.count({
     *   where: {
     *     // ... the filter for the Tbl_users we want to count
     *   }
     * })
    **/
    count<T extends tbl_userCountArgs>(
      args?: Subset<T, tbl_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_userAggregateArgs>(args: Subset<T, Tbl_userAggregateArgs>): Prisma.PrismaPromise<GetTbl_userAggregateType<T>>

    /**
     * Group by Tbl_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_userGroupByArgs['orderBy'] }
        : { orderBy?: tbl_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_user model
   */
  readonly fields: tbl_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_chat<T extends tbl_user$tbl_chatArgs<ExtArgs> = {}>(args?: Subset<T, tbl_user$tbl_chatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_chatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_clinica<T extends tbl_user$tbl_clinicaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_user$tbl_clinicaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_clinicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_medico<T extends tbl_user$tbl_medicoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_user$tbl_medicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_medicoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_responsavel<T extends tbl_user$tbl_responsavelArgs<ExtArgs> = {}>(args?: Subset<T, tbl_user$tbl_responsavelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_responsavelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_rotina<T extends tbl_user$tbl_rotinaArgs<ExtArgs> = {}>(args?: Subset<T, tbl_user$tbl_rotinaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_rotinaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tbl_type_user<T extends tbl_user$tbl_type_userArgs<ExtArgs> = {}>(args?: Subset<T, tbl_user$tbl_type_userArgs<ExtArgs>>): Prisma__tbl_type_userClient<$Result.GetResult<Prisma.$tbl_type_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_user model
   */
  interface tbl_userFieldRefs {
    readonly id_user: FieldRef<"tbl_user", 'Int'>
    readonly email: FieldRef<"tbl_user", 'String'>
    readonly senha: FieldRef<"tbl_user", 'String'>
    readonly id_tipo: FieldRef<"tbl_user", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_user findUnique
   */
  export type tbl_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_user to fetch.
     */
    where: tbl_userWhereUniqueInput
  }

  /**
   * tbl_user findUniqueOrThrow
   */
  export type tbl_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_user to fetch.
     */
    where: tbl_userWhereUniqueInput
  }

  /**
   * tbl_user findFirst
   */
  export type tbl_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_user to fetch.
     */
    where?: tbl_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_users to fetch.
     */
    orderBy?: tbl_userOrderByWithRelationInput | tbl_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_users.
     */
    cursor?: tbl_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_users.
     */
    distinct?: Tbl_userScalarFieldEnum | Tbl_userScalarFieldEnum[]
  }

  /**
   * tbl_user findFirstOrThrow
   */
  export type tbl_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_user to fetch.
     */
    where?: tbl_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_users to fetch.
     */
    orderBy?: tbl_userOrderByWithRelationInput | tbl_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_users.
     */
    cursor?: tbl_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_users.
     */
    distinct?: Tbl_userScalarFieldEnum | Tbl_userScalarFieldEnum[]
  }

  /**
   * tbl_user findMany
   */
  export type tbl_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * Filter, which tbl_users to fetch.
     */
    where?: tbl_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_users to fetch.
     */
    orderBy?: tbl_userOrderByWithRelationInput | tbl_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_users.
     */
    cursor?: tbl_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_users.
     */
    skip?: number
    distinct?: Tbl_userScalarFieldEnum | Tbl_userScalarFieldEnum[]
  }

  /**
   * tbl_user create
   */
  export type tbl_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_user.
     */
    data: XOR<tbl_userCreateInput, tbl_userUncheckedCreateInput>
  }

  /**
   * tbl_user createMany
   */
  export type tbl_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_users.
     */
    data: tbl_userCreateManyInput | tbl_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_user update
   */
  export type tbl_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_user.
     */
    data: XOR<tbl_userUpdateInput, tbl_userUncheckedUpdateInput>
    /**
     * Choose, which tbl_user to update.
     */
    where: tbl_userWhereUniqueInput
  }

  /**
   * tbl_user updateMany
   */
  export type tbl_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_users.
     */
    data: XOR<tbl_userUpdateManyMutationInput, tbl_userUncheckedUpdateManyInput>
    /**
     * Filter which tbl_users to update
     */
    where?: tbl_userWhereInput
    /**
     * Limit how many tbl_users to update.
     */
    limit?: number
  }

  /**
   * tbl_user upsert
   */
  export type tbl_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_user to update in case it exists.
     */
    where: tbl_userWhereUniqueInput
    /**
     * In case the tbl_user found by the `where` argument doesn't exist, create a new tbl_user with this data.
     */
    create: XOR<tbl_userCreateInput, tbl_userUncheckedCreateInput>
    /**
     * In case the tbl_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_userUpdateInput, tbl_userUncheckedUpdateInput>
  }

  /**
   * tbl_user delete
   */
  export type tbl_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
    /**
     * Filter which tbl_user to delete.
     */
    where: tbl_userWhereUniqueInput
  }

  /**
   * tbl_user deleteMany
   */
  export type tbl_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_users to delete
     */
    where?: tbl_userWhereInput
    /**
     * Limit how many tbl_users to delete.
     */
    limit?: number
  }

  /**
   * tbl_user.tbl_chat
   */
  export type tbl_user$tbl_chatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_chat
     */
    select?: tbl_chatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_chat
     */
    omit?: tbl_chatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_chatInclude<ExtArgs> | null
    where?: tbl_chatWhereInput
    orderBy?: tbl_chatOrderByWithRelationInput | tbl_chatOrderByWithRelationInput[]
    cursor?: tbl_chatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_chatScalarFieldEnum | Tbl_chatScalarFieldEnum[]
  }

  /**
   * tbl_user.tbl_clinica
   */
  export type tbl_user$tbl_clinicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_clinica
     */
    select?: tbl_clinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_clinica
     */
    omit?: tbl_clinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_clinicaInclude<ExtArgs> | null
    where?: tbl_clinicaWhereInput
    orderBy?: tbl_clinicaOrderByWithRelationInput | tbl_clinicaOrderByWithRelationInput[]
    cursor?: tbl_clinicaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_clinicaScalarFieldEnum | Tbl_clinicaScalarFieldEnum[]
  }

  /**
   * tbl_user.tbl_medico
   */
  export type tbl_user$tbl_medicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_medico
     */
    select?: tbl_medicoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_medico
     */
    omit?: tbl_medicoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_medicoInclude<ExtArgs> | null
    where?: tbl_medicoWhereInput
    orderBy?: tbl_medicoOrderByWithRelationInput | tbl_medicoOrderByWithRelationInput[]
    cursor?: tbl_medicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_medicoScalarFieldEnum | Tbl_medicoScalarFieldEnum[]
  }

  /**
   * tbl_user.tbl_responsavel
   */
  export type tbl_user$tbl_responsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_responsavel
     */
    select?: tbl_responsavelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_responsavel
     */
    omit?: tbl_responsavelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_responsavelInclude<ExtArgs> | null
    where?: tbl_responsavelWhereInput
    orderBy?: tbl_responsavelOrderByWithRelationInput | tbl_responsavelOrderByWithRelationInput[]
    cursor?: tbl_responsavelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_responsavelScalarFieldEnum | Tbl_responsavelScalarFieldEnum[]
  }

  /**
   * tbl_user.tbl_rotina
   */
  export type tbl_user$tbl_rotinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_rotina
     */
    select?: tbl_rotinaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_rotina
     */
    omit?: tbl_rotinaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_rotinaInclude<ExtArgs> | null
    where?: tbl_rotinaWhereInput
    orderBy?: tbl_rotinaOrderByWithRelationInput | tbl_rotinaOrderByWithRelationInput[]
    cursor?: tbl_rotinaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_rotinaScalarFieldEnum | Tbl_rotinaScalarFieldEnum[]
  }

  /**
   * tbl_user.tbl_type_user
   */
  export type tbl_user$tbl_type_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_type_user
     */
    select?: tbl_type_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_type_user
     */
    omit?: tbl_type_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_type_userInclude<ExtArgs> | null
    where?: tbl_type_userWhereInput
  }

  /**
   * tbl_user without action
   */
  export type tbl_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_user
     */
    select?: tbl_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tbl_user
     */
    omit?: tbl_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_userInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Tbl_bebeScalarFieldEnum: {
    id_bebe: 'id_bebe',
    nome: 'nome',
    data_nascimento: 'data_nascimento',
    peso: 'peso',
    altura: 'altura',
    certidao_nascimento: 'certidao_nascimento',
    cpf: 'cpf',
    cartao_medico: 'cartao_medico',
    imagem_certidao: 'imagem_certidao',
    id_sexo: 'id_sexo',
    id_cep: 'id_cep',
    id_sangue: 'id_sangue'
  };

  export type Tbl_bebeScalarFieldEnum = (typeof Tbl_bebeScalarFieldEnum)[keyof typeof Tbl_bebeScalarFieldEnum]


  export const Tbl_cepScalarFieldEnum: {
    id_cep: 'id_cep',
    cep: 'cep',
    logradouro: 'logradouro',
    cidade: 'cidade',
    uf: 'uf',
    id_responsavel: 'id_responsavel'
  };

  export type Tbl_cepScalarFieldEnum = (typeof Tbl_cepScalarFieldEnum)[keyof typeof Tbl_cepScalarFieldEnum]


  export const Tbl_chatScalarFieldEnum: {
    id_chat: 'id_chat',
    id_mensagem: 'id_mensagem',
    id_user: 'id_user'
  };

  export type Tbl_chatScalarFieldEnum = (typeof Tbl_chatScalarFieldEnum)[keyof typeof Tbl_chatScalarFieldEnum]


  export const Tbl_clinicaScalarFieldEnum: {
    id_clinica: 'id_clinica',
    nome: 'nome',
    cnpj: 'cnpj',
    telefone: 'telefone',
    email: 'email',
    id_cep: 'id_cep',
    id_user: 'id_user'
  };

  export type Tbl_clinicaScalarFieldEnum = (typeof Tbl_clinicaScalarFieldEnum)[keyof typeof Tbl_clinicaScalarFieldEnum]


  export const Tbl_especialidadeScalarFieldEnum: {
    id_especialidade: 'id_especialidade',
    especialidade: 'especialidade'
  };

  export type Tbl_especialidadeScalarFieldEnum = (typeof Tbl_especialidadeScalarFieldEnum)[keyof typeof Tbl_especialidadeScalarFieldEnum]


  export const Tbl_especialidade_clinicaScalarFieldEnum: {
    id: 'id',
    id_clinica: 'id_clinica',
    id_especialidade: 'id_especialidade'
  };

  export type Tbl_especialidade_clinicaScalarFieldEnum = (typeof Tbl_especialidade_clinicaScalarFieldEnum)[keyof typeof Tbl_especialidade_clinicaScalarFieldEnum]


  export const Tbl_especialidade_medicoScalarFieldEnum: {
    id: 'id',
    id_medico: 'id_medico',
    id_especialidade: 'id_especialidade'
  };

  export type Tbl_especialidade_medicoScalarFieldEnum = (typeof Tbl_especialidade_medicoScalarFieldEnum)[keyof typeof Tbl_especialidade_medicoScalarFieldEnum]


  export const Tbl_medicoScalarFieldEnum: {
    id_medico: 'id_medico',
    nome: 'nome',
    email: 'email',
    telefone: 'telefone',
    crm: 'crm',
    cpf: 'cpf',
    foto: 'foto',
    id_sexo: 'id_sexo',
    id_user: 'id_user'
  };

  export type Tbl_medicoScalarFieldEnum = (typeof Tbl_medicoScalarFieldEnum)[keyof typeof Tbl_medicoScalarFieldEnum]


  export const Tbl_messagerScalarFieldEnum: {
    id_mensagem: 'id_mensagem',
    conteudo: 'conteudo',
    id_tipo_mensagem: 'id_tipo_mensagem',
    id_status: 'id_status'
  };

  export type Tbl_messagerScalarFieldEnum = (typeof Tbl_messagerScalarFieldEnum)[keyof typeof Tbl_messagerScalarFieldEnum]


  export const Tbl_responsavelScalarFieldEnum: {
    id_responsavel: 'id_responsavel',
    nome: 'nome',
    data_nascimento: 'data_nascimento',
    cpf: 'cpf',
    telefone: 'telefone',
    arquivo: 'arquivo',
    cartao_medico: 'cartao_medico',
    cep: 'cep',
    id_sexo: 'id_sexo',
    id_user: 'id_user',
    id_cep: 'id_cep'
  };

  export type Tbl_responsavelScalarFieldEnum = (typeof Tbl_responsavelScalarFieldEnum)[keyof typeof Tbl_responsavelScalarFieldEnum]


  export const Tbl_responsavel_bebeScalarFieldEnum: {
    id_bebe_responsavel: 'id_bebe_responsavel',
    id_bebe: 'id_bebe',
    id_responsavel: 'id_responsavel'
  };

  export type Tbl_responsavel_bebeScalarFieldEnum = (typeof Tbl_responsavel_bebeScalarFieldEnum)[keyof typeof Tbl_responsavel_bebeScalarFieldEnum]


  export const Tbl_rotinaScalarFieldEnum: {
    id_base: 'id_base',
    titulo: 'titulo',
    cor: 'cor',
    data_rotina: 'data_rotina',
    hora: 'hora',
    descricao: 'descricao',
    id_user: 'id_user',
    id_rotina_base: 'id_rotina_base'
  };

  export type Tbl_rotinaScalarFieldEnum = (typeof Tbl_rotinaScalarFieldEnum)[keyof typeof Tbl_rotinaScalarFieldEnum]


  export const Tbl_rotina_baseScalarFieldEnum: {
    id_rotina_base: 'id_rotina_base',
    titulo: 'titulo',
    cor: 'cor',
    data_rotina: 'data_rotina',
    hora: 'hora',
    descricao: 'descricao'
  };

  export type Tbl_rotina_baseScalarFieldEnum = (typeof Tbl_rotina_baseScalarFieldEnum)[keyof typeof Tbl_rotina_baseScalarFieldEnum]


  export const Tbl_sangueScalarFieldEnum: {
    id_sangue: 'id_sangue',
    tipo_sanguineo: 'tipo_sanguineo'
  };

  export type Tbl_sangueScalarFieldEnum = (typeof Tbl_sangueScalarFieldEnum)[keyof typeof Tbl_sangueScalarFieldEnum]


  export const Tbl_sexoScalarFieldEnum: {
    id_sexo: 'id_sexo',
    sexo: 'sexo'
  };

  export type Tbl_sexoScalarFieldEnum = (typeof Tbl_sexoScalarFieldEnum)[keyof typeof Tbl_sexoScalarFieldEnum]


  export const Tbl_status_messagerScalarFieldEnum: {
    id_status: 'id_status',
    status_messagem: 'status_messagem'
  };

  export type Tbl_status_messagerScalarFieldEnum = (typeof Tbl_status_messagerScalarFieldEnum)[keyof typeof Tbl_status_messagerScalarFieldEnum]


  export const Tbl_type_messagerScalarFieldEnum: {
    id_tipo_mensagem: 'id_tipo_mensagem',
    tipo_mensagem: 'tipo_mensagem'
  };

  export type Tbl_type_messagerScalarFieldEnum = (typeof Tbl_type_messagerScalarFieldEnum)[keyof typeof Tbl_type_messagerScalarFieldEnum]


  export const Tbl_type_userScalarFieldEnum: {
    id_tipo: 'id_tipo',
    tipo: 'tipo'
  };

  export type Tbl_type_userScalarFieldEnum = (typeof Tbl_type_userScalarFieldEnum)[keyof typeof Tbl_type_userScalarFieldEnum]


  export const Tbl_userScalarFieldEnum: {
    id_user: 'id_user',
    email: 'email',
    senha: 'senha',
    id_tipo: 'id_tipo'
  };

  export type Tbl_userScalarFieldEnum = (typeof Tbl_userScalarFieldEnum)[keyof typeof Tbl_userScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const tbl_bebeOrderByRelevanceFieldEnum: {
    nome: 'nome',
    certidao_nascimento: 'certidao_nascimento',
    cpf: 'cpf',
    cartao_medico: 'cartao_medico',
    imagem_certidao: 'imagem_certidao'
  };

  export type tbl_bebeOrderByRelevanceFieldEnum = (typeof tbl_bebeOrderByRelevanceFieldEnum)[keyof typeof tbl_bebeOrderByRelevanceFieldEnum]


  export const tbl_cepOrderByRelevanceFieldEnum: {
    cep: 'cep',
    logradouro: 'logradouro',
    cidade: 'cidade',
    uf: 'uf'
  };

  export type tbl_cepOrderByRelevanceFieldEnum = (typeof tbl_cepOrderByRelevanceFieldEnum)[keyof typeof tbl_cepOrderByRelevanceFieldEnum]


  export const tbl_clinicaOrderByRelevanceFieldEnum: {
    nome: 'nome',
    cnpj: 'cnpj',
    telefone: 'telefone',
    email: 'email'
  };

  export type tbl_clinicaOrderByRelevanceFieldEnum = (typeof tbl_clinicaOrderByRelevanceFieldEnum)[keyof typeof tbl_clinicaOrderByRelevanceFieldEnum]


  export const tbl_especialidadeOrderByRelevanceFieldEnum: {
    especialidade: 'especialidade'
  };

  export type tbl_especialidadeOrderByRelevanceFieldEnum = (typeof tbl_especialidadeOrderByRelevanceFieldEnum)[keyof typeof tbl_especialidadeOrderByRelevanceFieldEnum]


  export const tbl_medicoOrderByRelevanceFieldEnum: {
    nome: 'nome',
    email: 'email',
    telefone: 'telefone',
    crm: 'crm',
    cpf: 'cpf',
    foto: 'foto'
  };

  export type tbl_medicoOrderByRelevanceFieldEnum = (typeof tbl_medicoOrderByRelevanceFieldEnum)[keyof typeof tbl_medicoOrderByRelevanceFieldEnum]


  export const tbl_messagerOrderByRelevanceFieldEnum: {
    conteudo: 'conteudo'
  };

  export type tbl_messagerOrderByRelevanceFieldEnum = (typeof tbl_messagerOrderByRelevanceFieldEnum)[keyof typeof tbl_messagerOrderByRelevanceFieldEnum]


  export const tbl_responsavelOrderByRelevanceFieldEnum: {
    nome: 'nome',
    cpf: 'cpf',
    telefone: 'telefone',
    arquivo: 'arquivo',
    cartao_medico: 'cartao_medico',
    cep: 'cep'
  };

  export type tbl_responsavelOrderByRelevanceFieldEnum = (typeof tbl_responsavelOrderByRelevanceFieldEnum)[keyof typeof tbl_responsavelOrderByRelevanceFieldEnum]


  export const tbl_rotinaOrderByRelevanceFieldEnum: {
    titulo: 'titulo',
    cor: 'cor',
    descricao: 'descricao'
  };

  export type tbl_rotinaOrderByRelevanceFieldEnum = (typeof tbl_rotinaOrderByRelevanceFieldEnum)[keyof typeof tbl_rotinaOrderByRelevanceFieldEnum]


  export const tbl_rotina_baseOrderByRelevanceFieldEnum: {
    titulo: 'titulo',
    cor: 'cor',
    descricao: 'descricao'
  };

  export type tbl_rotina_baseOrderByRelevanceFieldEnum = (typeof tbl_rotina_baseOrderByRelevanceFieldEnum)[keyof typeof tbl_rotina_baseOrderByRelevanceFieldEnum]


  export const tbl_sangueOrderByRelevanceFieldEnum: {
    tipo_sanguineo: 'tipo_sanguineo'
  };

  export type tbl_sangueOrderByRelevanceFieldEnum = (typeof tbl_sangueOrderByRelevanceFieldEnum)[keyof typeof tbl_sangueOrderByRelevanceFieldEnum]


  export const tbl_sexoOrderByRelevanceFieldEnum: {
    sexo: 'sexo'
  };

  export type tbl_sexoOrderByRelevanceFieldEnum = (typeof tbl_sexoOrderByRelevanceFieldEnum)[keyof typeof tbl_sexoOrderByRelevanceFieldEnum]


  export const tbl_status_messagerOrderByRelevanceFieldEnum: {
    status_messagem: 'status_messagem'
  };

  export type tbl_status_messagerOrderByRelevanceFieldEnum = (typeof tbl_status_messagerOrderByRelevanceFieldEnum)[keyof typeof tbl_status_messagerOrderByRelevanceFieldEnum]


  export const tbl_type_messagerOrderByRelevanceFieldEnum: {
    tipo_mensagem: 'tipo_mensagem'
  };

  export type tbl_type_messagerOrderByRelevanceFieldEnum = (typeof tbl_type_messagerOrderByRelevanceFieldEnum)[keyof typeof tbl_type_messagerOrderByRelevanceFieldEnum]


  export const tbl_type_userOrderByRelevanceFieldEnum: {
    tipo: 'tipo'
  };

  export type tbl_type_userOrderByRelevanceFieldEnum = (typeof tbl_type_userOrderByRelevanceFieldEnum)[keyof typeof tbl_type_userOrderByRelevanceFieldEnum]


  export const tbl_userOrderByRelevanceFieldEnum: {
    email: 'email',
    senha: 'senha'
  };

  export type tbl_userOrderByRelevanceFieldEnum = (typeof tbl_userOrderByRelevanceFieldEnum)[keyof typeof tbl_userOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type tbl_bebeWhereInput = {
    AND?: tbl_bebeWhereInput | tbl_bebeWhereInput[]
    OR?: tbl_bebeWhereInput[]
    NOT?: tbl_bebeWhereInput | tbl_bebeWhereInput[]
    id_bebe?: IntFilter<"tbl_bebe"> | number
    nome?: StringFilter<"tbl_bebe"> | string
    data_nascimento?: DateTimeFilter<"tbl_bebe"> | Date | string
    peso?: DecimalFilter<"tbl_bebe"> | Decimal | DecimalJsLike | number | string
    altura?: IntFilter<"tbl_bebe"> | number
    certidao_nascimento?: StringFilter<"tbl_bebe"> | string
    cpf?: StringNullableFilter<"tbl_bebe"> | string | null
    cartao_medico?: StringFilter<"tbl_bebe"> | string
    imagem_certidao?: StringFilter<"tbl_bebe"> | string
    id_sexo?: IntNullableFilter<"tbl_bebe"> | number | null
    id_cep?: IntNullableFilter<"tbl_bebe"> | number | null
    id_sangue?: IntNullableFilter<"tbl_bebe"> | number | null
    tbl_cep?: XOR<Tbl_cepNullableScalarRelationFilter, tbl_cepWhereInput> | null
    tbl_sangue?: XOR<Tbl_sangueNullableScalarRelationFilter, tbl_sangueWhereInput> | null
    tbl_sexo?: XOR<Tbl_sexoNullableScalarRelationFilter, tbl_sexoWhereInput> | null
    tbl_responsavel_bebe?: Tbl_responsavel_bebeListRelationFilter
  }

  export type tbl_bebeOrderByWithRelationInput = {
    id_bebe?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    peso?: SortOrder
    altura?: SortOrder
    certidao_nascimento?: SortOrder
    cpf?: SortOrderInput | SortOrder
    cartao_medico?: SortOrder
    imagem_certidao?: SortOrder
    id_sexo?: SortOrderInput | SortOrder
    id_cep?: SortOrderInput | SortOrder
    id_sangue?: SortOrderInput | SortOrder
    tbl_cep?: tbl_cepOrderByWithRelationInput
    tbl_sangue?: tbl_sangueOrderByWithRelationInput
    tbl_sexo?: tbl_sexoOrderByWithRelationInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeOrderByRelationAggregateInput
    _relevance?: tbl_bebeOrderByRelevanceInput
  }

  export type tbl_bebeWhereUniqueInput = Prisma.AtLeast<{
    id_bebe?: number
    AND?: tbl_bebeWhereInput | tbl_bebeWhereInput[]
    OR?: tbl_bebeWhereInput[]
    NOT?: tbl_bebeWhereInput | tbl_bebeWhereInput[]
    nome?: StringFilter<"tbl_bebe"> | string
    data_nascimento?: DateTimeFilter<"tbl_bebe"> | Date | string
    peso?: DecimalFilter<"tbl_bebe"> | Decimal | DecimalJsLike | number | string
    altura?: IntFilter<"tbl_bebe"> | number
    certidao_nascimento?: StringFilter<"tbl_bebe"> | string
    cpf?: StringNullableFilter<"tbl_bebe"> | string | null
    cartao_medico?: StringFilter<"tbl_bebe"> | string
    imagem_certidao?: StringFilter<"tbl_bebe"> | string
    id_sexo?: IntNullableFilter<"tbl_bebe"> | number | null
    id_cep?: IntNullableFilter<"tbl_bebe"> | number | null
    id_sangue?: IntNullableFilter<"tbl_bebe"> | number | null
    tbl_cep?: XOR<Tbl_cepNullableScalarRelationFilter, tbl_cepWhereInput> | null
    tbl_sangue?: XOR<Tbl_sangueNullableScalarRelationFilter, tbl_sangueWhereInput> | null
    tbl_sexo?: XOR<Tbl_sexoNullableScalarRelationFilter, tbl_sexoWhereInput> | null
    tbl_responsavel_bebe?: Tbl_responsavel_bebeListRelationFilter
  }, "id_bebe">

  export type tbl_bebeOrderByWithAggregationInput = {
    id_bebe?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    peso?: SortOrder
    altura?: SortOrder
    certidao_nascimento?: SortOrder
    cpf?: SortOrderInput | SortOrder
    cartao_medico?: SortOrder
    imagem_certidao?: SortOrder
    id_sexo?: SortOrderInput | SortOrder
    id_cep?: SortOrderInput | SortOrder
    id_sangue?: SortOrderInput | SortOrder
    _count?: tbl_bebeCountOrderByAggregateInput
    _avg?: tbl_bebeAvgOrderByAggregateInput
    _max?: tbl_bebeMaxOrderByAggregateInput
    _min?: tbl_bebeMinOrderByAggregateInput
    _sum?: tbl_bebeSumOrderByAggregateInput
  }

  export type tbl_bebeScalarWhereWithAggregatesInput = {
    AND?: tbl_bebeScalarWhereWithAggregatesInput | tbl_bebeScalarWhereWithAggregatesInput[]
    OR?: tbl_bebeScalarWhereWithAggregatesInput[]
    NOT?: tbl_bebeScalarWhereWithAggregatesInput | tbl_bebeScalarWhereWithAggregatesInput[]
    id_bebe?: IntWithAggregatesFilter<"tbl_bebe"> | number
    nome?: StringWithAggregatesFilter<"tbl_bebe"> | string
    data_nascimento?: DateTimeWithAggregatesFilter<"tbl_bebe"> | Date | string
    peso?: DecimalWithAggregatesFilter<"tbl_bebe"> | Decimal | DecimalJsLike | number | string
    altura?: IntWithAggregatesFilter<"tbl_bebe"> | number
    certidao_nascimento?: StringWithAggregatesFilter<"tbl_bebe"> | string
    cpf?: StringNullableWithAggregatesFilter<"tbl_bebe"> | string | null
    cartao_medico?: StringWithAggregatesFilter<"tbl_bebe"> | string
    imagem_certidao?: StringWithAggregatesFilter<"tbl_bebe"> | string
    id_sexo?: IntNullableWithAggregatesFilter<"tbl_bebe"> | number | null
    id_cep?: IntNullableWithAggregatesFilter<"tbl_bebe"> | number | null
    id_sangue?: IntNullableWithAggregatesFilter<"tbl_bebe"> | number | null
  }

  export type tbl_cepWhereInput = {
    AND?: tbl_cepWhereInput | tbl_cepWhereInput[]
    OR?: tbl_cepWhereInput[]
    NOT?: tbl_cepWhereInput | tbl_cepWhereInput[]
    id_cep?: IntFilter<"tbl_cep"> | number
    cep?: StringFilter<"tbl_cep"> | string
    logradouro?: StringFilter<"tbl_cep"> | string
    cidade?: StringFilter<"tbl_cep"> | string
    uf?: StringFilter<"tbl_cep"> | string
    id_responsavel?: IntNullableFilter<"tbl_cep"> | number | null
    tbl_bebe?: Tbl_bebeListRelationFilter
    tbl_clinica?: Tbl_clinicaListRelationFilter
    tbl_responsavel?: Tbl_responsavelListRelationFilter
  }

  export type tbl_cepOrderByWithRelationInput = {
    id_cep?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    id_responsavel?: SortOrderInput | SortOrder
    tbl_bebe?: tbl_bebeOrderByRelationAggregateInput
    tbl_clinica?: tbl_clinicaOrderByRelationAggregateInput
    tbl_responsavel?: tbl_responsavelOrderByRelationAggregateInput
    _relevance?: tbl_cepOrderByRelevanceInput
  }

  export type tbl_cepWhereUniqueInput = Prisma.AtLeast<{
    id_cep?: number
    AND?: tbl_cepWhereInput | tbl_cepWhereInput[]
    OR?: tbl_cepWhereInput[]
    NOT?: tbl_cepWhereInput | tbl_cepWhereInput[]
    cep?: StringFilter<"tbl_cep"> | string
    logradouro?: StringFilter<"tbl_cep"> | string
    cidade?: StringFilter<"tbl_cep"> | string
    uf?: StringFilter<"tbl_cep"> | string
    id_responsavel?: IntNullableFilter<"tbl_cep"> | number | null
    tbl_bebe?: Tbl_bebeListRelationFilter
    tbl_clinica?: Tbl_clinicaListRelationFilter
    tbl_responsavel?: Tbl_responsavelListRelationFilter
  }, "id_cep">

  export type tbl_cepOrderByWithAggregationInput = {
    id_cep?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    id_responsavel?: SortOrderInput | SortOrder
    _count?: tbl_cepCountOrderByAggregateInput
    _avg?: tbl_cepAvgOrderByAggregateInput
    _max?: tbl_cepMaxOrderByAggregateInput
    _min?: tbl_cepMinOrderByAggregateInput
    _sum?: tbl_cepSumOrderByAggregateInput
  }

  export type tbl_cepScalarWhereWithAggregatesInput = {
    AND?: tbl_cepScalarWhereWithAggregatesInput | tbl_cepScalarWhereWithAggregatesInput[]
    OR?: tbl_cepScalarWhereWithAggregatesInput[]
    NOT?: tbl_cepScalarWhereWithAggregatesInput | tbl_cepScalarWhereWithAggregatesInput[]
    id_cep?: IntWithAggregatesFilter<"tbl_cep"> | number
    cep?: StringWithAggregatesFilter<"tbl_cep"> | string
    logradouro?: StringWithAggregatesFilter<"tbl_cep"> | string
    cidade?: StringWithAggregatesFilter<"tbl_cep"> | string
    uf?: StringWithAggregatesFilter<"tbl_cep"> | string
    id_responsavel?: IntNullableWithAggregatesFilter<"tbl_cep"> | number | null
  }

  export type tbl_chatWhereInput = {
    AND?: tbl_chatWhereInput | tbl_chatWhereInput[]
    OR?: tbl_chatWhereInput[]
    NOT?: tbl_chatWhereInput | tbl_chatWhereInput[]
    id_chat?: IntFilter<"tbl_chat"> | number
    id_mensagem?: IntNullableFilter<"tbl_chat"> | number | null
    id_user?: IntNullableFilter<"tbl_chat"> | number | null
    tbl_messager?: XOR<Tbl_messagerNullableScalarRelationFilter, tbl_messagerWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
  }

  export type tbl_chatOrderByWithRelationInput = {
    id_chat?: SortOrder
    id_mensagem?: SortOrderInput | SortOrder
    id_user?: SortOrderInput | SortOrder
    tbl_messager?: tbl_messagerOrderByWithRelationInput
    tbl_user?: tbl_userOrderByWithRelationInput
  }

  export type tbl_chatWhereUniqueInput = Prisma.AtLeast<{
    id_chat?: number
    AND?: tbl_chatWhereInput | tbl_chatWhereInput[]
    OR?: tbl_chatWhereInput[]
    NOT?: tbl_chatWhereInput | tbl_chatWhereInput[]
    id_mensagem?: IntNullableFilter<"tbl_chat"> | number | null
    id_user?: IntNullableFilter<"tbl_chat"> | number | null
    tbl_messager?: XOR<Tbl_messagerNullableScalarRelationFilter, tbl_messagerWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
  }, "id_chat">

  export type tbl_chatOrderByWithAggregationInput = {
    id_chat?: SortOrder
    id_mensagem?: SortOrderInput | SortOrder
    id_user?: SortOrderInput | SortOrder
    _count?: tbl_chatCountOrderByAggregateInput
    _avg?: tbl_chatAvgOrderByAggregateInput
    _max?: tbl_chatMaxOrderByAggregateInput
    _min?: tbl_chatMinOrderByAggregateInput
    _sum?: tbl_chatSumOrderByAggregateInput
  }

  export type tbl_chatScalarWhereWithAggregatesInput = {
    AND?: tbl_chatScalarWhereWithAggregatesInput | tbl_chatScalarWhereWithAggregatesInput[]
    OR?: tbl_chatScalarWhereWithAggregatesInput[]
    NOT?: tbl_chatScalarWhereWithAggregatesInput | tbl_chatScalarWhereWithAggregatesInput[]
    id_chat?: IntWithAggregatesFilter<"tbl_chat"> | number
    id_mensagem?: IntNullableWithAggregatesFilter<"tbl_chat"> | number | null
    id_user?: IntNullableWithAggregatesFilter<"tbl_chat"> | number | null
  }

  export type tbl_clinicaWhereInput = {
    AND?: tbl_clinicaWhereInput | tbl_clinicaWhereInput[]
    OR?: tbl_clinicaWhereInput[]
    NOT?: tbl_clinicaWhereInput | tbl_clinicaWhereInput[]
    id_clinica?: IntFilter<"tbl_clinica"> | number
    nome?: StringFilter<"tbl_clinica"> | string
    cnpj?: StringFilter<"tbl_clinica"> | string
    telefone?: StringFilter<"tbl_clinica"> | string
    email?: StringFilter<"tbl_clinica"> | string
    id_cep?: IntNullableFilter<"tbl_clinica"> | number | null
    id_user?: IntNullableFilter<"tbl_clinica"> | number | null
    tbl_cep?: XOR<Tbl_cepNullableScalarRelationFilter, tbl_cepWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
    tbl_especialidade_clinica?: Tbl_especialidade_clinicaListRelationFilter
  }

  export type tbl_clinicaOrderByWithRelationInput = {
    id_clinica?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    id_cep?: SortOrderInput | SortOrder
    id_user?: SortOrderInput | SortOrder
    tbl_cep?: tbl_cepOrderByWithRelationInput
    tbl_user?: tbl_userOrderByWithRelationInput
    tbl_especialidade_clinica?: tbl_especialidade_clinicaOrderByRelationAggregateInput
    _relevance?: tbl_clinicaOrderByRelevanceInput
  }

  export type tbl_clinicaWhereUniqueInput = Prisma.AtLeast<{
    id_clinica?: number
    AND?: tbl_clinicaWhereInput | tbl_clinicaWhereInput[]
    OR?: tbl_clinicaWhereInput[]
    NOT?: tbl_clinicaWhereInput | tbl_clinicaWhereInput[]
    nome?: StringFilter<"tbl_clinica"> | string
    cnpj?: StringFilter<"tbl_clinica"> | string
    telefone?: StringFilter<"tbl_clinica"> | string
    email?: StringFilter<"tbl_clinica"> | string
    id_cep?: IntNullableFilter<"tbl_clinica"> | number | null
    id_user?: IntNullableFilter<"tbl_clinica"> | number | null
    tbl_cep?: XOR<Tbl_cepNullableScalarRelationFilter, tbl_cepWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
    tbl_especialidade_clinica?: Tbl_especialidade_clinicaListRelationFilter
  }, "id_clinica">

  export type tbl_clinicaOrderByWithAggregationInput = {
    id_clinica?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    id_cep?: SortOrderInput | SortOrder
    id_user?: SortOrderInput | SortOrder
    _count?: tbl_clinicaCountOrderByAggregateInput
    _avg?: tbl_clinicaAvgOrderByAggregateInput
    _max?: tbl_clinicaMaxOrderByAggregateInput
    _min?: tbl_clinicaMinOrderByAggregateInput
    _sum?: tbl_clinicaSumOrderByAggregateInput
  }

  export type tbl_clinicaScalarWhereWithAggregatesInput = {
    AND?: tbl_clinicaScalarWhereWithAggregatesInput | tbl_clinicaScalarWhereWithAggregatesInput[]
    OR?: tbl_clinicaScalarWhereWithAggregatesInput[]
    NOT?: tbl_clinicaScalarWhereWithAggregatesInput | tbl_clinicaScalarWhereWithAggregatesInput[]
    id_clinica?: IntWithAggregatesFilter<"tbl_clinica"> | number
    nome?: StringWithAggregatesFilter<"tbl_clinica"> | string
    cnpj?: StringWithAggregatesFilter<"tbl_clinica"> | string
    telefone?: StringWithAggregatesFilter<"tbl_clinica"> | string
    email?: StringWithAggregatesFilter<"tbl_clinica"> | string
    id_cep?: IntNullableWithAggregatesFilter<"tbl_clinica"> | number | null
    id_user?: IntNullableWithAggregatesFilter<"tbl_clinica"> | number | null
  }

  export type tbl_especialidadeWhereInput = {
    AND?: tbl_especialidadeWhereInput | tbl_especialidadeWhereInput[]
    OR?: tbl_especialidadeWhereInput[]
    NOT?: tbl_especialidadeWhereInput | tbl_especialidadeWhereInput[]
    id_especialidade?: IntFilter<"tbl_especialidade"> | number
    especialidade?: StringNullableFilter<"tbl_especialidade"> | string | null
    tbl_especialidade_clinica?: Tbl_especialidade_clinicaListRelationFilter
    tbl_especialidade_medico?: Tbl_especialidade_medicoListRelationFilter
  }

  export type tbl_especialidadeOrderByWithRelationInput = {
    id_especialidade?: SortOrder
    especialidade?: SortOrderInput | SortOrder
    tbl_especialidade_clinica?: tbl_especialidade_clinicaOrderByRelationAggregateInput
    tbl_especialidade_medico?: tbl_especialidade_medicoOrderByRelationAggregateInput
    _relevance?: tbl_especialidadeOrderByRelevanceInput
  }

  export type tbl_especialidadeWhereUniqueInput = Prisma.AtLeast<{
    id_especialidade?: number
    AND?: tbl_especialidadeWhereInput | tbl_especialidadeWhereInput[]
    OR?: tbl_especialidadeWhereInput[]
    NOT?: tbl_especialidadeWhereInput | tbl_especialidadeWhereInput[]
    especialidade?: StringNullableFilter<"tbl_especialidade"> | string | null
    tbl_especialidade_clinica?: Tbl_especialidade_clinicaListRelationFilter
    tbl_especialidade_medico?: Tbl_especialidade_medicoListRelationFilter
  }, "id_especialidade">

  export type tbl_especialidadeOrderByWithAggregationInput = {
    id_especialidade?: SortOrder
    especialidade?: SortOrderInput | SortOrder
    _count?: tbl_especialidadeCountOrderByAggregateInput
    _avg?: tbl_especialidadeAvgOrderByAggregateInput
    _max?: tbl_especialidadeMaxOrderByAggregateInput
    _min?: tbl_especialidadeMinOrderByAggregateInput
    _sum?: tbl_especialidadeSumOrderByAggregateInput
  }

  export type tbl_especialidadeScalarWhereWithAggregatesInput = {
    AND?: tbl_especialidadeScalarWhereWithAggregatesInput | tbl_especialidadeScalarWhereWithAggregatesInput[]
    OR?: tbl_especialidadeScalarWhereWithAggregatesInput[]
    NOT?: tbl_especialidadeScalarWhereWithAggregatesInput | tbl_especialidadeScalarWhereWithAggregatesInput[]
    id_especialidade?: IntWithAggregatesFilter<"tbl_especialidade"> | number
    especialidade?: StringNullableWithAggregatesFilter<"tbl_especialidade"> | string | null
  }

  export type tbl_especialidade_clinicaWhereInput = {
    AND?: tbl_especialidade_clinicaWhereInput | tbl_especialidade_clinicaWhereInput[]
    OR?: tbl_especialidade_clinicaWhereInput[]
    NOT?: tbl_especialidade_clinicaWhereInput | tbl_especialidade_clinicaWhereInput[]
    id?: IntFilter<"tbl_especialidade_clinica"> | number
    id_clinica?: IntNullableFilter<"tbl_especialidade_clinica"> | number | null
    id_especialidade?: IntNullableFilter<"tbl_especialidade_clinica"> | number | null
    tbl_clinica?: XOR<Tbl_clinicaNullableScalarRelationFilter, tbl_clinicaWhereInput> | null
    tbl_especialidade?: XOR<Tbl_especialidadeNullableScalarRelationFilter, tbl_especialidadeWhereInput> | null
  }

  export type tbl_especialidade_clinicaOrderByWithRelationInput = {
    id?: SortOrder
    id_clinica?: SortOrderInput | SortOrder
    id_especialidade?: SortOrderInput | SortOrder
    tbl_clinica?: tbl_clinicaOrderByWithRelationInput
    tbl_especialidade?: tbl_especialidadeOrderByWithRelationInput
  }

  export type tbl_especialidade_clinicaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_especialidade_clinicaWhereInput | tbl_especialidade_clinicaWhereInput[]
    OR?: tbl_especialidade_clinicaWhereInput[]
    NOT?: tbl_especialidade_clinicaWhereInput | tbl_especialidade_clinicaWhereInput[]
    id_clinica?: IntNullableFilter<"tbl_especialidade_clinica"> | number | null
    id_especialidade?: IntNullableFilter<"tbl_especialidade_clinica"> | number | null
    tbl_clinica?: XOR<Tbl_clinicaNullableScalarRelationFilter, tbl_clinicaWhereInput> | null
    tbl_especialidade?: XOR<Tbl_especialidadeNullableScalarRelationFilter, tbl_especialidadeWhereInput> | null
  }, "id">

  export type tbl_especialidade_clinicaOrderByWithAggregationInput = {
    id?: SortOrder
    id_clinica?: SortOrderInput | SortOrder
    id_especialidade?: SortOrderInput | SortOrder
    _count?: tbl_especialidade_clinicaCountOrderByAggregateInput
    _avg?: tbl_especialidade_clinicaAvgOrderByAggregateInput
    _max?: tbl_especialidade_clinicaMaxOrderByAggregateInput
    _min?: tbl_especialidade_clinicaMinOrderByAggregateInput
    _sum?: tbl_especialidade_clinicaSumOrderByAggregateInput
  }

  export type tbl_especialidade_clinicaScalarWhereWithAggregatesInput = {
    AND?: tbl_especialidade_clinicaScalarWhereWithAggregatesInput | tbl_especialidade_clinicaScalarWhereWithAggregatesInput[]
    OR?: tbl_especialidade_clinicaScalarWhereWithAggregatesInput[]
    NOT?: tbl_especialidade_clinicaScalarWhereWithAggregatesInput | tbl_especialidade_clinicaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_especialidade_clinica"> | number
    id_clinica?: IntNullableWithAggregatesFilter<"tbl_especialidade_clinica"> | number | null
    id_especialidade?: IntNullableWithAggregatesFilter<"tbl_especialidade_clinica"> | number | null
  }

  export type tbl_especialidade_medicoWhereInput = {
    AND?: tbl_especialidade_medicoWhereInput | tbl_especialidade_medicoWhereInput[]
    OR?: tbl_especialidade_medicoWhereInput[]
    NOT?: tbl_especialidade_medicoWhereInput | tbl_especialidade_medicoWhereInput[]
    id?: IntFilter<"tbl_especialidade_medico"> | number
    id_medico?: IntNullableFilter<"tbl_especialidade_medico"> | number | null
    id_especialidade?: IntNullableFilter<"tbl_especialidade_medico"> | number | null
    tbl_especialidade?: XOR<Tbl_especialidadeNullableScalarRelationFilter, tbl_especialidadeWhereInput> | null
    tbl_medico?: XOR<Tbl_medicoNullableScalarRelationFilter, tbl_medicoWhereInput> | null
  }

  export type tbl_especialidade_medicoOrderByWithRelationInput = {
    id?: SortOrder
    id_medico?: SortOrderInput | SortOrder
    id_especialidade?: SortOrderInput | SortOrder
    tbl_especialidade?: tbl_especialidadeOrderByWithRelationInput
    tbl_medico?: tbl_medicoOrderByWithRelationInput
  }

  export type tbl_especialidade_medicoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_especialidade_medicoWhereInput | tbl_especialidade_medicoWhereInput[]
    OR?: tbl_especialidade_medicoWhereInput[]
    NOT?: tbl_especialidade_medicoWhereInput | tbl_especialidade_medicoWhereInput[]
    id_medico?: IntNullableFilter<"tbl_especialidade_medico"> | number | null
    id_especialidade?: IntNullableFilter<"tbl_especialidade_medico"> | number | null
    tbl_especialidade?: XOR<Tbl_especialidadeNullableScalarRelationFilter, tbl_especialidadeWhereInput> | null
    tbl_medico?: XOR<Tbl_medicoNullableScalarRelationFilter, tbl_medicoWhereInput> | null
  }, "id">

  export type tbl_especialidade_medicoOrderByWithAggregationInput = {
    id?: SortOrder
    id_medico?: SortOrderInput | SortOrder
    id_especialidade?: SortOrderInput | SortOrder
    _count?: tbl_especialidade_medicoCountOrderByAggregateInput
    _avg?: tbl_especialidade_medicoAvgOrderByAggregateInput
    _max?: tbl_especialidade_medicoMaxOrderByAggregateInput
    _min?: tbl_especialidade_medicoMinOrderByAggregateInput
    _sum?: tbl_especialidade_medicoSumOrderByAggregateInput
  }

  export type tbl_especialidade_medicoScalarWhereWithAggregatesInput = {
    AND?: tbl_especialidade_medicoScalarWhereWithAggregatesInput | tbl_especialidade_medicoScalarWhereWithAggregatesInput[]
    OR?: tbl_especialidade_medicoScalarWhereWithAggregatesInput[]
    NOT?: tbl_especialidade_medicoScalarWhereWithAggregatesInput | tbl_especialidade_medicoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_especialidade_medico"> | number
    id_medico?: IntNullableWithAggregatesFilter<"tbl_especialidade_medico"> | number | null
    id_especialidade?: IntNullableWithAggregatesFilter<"tbl_especialidade_medico"> | number | null
  }

  export type tbl_medicoWhereInput = {
    AND?: tbl_medicoWhereInput | tbl_medicoWhereInput[]
    OR?: tbl_medicoWhereInput[]
    NOT?: tbl_medicoWhereInput | tbl_medicoWhereInput[]
    id_medico?: IntFilter<"tbl_medico"> | number
    nome?: StringFilter<"tbl_medico"> | string
    email?: StringFilter<"tbl_medico"> | string
    telefone?: StringFilter<"tbl_medico"> | string
    crm?: StringFilter<"tbl_medico"> | string
    cpf?: StringFilter<"tbl_medico"> | string
    foto?: StringFilter<"tbl_medico"> | string
    id_sexo?: IntNullableFilter<"tbl_medico"> | number | null
    id_user?: IntNullableFilter<"tbl_medico"> | number | null
    tbl_especialidade_medico?: Tbl_especialidade_medicoListRelationFilter
    tbl_sexo?: XOR<Tbl_sexoNullableScalarRelationFilter, tbl_sexoWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
  }

  export type tbl_medicoOrderByWithRelationInput = {
    id_medico?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    crm?: SortOrder
    cpf?: SortOrder
    foto?: SortOrder
    id_sexo?: SortOrderInput | SortOrder
    id_user?: SortOrderInput | SortOrder
    tbl_especialidade_medico?: tbl_especialidade_medicoOrderByRelationAggregateInput
    tbl_sexo?: tbl_sexoOrderByWithRelationInput
    tbl_user?: tbl_userOrderByWithRelationInput
    _relevance?: tbl_medicoOrderByRelevanceInput
  }

  export type tbl_medicoWhereUniqueInput = Prisma.AtLeast<{
    id_medico?: number
    AND?: tbl_medicoWhereInput | tbl_medicoWhereInput[]
    OR?: tbl_medicoWhereInput[]
    NOT?: tbl_medicoWhereInput | tbl_medicoWhereInput[]
    nome?: StringFilter<"tbl_medico"> | string
    email?: StringFilter<"tbl_medico"> | string
    telefone?: StringFilter<"tbl_medico"> | string
    crm?: StringFilter<"tbl_medico"> | string
    cpf?: StringFilter<"tbl_medico"> | string
    foto?: StringFilter<"tbl_medico"> | string
    id_sexo?: IntNullableFilter<"tbl_medico"> | number | null
    id_user?: IntNullableFilter<"tbl_medico"> | number | null
    tbl_especialidade_medico?: Tbl_especialidade_medicoListRelationFilter
    tbl_sexo?: XOR<Tbl_sexoNullableScalarRelationFilter, tbl_sexoWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
  }, "id_medico">

  export type tbl_medicoOrderByWithAggregationInput = {
    id_medico?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    crm?: SortOrder
    cpf?: SortOrder
    foto?: SortOrder
    id_sexo?: SortOrderInput | SortOrder
    id_user?: SortOrderInput | SortOrder
    _count?: tbl_medicoCountOrderByAggregateInput
    _avg?: tbl_medicoAvgOrderByAggregateInput
    _max?: tbl_medicoMaxOrderByAggregateInput
    _min?: tbl_medicoMinOrderByAggregateInput
    _sum?: tbl_medicoSumOrderByAggregateInput
  }

  export type tbl_medicoScalarWhereWithAggregatesInput = {
    AND?: tbl_medicoScalarWhereWithAggregatesInput | tbl_medicoScalarWhereWithAggregatesInput[]
    OR?: tbl_medicoScalarWhereWithAggregatesInput[]
    NOT?: tbl_medicoScalarWhereWithAggregatesInput | tbl_medicoScalarWhereWithAggregatesInput[]
    id_medico?: IntWithAggregatesFilter<"tbl_medico"> | number
    nome?: StringWithAggregatesFilter<"tbl_medico"> | string
    email?: StringWithAggregatesFilter<"tbl_medico"> | string
    telefone?: StringWithAggregatesFilter<"tbl_medico"> | string
    crm?: StringWithAggregatesFilter<"tbl_medico"> | string
    cpf?: StringWithAggregatesFilter<"tbl_medico"> | string
    foto?: StringWithAggregatesFilter<"tbl_medico"> | string
    id_sexo?: IntNullableWithAggregatesFilter<"tbl_medico"> | number | null
    id_user?: IntNullableWithAggregatesFilter<"tbl_medico"> | number | null
  }

  export type tbl_messagerWhereInput = {
    AND?: tbl_messagerWhereInput | tbl_messagerWhereInput[]
    OR?: tbl_messagerWhereInput[]
    NOT?: tbl_messagerWhereInput | tbl_messagerWhereInput[]
    id_mensagem?: IntFilter<"tbl_messager"> | number
    conteudo?: StringFilter<"tbl_messager"> | string
    id_tipo_mensagem?: IntNullableFilter<"tbl_messager"> | number | null
    id_status?: IntNullableFilter<"tbl_messager"> | number | null
    tbl_chat?: Tbl_chatListRelationFilter
    tbl_status_messager?: XOR<Tbl_status_messagerNullableScalarRelationFilter, tbl_status_messagerWhereInput> | null
    tbl_type_messager?: XOR<Tbl_type_messagerNullableScalarRelationFilter, tbl_type_messagerWhereInput> | null
  }

  export type tbl_messagerOrderByWithRelationInput = {
    id_mensagem?: SortOrder
    conteudo?: SortOrder
    id_tipo_mensagem?: SortOrderInput | SortOrder
    id_status?: SortOrderInput | SortOrder
    tbl_chat?: tbl_chatOrderByRelationAggregateInput
    tbl_status_messager?: tbl_status_messagerOrderByWithRelationInput
    tbl_type_messager?: tbl_type_messagerOrderByWithRelationInput
    _relevance?: tbl_messagerOrderByRelevanceInput
  }

  export type tbl_messagerWhereUniqueInput = Prisma.AtLeast<{
    id_mensagem?: number
    AND?: tbl_messagerWhereInput | tbl_messagerWhereInput[]
    OR?: tbl_messagerWhereInput[]
    NOT?: tbl_messagerWhereInput | tbl_messagerWhereInput[]
    conteudo?: StringFilter<"tbl_messager"> | string
    id_tipo_mensagem?: IntNullableFilter<"tbl_messager"> | number | null
    id_status?: IntNullableFilter<"tbl_messager"> | number | null
    tbl_chat?: Tbl_chatListRelationFilter
    tbl_status_messager?: XOR<Tbl_status_messagerNullableScalarRelationFilter, tbl_status_messagerWhereInput> | null
    tbl_type_messager?: XOR<Tbl_type_messagerNullableScalarRelationFilter, tbl_type_messagerWhereInput> | null
  }, "id_mensagem">

  export type tbl_messagerOrderByWithAggregationInput = {
    id_mensagem?: SortOrder
    conteudo?: SortOrder
    id_tipo_mensagem?: SortOrderInput | SortOrder
    id_status?: SortOrderInput | SortOrder
    _count?: tbl_messagerCountOrderByAggregateInput
    _avg?: tbl_messagerAvgOrderByAggregateInput
    _max?: tbl_messagerMaxOrderByAggregateInput
    _min?: tbl_messagerMinOrderByAggregateInput
    _sum?: tbl_messagerSumOrderByAggregateInput
  }

  export type tbl_messagerScalarWhereWithAggregatesInput = {
    AND?: tbl_messagerScalarWhereWithAggregatesInput | tbl_messagerScalarWhereWithAggregatesInput[]
    OR?: tbl_messagerScalarWhereWithAggregatesInput[]
    NOT?: tbl_messagerScalarWhereWithAggregatesInput | tbl_messagerScalarWhereWithAggregatesInput[]
    id_mensagem?: IntWithAggregatesFilter<"tbl_messager"> | number
    conteudo?: StringWithAggregatesFilter<"tbl_messager"> | string
    id_tipo_mensagem?: IntNullableWithAggregatesFilter<"tbl_messager"> | number | null
    id_status?: IntNullableWithAggregatesFilter<"tbl_messager"> | number | null
  }

  export type tbl_responsavelWhereInput = {
    AND?: tbl_responsavelWhereInput | tbl_responsavelWhereInput[]
    OR?: tbl_responsavelWhereInput[]
    NOT?: tbl_responsavelWhereInput | tbl_responsavelWhereInput[]
    id_responsavel?: IntFilter<"tbl_responsavel"> | number
    nome?: StringFilter<"tbl_responsavel"> | string
    data_nascimento?: DateTimeFilter<"tbl_responsavel"> | Date | string
    cpf?: StringFilter<"tbl_responsavel"> | string
    telefone?: StringFilter<"tbl_responsavel"> | string
    arquivo?: StringFilter<"tbl_responsavel"> | string
    cartao_medico?: StringFilter<"tbl_responsavel"> | string
    cep?: StringFilter<"tbl_responsavel"> | string
    id_sexo?: IntNullableFilter<"tbl_responsavel"> | number | null
    id_user?: IntNullableFilter<"tbl_responsavel"> | number | null
    id_cep?: IntNullableFilter<"tbl_responsavel"> | number | null
    tbl_cep?: XOR<Tbl_cepNullableScalarRelationFilter, tbl_cepWhereInput> | null
    tbl_sexo?: XOR<Tbl_sexoNullableScalarRelationFilter, tbl_sexoWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
    tbl_responsavel_bebe?: Tbl_responsavel_bebeListRelationFilter
  }

  export type tbl_responsavelOrderByWithRelationInput = {
    id_responsavel?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    telefone?: SortOrder
    arquivo?: SortOrder
    cartao_medico?: SortOrder
    cep?: SortOrder
    id_sexo?: SortOrderInput | SortOrder
    id_user?: SortOrderInput | SortOrder
    id_cep?: SortOrderInput | SortOrder
    tbl_cep?: tbl_cepOrderByWithRelationInput
    tbl_sexo?: tbl_sexoOrderByWithRelationInput
    tbl_user?: tbl_userOrderByWithRelationInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeOrderByRelationAggregateInput
    _relevance?: tbl_responsavelOrderByRelevanceInput
  }

  export type tbl_responsavelWhereUniqueInput = Prisma.AtLeast<{
    id_responsavel?: number
    AND?: tbl_responsavelWhereInput | tbl_responsavelWhereInput[]
    OR?: tbl_responsavelWhereInput[]
    NOT?: tbl_responsavelWhereInput | tbl_responsavelWhereInput[]
    nome?: StringFilter<"tbl_responsavel"> | string
    data_nascimento?: DateTimeFilter<"tbl_responsavel"> | Date | string
    cpf?: StringFilter<"tbl_responsavel"> | string
    telefone?: StringFilter<"tbl_responsavel"> | string
    arquivo?: StringFilter<"tbl_responsavel"> | string
    cartao_medico?: StringFilter<"tbl_responsavel"> | string
    cep?: StringFilter<"tbl_responsavel"> | string
    id_sexo?: IntNullableFilter<"tbl_responsavel"> | number | null
    id_user?: IntNullableFilter<"tbl_responsavel"> | number | null
    id_cep?: IntNullableFilter<"tbl_responsavel"> | number | null
    tbl_cep?: XOR<Tbl_cepNullableScalarRelationFilter, tbl_cepWhereInput> | null
    tbl_sexo?: XOR<Tbl_sexoNullableScalarRelationFilter, tbl_sexoWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
    tbl_responsavel_bebe?: Tbl_responsavel_bebeListRelationFilter
  }, "id_responsavel">

  export type tbl_responsavelOrderByWithAggregationInput = {
    id_responsavel?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    telefone?: SortOrder
    arquivo?: SortOrder
    cartao_medico?: SortOrder
    cep?: SortOrder
    id_sexo?: SortOrderInput | SortOrder
    id_user?: SortOrderInput | SortOrder
    id_cep?: SortOrderInput | SortOrder
    _count?: tbl_responsavelCountOrderByAggregateInput
    _avg?: tbl_responsavelAvgOrderByAggregateInput
    _max?: tbl_responsavelMaxOrderByAggregateInput
    _min?: tbl_responsavelMinOrderByAggregateInput
    _sum?: tbl_responsavelSumOrderByAggregateInput
  }

  export type tbl_responsavelScalarWhereWithAggregatesInput = {
    AND?: tbl_responsavelScalarWhereWithAggregatesInput | tbl_responsavelScalarWhereWithAggregatesInput[]
    OR?: tbl_responsavelScalarWhereWithAggregatesInput[]
    NOT?: tbl_responsavelScalarWhereWithAggregatesInput | tbl_responsavelScalarWhereWithAggregatesInput[]
    id_responsavel?: IntWithAggregatesFilter<"tbl_responsavel"> | number
    nome?: StringWithAggregatesFilter<"tbl_responsavel"> | string
    data_nascimento?: DateTimeWithAggregatesFilter<"tbl_responsavel"> | Date | string
    cpf?: StringWithAggregatesFilter<"tbl_responsavel"> | string
    telefone?: StringWithAggregatesFilter<"tbl_responsavel"> | string
    arquivo?: StringWithAggregatesFilter<"tbl_responsavel"> | string
    cartao_medico?: StringWithAggregatesFilter<"tbl_responsavel"> | string
    cep?: StringWithAggregatesFilter<"tbl_responsavel"> | string
    id_sexo?: IntNullableWithAggregatesFilter<"tbl_responsavel"> | number | null
    id_user?: IntNullableWithAggregatesFilter<"tbl_responsavel"> | number | null
    id_cep?: IntNullableWithAggregatesFilter<"tbl_responsavel"> | number | null
  }

  export type tbl_responsavel_bebeWhereInput = {
    AND?: tbl_responsavel_bebeWhereInput | tbl_responsavel_bebeWhereInput[]
    OR?: tbl_responsavel_bebeWhereInput[]
    NOT?: tbl_responsavel_bebeWhereInput | tbl_responsavel_bebeWhereInput[]
    id_bebe_responsavel?: IntFilter<"tbl_responsavel_bebe"> | number
    id_bebe?: IntNullableFilter<"tbl_responsavel_bebe"> | number | null
    id_responsavel?: IntNullableFilter<"tbl_responsavel_bebe"> | number | null
    tbl_bebe?: XOR<Tbl_bebeNullableScalarRelationFilter, tbl_bebeWhereInput> | null
    tbl_responsavel?: XOR<Tbl_responsavelNullableScalarRelationFilter, tbl_responsavelWhereInput> | null
  }

  export type tbl_responsavel_bebeOrderByWithRelationInput = {
    id_bebe_responsavel?: SortOrder
    id_bebe?: SortOrderInput | SortOrder
    id_responsavel?: SortOrderInput | SortOrder
    tbl_bebe?: tbl_bebeOrderByWithRelationInput
    tbl_responsavel?: tbl_responsavelOrderByWithRelationInput
  }

  export type tbl_responsavel_bebeWhereUniqueInput = Prisma.AtLeast<{
    id_bebe_responsavel?: number
    AND?: tbl_responsavel_bebeWhereInput | tbl_responsavel_bebeWhereInput[]
    OR?: tbl_responsavel_bebeWhereInput[]
    NOT?: tbl_responsavel_bebeWhereInput | tbl_responsavel_bebeWhereInput[]
    id_bebe?: IntNullableFilter<"tbl_responsavel_bebe"> | number | null
    id_responsavel?: IntNullableFilter<"tbl_responsavel_bebe"> | number | null
    tbl_bebe?: XOR<Tbl_bebeNullableScalarRelationFilter, tbl_bebeWhereInput> | null
    tbl_responsavel?: XOR<Tbl_responsavelNullableScalarRelationFilter, tbl_responsavelWhereInput> | null
  }, "id_bebe_responsavel">

  export type tbl_responsavel_bebeOrderByWithAggregationInput = {
    id_bebe_responsavel?: SortOrder
    id_bebe?: SortOrderInput | SortOrder
    id_responsavel?: SortOrderInput | SortOrder
    _count?: tbl_responsavel_bebeCountOrderByAggregateInput
    _avg?: tbl_responsavel_bebeAvgOrderByAggregateInput
    _max?: tbl_responsavel_bebeMaxOrderByAggregateInput
    _min?: tbl_responsavel_bebeMinOrderByAggregateInput
    _sum?: tbl_responsavel_bebeSumOrderByAggregateInput
  }

  export type tbl_responsavel_bebeScalarWhereWithAggregatesInput = {
    AND?: tbl_responsavel_bebeScalarWhereWithAggregatesInput | tbl_responsavel_bebeScalarWhereWithAggregatesInput[]
    OR?: tbl_responsavel_bebeScalarWhereWithAggregatesInput[]
    NOT?: tbl_responsavel_bebeScalarWhereWithAggregatesInput | tbl_responsavel_bebeScalarWhereWithAggregatesInput[]
    id_bebe_responsavel?: IntWithAggregatesFilter<"tbl_responsavel_bebe"> | number
    id_bebe?: IntNullableWithAggregatesFilter<"tbl_responsavel_bebe"> | number | null
    id_responsavel?: IntNullableWithAggregatesFilter<"tbl_responsavel_bebe"> | number | null
  }

  export type tbl_rotinaWhereInput = {
    AND?: tbl_rotinaWhereInput | tbl_rotinaWhereInput[]
    OR?: tbl_rotinaWhereInput[]
    NOT?: tbl_rotinaWhereInput | tbl_rotinaWhereInput[]
    id_base?: IntFilter<"tbl_rotina"> | number
    titulo?: StringFilter<"tbl_rotina"> | string
    cor?: StringFilter<"tbl_rotina"> | string
    data_rotina?: DateTimeFilter<"tbl_rotina"> | Date | string
    hora?: DateTimeFilter<"tbl_rotina"> | Date | string
    descricao?: StringFilter<"tbl_rotina"> | string
    id_user?: IntNullableFilter<"tbl_rotina"> | number | null
    id_rotina_base?: IntNullableFilter<"tbl_rotina"> | number | null
    tbl_rotina_base?: XOR<Tbl_rotina_baseNullableScalarRelationFilter, tbl_rotina_baseWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
  }

  export type tbl_rotinaOrderByWithRelationInput = {
    id_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
    id_user?: SortOrderInput | SortOrder
    id_rotina_base?: SortOrderInput | SortOrder
    tbl_rotina_base?: tbl_rotina_baseOrderByWithRelationInput
    tbl_user?: tbl_userOrderByWithRelationInput
    _relevance?: tbl_rotinaOrderByRelevanceInput
  }

  export type tbl_rotinaWhereUniqueInput = Prisma.AtLeast<{
    id_base?: number
    AND?: tbl_rotinaWhereInput | tbl_rotinaWhereInput[]
    OR?: tbl_rotinaWhereInput[]
    NOT?: tbl_rotinaWhereInput | tbl_rotinaWhereInput[]
    titulo?: StringFilter<"tbl_rotina"> | string
    cor?: StringFilter<"tbl_rotina"> | string
    data_rotina?: DateTimeFilter<"tbl_rotina"> | Date | string
    hora?: DateTimeFilter<"tbl_rotina"> | Date | string
    descricao?: StringFilter<"tbl_rotina"> | string
    id_user?: IntNullableFilter<"tbl_rotina"> | number | null
    id_rotina_base?: IntNullableFilter<"tbl_rotina"> | number | null
    tbl_rotina_base?: XOR<Tbl_rotina_baseNullableScalarRelationFilter, tbl_rotina_baseWhereInput> | null
    tbl_user?: XOR<Tbl_userNullableScalarRelationFilter, tbl_userWhereInput> | null
  }, "id_base">

  export type tbl_rotinaOrderByWithAggregationInput = {
    id_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
    id_user?: SortOrderInput | SortOrder
    id_rotina_base?: SortOrderInput | SortOrder
    _count?: tbl_rotinaCountOrderByAggregateInput
    _avg?: tbl_rotinaAvgOrderByAggregateInput
    _max?: tbl_rotinaMaxOrderByAggregateInput
    _min?: tbl_rotinaMinOrderByAggregateInput
    _sum?: tbl_rotinaSumOrderByAggregateInput
  }

  export type tbl_rotinaScalarWhereWithAggregatesInput = {
    AND?: tbl_rotinaScalarWhereWithAggregatesInput | tbl_rotinaScalarWhereWithAggregatesInput[]
    OR?: tbl_rotinaScalarWhereWithAggregatesInput[]
    NOT?: tbl_rotinaScalarWhereWithAggregatesInput | tbl_rotinaScalarWhereWithAggregatesInput[]
    id_base?: IntWithAggregatesFilter<"tbl_rotina"> | number
    titulo?: StringWithAggregatesFilter<"tbl_rotina"> | string
    cor?: StringWithAggregatesFilter<"tbl_rotina"> | string
    data_rotina?: DateTimeWithAggregatesFilter<"tbl_rotina"> | Date | string
    hora?: DateTimeWithAggregatesFilter<"tbl_rotina"> | Date | string
    descricao?: StringWithAggregatesFilter<"tbl_rotina"> | string
    id_user?: IntNullableWithAggregatesFilter<"tbl_rotina"> | number | null
    id_rotina_base?: IntNullableWithAggregatesFilter<"tbl_rotina"> | number | null
  }

  export type tbl_rotina_baseWhereInput = {
    AND?: tbl_rotina_baseWhereInput | tbl_rotina_baseWhereInput[]
    OR?: tbl_rotina_baseWhereInput[]
    NOT?: tbl_rotina_baseWhereInput | tbl_rotina_baseWhereInput[]
    id_rotina_base?: IntFilter<"tbl_rotina_base"> | number
    titulo?: StringFilter<"tbl_rotina_base"> | string
    cor?: StringFilter<"tbl_rotina_base"> | string
    data_rotina?: DateTimeFilter<"tbl_rotina_base"> | Date | string
    hora?: DateTimeFilter<"tbl_rotina_base"> | Date | string
    descricao?: StringFilter<"tbl_rotina_base"> | string
    tbl_rotina?: Tbl_rotinaListRelationFilter
  }

  export type tbl_rotina_baseOrderByWithRelationInput = {
    id_rotina_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
    tbl_rotina?: tbl_rotinaOrderByRelationAggregateInput
    _relevance?: tbl_rotina_baseOrderByRelevanceInput
  }

  export type tbl_rotina_baseWhereUniqueInput = Prisma.AtLeast<{
    id_rotina_base?: number
    AND?: tbl_rotina_baseWhereInput | tbl_rotina_baseWhereInput[]
    OR?: tbl_rotina_baseWhereInput[]
    NOT?: tbl_rotina_baseWhereInput | tbl_rotina_baseWhereInput[]
    titulo?: StringFilter<"tbl_rotina_base"> | string
    cor?: StringFilter<"tbl_rotina_base"> | string
    data_rotina?: DateTimeFilter<"tbl_rotina_base"> | Date | string
    hora?: DateTimeFilter<"tbl_rotina_base"> | Date | string
    descricao?: StringFilter<"tbl_rotina_base"> | string
    tbl_rotina?: Tbl_rotinaListRelationFilter
  }, "id_rotina_base">

  export type tbl_rotina_baseOrderByWithAggregationInput = {
    id_rotina_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
    _count?: tbl_rotina_baseCountOrderByAggregateInput
    _avg?: tbl_rotina_baseAvgOrderByAggregateInput
    _max?: tbl_rotina_baseMaxOrderByAggregateInput
    _min?: tbl_rotina_baseMinOrderByAggregateInput
    _sum?: tbl_rotina_baseSumOrderByAggregateInput
  }

  export type tbl_rotina_baseScalarWhereWithAggregatesInput = {
    AND?: tbl_rotina_baseScalarWhereWithAggregatesInput | tbl_rotina_baseScalarWhereWithAggregatesInput[]
    OR?: tbl_rotina_baseScalarWhereWithAggregatesInput[]
    NOT?: tbl_rotina_baseScalarWhereWithAggregatesInput | tbl_rotina_baseScalarWhereWithAggregatesInput[]
    id_rotina_base?: IntWithAggregatesFilter<"tbl_rotina_base"> | number
    titulo?: StringWithAggregatesFilter<"tbl_rotina_base"> | string
    cor?: StringWithAggregatesFilter<"tbl_rotina_base"> | string
    data_rotina?: DateTimeWithAggregatesFilter<"tbl_rotina_base"> | Date | string
    hora?: DateTimeWithAggregatesFilter<"tbl_rotina_base"> | Date | string
    descricao?: StringWithAggregatesFilter<"tbl_rotina_base"> | string
  }

  export type tbl_sangueWhereInput = {
    AND?: tbl_sangueWhereInput | tbl_sangueWhereInput[]
    OR?: tbl_sangueWhereInput[]
    NOT?: tbl_sangueWhereInput | tbl_sangueWhereInput[]
    id_sangue?: IntFilter<"tbl_sangue"> | number
    tipo_sanguineo?: StringFilter<"tbl_sangue"> | string
    tbl_bebe?: Tbl_bebeListRelationFilter
  }

  export type tbl_sangueOrderByWithRelationInput = {
    id_sangue?: SortOrder
    tipo_sanguineo?: SortOrder
    tbl_bebe?: tbl_bebeOrderByRelationAggregateInput
    _relevance?: tbl_sangueOrderByRelevanceInput
  }

  export type tbl_sangueWhereUniqueInput = Prisma.AtLeast<{
    id_sangue?: number
    AND?: tbl_sangueWhereInput | tbl_sangueWhereInput[]
    OR?: tbl_sangueWhereInput[]
    NOT?: tbl_sangueWhereInput | tbl_sangueWhereInput[]
    tipo_sanguineo?: StringFilter<"tbl_sangue"> | string
    tbl_bebe?: Tbl_bebeListRelationFilter
  }, "id_sangue">

  export type tbl_sangueOrderByWithAggregationInput = {
    id_sangue?: SortOrder
    tipo_sanguineo?: SortOrder
    _count?: tbl_sangueCountOrderByAggregateInput
    _avg?: tbl_sangueAvgOrderByAggregateInput
    _max?: tbl_sangueMaxOrderByAggregateInput
    _min?: tbl_sangueMinOrderByAggregateInput
    _sum?: tbl_sangueSumOrderByAggregateInput
  }

  export type tbl_sangueScalarWhereWithAggregatesInput = {
    AND?: tbl_sangueScalarWhereWithAggregatesInput | tbl_sangueScalarWhereWithAggregatesInput[]
    OR?: tbl_sangueScalarWhereWithAggregatesInput[]
    NOT?: tbl_sangueScalarWhereWithAggregatesInput | tbl_sangueScalarWhereWithAggregatesInput[]
    id_sangue?: IntWithAggregatesFilter<"tbl_sangue"> | number
    tipo_sanguineo?: StringWithAggregatesFilter<"tbl_sangue"> | string
  }

  export type tbl_sexoWhereInput = {
    AND?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    OR?: tbl_sexoWhereInput[]
    NOT?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    id_sexo?: IntFilter<"tbl_sexo"> | number
    sexo?: StringFilter<"tbl_sexo"> | string
    tbl_bebe?: Tbl_bebeListRelationFilter
    tbl_medico?: Tbl_medicoListRelationFilter
    tbl_responsavel?: Tbl_responsavelListRelationFilter
  }

  export type tbl_sexoOrderByWithRelationInput = {
    id_sexo?: SortOrder
    sexo?: SortOrder
    tbl_bebe?: tbl_bebeOrderByRelationAggregateInput
    tbl_medico?: tbl_medicoOrderByRelationAggregateInput
    tbl_responsavel?: tbl_responsavelOrderByRelationAggregateInput
    _relevance?: tbl_sexoOrderByRelevanceInput
  }

  export type tbl_sexoWhereUniqueInput = Prisma.AtLeast<{
    id_sexo?: number
    AND?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    OR?: tbl_sexoWhereInput[]
    NOT?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    sexo?: StringFilter<"tbl_sexo"> | string
    tbl_bebe?: Tbl_bebeListRelationFilter
    tbl_medico?: Tbl_medicoListRelationFilter
    tbl_responsavel?: Tbl_responsavelListRelationFilter
  }, "id_sexo">

  export type tbl_sexoOrderByWithAggregationInput = {
    id_sexo?: SortOrder
    sexo?: SortOrder
    _count?: tbl_sexoCountOrderByAggregateInput
    _avg?: tbl_sexoAvgOrderByAggregateInput
    _max?: tbl_sexoMaxOrderByAggregateInput
    _min?: tbl_sexoMinOrderByAggregateInput
    _sum?: tbl_sexoSumOrderByAggregateInput
  }

  export type tbl_sexoScalarWhereWithAggregatesInput = {
    AND?: tbl_sexoScalarWhereWithAggregatesInput | tbl_sexoScalarWhereWithAggregatesInput[]
    OR?: tbl_sexoScalarWhereWithAggregatesInput[]
    NOT?: tbl_sexoScalarWhereWithAggregatesInput | tbl_sexoScalarWhereWithAggregatesInput[]
    id_sexo?: IntWithAggregatesFilter<"tbl_sexo"> | number
    sexo?: StringWithAggregatesFilter<"tbl_sexo"> | string
  }

  export type tbl_status_messagerWhereInput = {
    AND?: tbl_status_messagerWhereInput | tbl_status_messagerWhereInput[]
    OR?: tbl_status_messagerWhereInput[]
    NOT?: tbl_status_messagerWhereInput | tbl_status_messagerWhereInput[]
    id_status?: IntFilter<"tbl_status_messager"> | number
    status_messagem?: StringNullableFilter<"tbl_status_messager"> | string | null
    tbl_messager?: Tbl_messagerListRelationFilter
  }

  export type tbl_status_messagerOrderByWithRelationInput = {
    id_status?: SortOrder
    status_messagem?: SortOrderInput | SortOrder
    tbl_messager?: tbl_messagerOrderByRelationAggregateInput
    _relevance?: tbl_status_messagerOrderByRelevanceInput
  }

  export type tbl_status_messagerWhereUniqueInput = Prisma.AtLeast<{
    id_status?: number
    AND?: tbl_status_messagerWhereInput | tbl_status_messagerWhereInput[]
    OR?: tbl_status_messagerWhereInput[]
    NOT?: tbl_status_messagerWhereInput | tbl_status_messagerWhereInput[]
    status_messagem?: StringNullableFilter<"tbl_status_messager"> | string | null
    tbl_messager?: Tbl_messagerListRelationFilter
  }, "id_status">

  export type tbl_status_messagerOrderByWithAggregationInput = {
    id_status?: SortOrder
    status_messagem?: SortOrderInput | SortOrder
    _count?: tbl_status_messagerCountOrderByAggregateInput
    _avg?: tbl_status_messagerAvgOrderByAggregateInput
    _max?: tbl_status_messagerMaxOrderByAggregateInput
    _min?: tbl_status_messagerMinOrderByAggregateInput
    _sum?: tbl_status_messagerSumOrderByAggregateInput
  }

  export type tbl_status_messagerScalarWhereWithAggregatesInput = {
    AND?: tbl_status_messagerScalarWhereWithAggregatesInput | tbl_status_messagerScalarWhereWithAggregatesInput[]
    OR?: tbl_status_messagerScalarWhereWithAggregatesInput[]
    NOT?: tbl_status_messagerScalarWhereWithAggregatesInput | tbl_status_messagerScalarWhereWithAggregatesInput[]
    id_status?: IntWithAggregatesFilter<"tbl_status_messager"> | number
    status_messagem?: StringNullableWithAggregatesFilter<"tbl_status_messager"> | string | null
  }

  export type tbl_type_messagerWhereInput = {
    AND?: tbl_type_messagerWhereInput | tbl_type_messagerWhereInput[]
    OR?: tbl_type_messagerWhereInput[]
    NOT?: tbl_type_messagerWhereInput | tbl_type_messagerWhereInput[]
    id_tipo_mensagem?: IntFilter<"tbl_type_messager"> | number
    tipo_mensagem?: StringNullableFilter<"tbl_type_messager"> | string | null
    tbl_messager?: Tbl_messagerListRelationFilter
  }

  export type tbl_type_messagerOrderByWithRelationInput = {
    id_tipo_mensagem?: SortOrder
    tipo_mensagem?: SortOrderInput | SortOrder
    tbl_messager?: tbl_messagerOrderByRelationAggregateInput
    _relevance?: tbl_type_messagerOrderByRelevanceInput
  }

  export type tbl_type_messagerWhereUniqueInput = Prisma.AtLeast<{
    id_tipo_mensagem?: number
    AND?: tbl_type_messagerWhereInput | tbl_type_messagerWhereInput[]
    OR?: tbl_type_messagerWhereInput[]
    NOT?: tbl_type_messagerWhereInput | tbl_type_messagerWhereInput[]
    tipo_mensagem?: StringNullableFilter<"tbl_type_messager"> | string | null
    tbl_messager?: Tbl_messagerListRelationFilter
  }, "id_tipo_mensagem">

  export type tbl_type_messagerOrderByWithAggregationInput = {
    id_tipo_mensagem?: SortOrder
    tipo_mensagem?: SortOrderInput | SortOrder
    _count?: tbl_type_messagerCountOrderByAggregateInput
    _avg?: tbl_type_messagerAvgOrderByAggregateInput
    _max?: tbl_type_messagerMaxOrderByAggregateInput
    _min?: tbl_type_messagerMinOrderByAggregateInput
    _sum?: tbl_type_messagerSumOrderByAggregateInput
  }

  export type tbl_type_messagerScalarWhereWithAggregatesInput = {
    AND?: tbl_type_messagerScalarWhereWithAggregatesInput | tbl_type_messagerScalarWhereWithAggregatesInput[]
    OR?: tbl_type_messagerScalarWhereWithAggregatesInput[]
    NOT?: tbl_type_messagerScalarWhereWithAggregatesInput | tbl_type_messagerScalarWhereWithAggregatesInput[]
    id_tipo_mensagem?: IntWithAggregatesFilter<"tbl_type_messager"> | number
    tipo_mensagem?: StringNullableWithAggregatesFilter<"tbl_type_messager"> | string | null
  }

  export type tbl_type_userWhereInput = {
    AND?: tbl_type_userWhereInput | tbl_type_userWhereInput[]
    OR?: tbl_type_userWhereInput[]
    NOT?: tbl_type_userWhereInput | tbl_type_userWhereInput[]
    id_tipo?: IntFilter<"tbl_type_user"> | number
    tipo?: StringNullableFilter<"tbl_type_user"> | string | null
    tbl_user?: Tbl_userListRelationFilter
  }

  export type tbl_type_userOrderByWithRelationInput = {
    id_tipo?: SortOrder
    tipo?: SortOrderInput | SortOrder
    tbl_user?: tbl_userOrderByRelationAggregateInput
    _relevance?: tbl_type_userOrderByRelevanceInput
  }

  export type tbl_type_userWhereUniqueInput = Prisma.AtLeast<{
    id_tipo?: number
    AND?: tbl_type_userWhereInput | tbl_type_userWhereInput[]
    OR?: tbl_type_userWhereInput[]
    NOT?: tbl_type_userWhereInput | tbl_type_userWhereInput[]
    tipo?: StringNullableFilter<"tbl_type_user"> | string | null
    tbl_user?: Tbl_userListRelationFilter
  }, "id_tipo">

  export type tbl_type_userOrderByWithAggregationInput = {
    id_tipo?: SortOrder
    tipo?: SortOrderInput | SortOrder
    _count?: tbl_type_userCountOrderByAggregateInput
    _avg?: tbl_type_userAvgOrderByAggregateInput
    _max?: tbl_type_userMaxOrderByAggregateInput
    _min?: tbl_type_userMinOrderByAggregateInput
    _sum?: tbl_type_userSumOrderByAggregateInput
  }

  export type tbl_type_userScalarWhereWithAggregatesInput = {
    AND?: tbl_type_userScalarWhereWithAggregatesInput | tbl_type_userScalarWhereWithAggregatesInput[]
    OR?: tbl_type_userScalarWhereWithAggregatesInput[]
    NOT?: tbl_type_userScalarWhereWithAggregatesInput | tbl_type_userScalarWhereWithAggregatesInput[]
    id_tipo?: IntWithAggregatesFilter<"tbl_type_user"> | number
    tipo?: StringNullableWithAggregatesFilter<"tbl_type_user"> | string | null
  }

  export type tbl_userWhereInput = {
    AND?: tbl_userWhereInput | tbl_userWhereInput[]
    OR?: tbl_userWhereInput[]
    NOT?: tbl_userWhereInput | tbl_userWhereInput[]
    id_user?: IntFilter<"tbl_user"> | number
    email?: StringFilter<"tbl_user"> | string
    senha?: StringFilter<"tbl_user"> | string
    id_tipo?: IntNullableFilter<"tbl_user"> | number | null
    tbl_chat?: Tbl_chatListRelationFilter
    tbl_clinica?: Tbl_clinicaListRelationFilter
    tbl_medico?: Tbl_medicoListRelationFilter
    tbl_responsavel?: Tbl_responsavelListRelationFilter
    tbl_rotina?: Tbl_rotinaListRelationFilter
    tbl_type_user?: XOR<Tbl_type_userNullableScalarRelationFilter, tbl_type_userWhereInput> | null
  }

  export type tbl_userOrderByWithRelationInput = {
    id_user?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    id_tipo?: SortOrderInput | SortOrder
    tbl_chat?: tbl_chatOrderByRelationAggregateInput
    tbl_clinica?: tbl_clinicaOrderByRelationAggregateInput
    tbl_medico?: tbl_medicoOrderByRelationAggregateInput
    tbl_responsavel?: tbl_responsavelOrderByRelationAggregateInput
    tbl_rotina?: tbl_rotinaOrderByRelationAggregateInput
    tbl_type_user?: tbl_type_userOrderByWithRelationInput
    _relevance?: tbl_userOrderByRelevanceInput
  }

  export type tbl_userWhereUniqueInput = Prisma.AtLeast<{
    id_user?: number
    AND?: tbl_userWhereInput | tbl_userWhereInput[]
    OR?: tbl_userWhereInput[]
    NOT?: tbl_userWhereInput | tbl_userWhereInput[]
    email?: StringFilter<"tbl_user"> | string
    senha?: StringFilter<"tbl_user"> | string
    id_tipo?: IntNullableFilter<"tbl_user"> | number | null
    tbl_chat?: Tbl_chatListRelationFilter
    tbl_clinica?: Tbl_clinicaListRelationFilter
    tbl_medico?: Tbl_medicoListRelationFilter
    tbl_responsavel?: Tbl_responsavelListRelationFilter
    tbl_rotina?: Tbl_rotinaListRelationFilter
    tbl_type_user?: XOR<Tbl_type_userNullableScalarRelationFilter, tbl_type_userWhereInput> | null
  }, "id_user">

  export type tbl_userOrderByWithAggregationInput = {
    id_user?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    id_tipo?: SortOrderInput | SortOrder
    _count?: tbl_userCountOrderByAggregateInput
    _avg?: tbl_userAvgOrderByAggregateInput
    _max?: tbl_userMaxOrderByAggregateInput
    _min?: tbl_userMinOrderByAggregateInput
    _sum?: tbl_userSumOrderByAggregateInput
  }

  export type tbl_userScalarWhereWithAggregatesInput = {
    AND?: tbl_userScalarWhereWithAggregatesInput | tbl_userScalarWhereWithAggregatesInput[]
    OR?: tbl_userScalarWhereWithAggregatesInput[]
    NOT?: tbl_userScalarWhereWithAggregatesInput | tbl_userScalarWhereWithAggregatesInput[]
    id_user?: IntWithAggregatesFilter<"tbl_user"> | number
    email?: StringWithAggregatesFilter<"tbl_user"> | string
    senha?: StringWithAggregatesFilter<"tbl_user"> | string
    id_tipo?: IntNullableWithAggregatesFilter<"tbl_user"> | number | null
  }

  export type tbl_bebeCreateInput = {
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_bebeInput
    tbl_sangue?: tbl_sangueCreateNestedOneWithoutTbl_bebeInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_bebeInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeCreateNestedManyWithoutTbl_bebeInput
  }

  export type tbl_bebeUncheckedCreateInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_sexo?: number | null
    id_cep?: number | null
    id_sangue?: number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_bebeInput
  }

  export type tbl_bebeUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_bebeNestedInput
    tbl_sangue?: tbl_sangueUpdateOneWithoutTbl_bebeNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_bebeNestedInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeUpdateManyWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeUncheckedUpdateInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    id_sangue?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeCreateManyInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_sexo?: number | null
    id_cep?: number | null
    id_sangue?: number | null
  }

  export type tbl_bebeUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_bebeUncheckedUpdateManyInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    id_sangue?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_cepCreateInput = {
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
    tbl_bebe?: tbl_bebeCreateNestedManyWithoutTbl_cepInput
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_cepInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_cepInput
  }

  export type tbl_cepUncheckedCreateInput = {
    id_cep?: number
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
    tbl_bebe?: tbl_bebeUncheckedCreateNestedManyWithoutTbl_cepInput
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_cepInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_cepInput
  }

  export type tbl_cepUpdateInput = {
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_bebe?: tbl_bebeUpdateManyWithoutTbl_cepNestedInput
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_cepNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_cepNestedInput
  }

  export type tbl_cepUncheckedUpdateInput = {
    id_cep?: IntFieldUpdateOperationsInput | number
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_bebe?: tbl_bebeUncheckedUpdateManyWithoutTbl_cepNestedInput
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_cepNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_cepNestedInput
  }

  export type tbl_cepCreateManyInput = {
    id_cep?: number
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
  }

  export type tbl_cepUpdateManyMutationInput = {
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_cepUncheckedUpdateManyInput = {
    id_cep?: IntFieldUpdateOperationsInput | number
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_chatCreateInput = {
    tbl_messager?: tbl_messagerCreateNestedOneWithoutTbl_chatInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_chatInput
  }

  export type tbl_chatUncheckedCreateInput = {
    id_chat?: number
    id_mensagem?: number | null
    id_user?: number | null
  }

  export type tbl_chatUpdateInput = {
    tbl_messager?: tbl_messagerUpdateOneWithoutTbl_chatNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_chatNestedInput
  }

  export type tbl_chatUncheckedUpdateInput = {
    id_chat?: IntFieldUpdateOperationsInput | number
    id_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_chatCreateManyInput = {
    id_chat?: number
    id_mensagem?: number | null
    id_user?: number | null
  }

  export type tbl_chatUpdateManyMutationInput = {

  }

  export type tbl_chatUncheckedUpdateManyInput = {
    id_chat?: IntFieldUpdateOperationsInput | number
    id_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_clinicaCreateInput = {
    nome: string
    cnpj: string
    telefone: string
    email: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_clinicaInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_clinicaInput
    tbl_especialidade_clinica?: tbl_especialidade_clinicaCreateNestedManyWithoutTbl_clinicaInput
  }

  export type tbl_clinicaUncheckedCreateInput = {
    id_clinica?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    id_cep?: number | null
    id_user?: number | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedCreateNestedManyWithoutTbl_clinicaInput
  }

  export type tbl_clinicaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_clinicaNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_clinicaNestedInput
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUpdateManyWithoutTbl_clinicaNestedInput
  }

  export type tbl_clinicaUncheckedUpdateInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_clinicaNestedInput
  }

  export type tbl_clinicaCreateManyInput = {
    id_clinica?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    id_cep?: number | null
    id_user?: number | null
  }

  export type tbl_clinicaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_clinicaUncheckedUpdateManyInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidadeCreateInput = {
    especialidade?: string | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaCreateNestedManyWithoutTbl_especialidadeInput
    tbl_especialidade_medico?: tbl_especialidade_medicoCreateNestedManyWithoutTbl_especialidadeInput
  }

  export type tbl_especialidadeUncheckedCreateInput = {
    id_especialidade?: number
    especialidade?: string | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedCreateNestedManyWithoutTbl_especialidadeInput
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedCreateNestedManyWithoutTbl_especialidadeInput
  }

  export type tbl_especialidadeUpdateInput = {
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUpdateManyWithoutTbl_especialidadeNestedInput
    tbl_especialidade_medico?: tbl_especialidade_medicoUpdateManyWithoutTbl_especialidadeNestedInput
  }

  export type tbl_especialidadeUncheckedUpdateInput = {
    id_especialidade?: IntFieldUpdateOperationsInput | number
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_especialidadeNestedInput
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_especialidadeNestedInput
  }

  export type tbl_especialidadeCreateManyInput = {
    id_especialidade?: number
    especialidade?: string | null
  }

  export type tbl_especialidadeUpdateManyMutationInput = {
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_especialidadeUncheckedUpdateManyInput = {
    id_especialidade?: IntFieldUpdateOperationsInput | number
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_especialidade_clinicaCreateInput = {
    tbl_clinica?: tbl_clinicaCreateNestedOneWithoutTbl_especialidade_clinicaInput
    tbl_especialidade?: tbl_especialidadeCreateNestedOneWithoutTbl_especialidade_clinicaInput
  }

  export type tbl_especialidade_clinicaUncheckedCreateInput = {
    id?: number
    id_clinica?: number | null
    id_especialidade?: number | null
  }

  export type tbl_especialidade_clinicaUpdateInput = {
    tbl_clinica?: tbl_clinicaUpdateOneWithoutTbl_especialidade_clinicaNestedInput
    tbl_especialidade?: tbl_especialidadeUpdateOneWithoutTbl_especialidade_clinicaNestedInput
  }

  export type tbl_especialidade_clinicaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_clinica?: NullableIntFieldUpdateOperationsInput | number | null
    id_especialidade?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_clinicaCreateManyInput = {
    id?: number
    id_clinica?: number | null
    id_especialidade?: number | null
  }

  export type tbl_especialidade_clinicaUpdateManyMutationInput = {

  }

  export type tbl_especialidade_clinicaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_clinica?: NullableIntFieldUpdateOperationsInput | number | null
    id_especialidade?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_medicoCreateInput = {
    tbl_especialidade?: tbl_especialidadeCreateNestedOneWithoutTbl_especialidade_medicoInput
    tbl_medico?: tbl_medicoCreateNestedOneWithoutTbl_especialidade_medicoInput
  }

  export type tbl_especialidade_medicoUncheckedCreateInput = {
    id?: number
    id_medico?: number | null
    id_especialidade?: number | null
  }

  export type tbl_especialidade_medicoUpdateInput = {
    tbl_especialidade?: tbl_especialidadeUpdateOneWithoutTbl_especialidade_medicoNestedInput
    tbl_medico?: tbl_medicoUpdateOneWithoutTbl_especialidade_medicoNestedInput
  }

  export type tbl_especialidade_medicoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_medico?: NullableIntFieldUpdateOperationsInput | number | null
    id_especialidade?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_medicoCreateManyInput = {
    id?: number
    id_medico?: number | null
    id_especialidade?: number | null
  }

  export type tbl_especialidade_medicoUpdateManyMutationInput = {

  }

  export type tbl_especialidade_medicoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_medico?: NullableIntFieldUpdateOperationsInput | number | null
    id_especialidade?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_medicoCreateInput = {
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    tbl_especialidade_medico?: tbl_especialidade_medicoCreateNestedManyWithoutTbl_medicoInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_medicoInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_medicoInput
  }

  export type tbl_medicoUncheckedCreateInput = {
    id_medico?: number
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    id_sexo?: number | null
    id_user?: number | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedCreateNestedManyWithoutTbl_medicoInput
  }

  export type tbl_medicoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    tbl_especialidade_medico?: tbl_especialidade_medicoUpdateManyWithoutTbl_medicoNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_medicoNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_medicoNestedInput
  }

  export type tbl_medicoUncheckedUpdateInput = {
    id_medico?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_medicoNestedInput
  }

  export type tbl_medicoCreateManyInput = {
    id_medico?: number
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    id_sexo?: number | null
    id_user?: number | null
  }

  export type tbl_medicoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_medicoUncheckedUpdateManyInput = {
    id_medico?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_messagerCreateInput = {
    conteudo: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_messagerInput
    tbl_status_messager?: tbl_status_messagerCreateNestedOneWithoutTbl_messagerInput
    tbl_type_messager?: tbl_type_messagerCreateNestedOneWithoutTbl_messagerInput
  }

  export type tbl_messagerUncheckedCreateInput = {
    id_mensagem?: number
    conteudo: string
    id_tipo_mensagem?: number | null
    id_status?: number | null
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_messagerInput
  }

  export type tbl_messagerUpdateInput = {
    conteudo?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_messagerNestedInput
    tbl_status_messager?: tbl_status_messagerUpdateOneWithoutTbl_messagerNestedInput
    tbl_type_messager?: tbl_type_messagerUpdateOneWithoutTbl_messagerNestedInput
  }

  export type tbl_messagerUncheckedUpdateInput = {
    id_mensagem?: IntFieldUpdateOperationsInput | number
    conteudo?: StringFieldUpdateOperationsInput | string
    id_tipo_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
    id_status?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_messagerNestedInput
  }

  export type tbl_messagerCreateManyInput = {
    id_mensagem?: number
    conteudo: string
    id_tipo_mensagem?: number | null
    id_status?: number | null
  }

  export type tbl_messagerUpdateManyMutationInput = {
    conteudo?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_messagerUncheckedUpdateManyInput = {
    id_mensagem?: IntFieldUpdateOperationsInput | number
    conteudo?: StringFieldUpdateOperationsInput | string
    id_tipo_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
    id_status?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavelCreateInput = {
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_responsavelInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_responsavelInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_responsavelInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeCreateNestedManyWithoutTbl_responsavelInput
  }

  export type tbl_responsavelUncheckedCreateInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_sexo?: number | null
    id_user?: number | null
    id_cep?: number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_responsavelInput
  }

  export type tbl_responsavelUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_responsavelNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_responsavelNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_responsavelNestedInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeUpdateManyWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelUncheckedUpdateInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelCreateManyInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_sexo?: number | null
    id_user?: number | null
    id_cep?: number | null
  }

  export type tbl_responsavelUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_responsavelUncheckedUpdateManyInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavel_bebeCreateInput = {
    tbl_bebe?: tbl_bebeCreateNestedOneWithoutTbl_responsavel_bebeInput
    tbl_responsavel?: tbl_responsavelCreateNestedOneWithoutTbl_responsavel_bebeInput
  }

  export type tbl_responsavel_bebeUncheckedCreateInput = {
    id_bebe_responsavel?: number
    id_bebe?: number | null
    id_responsavel?: number | null
  }

  export type tbl_responsavel_bebeUpdateInput = {
    tbl_bebe?: tbl_bebeUpdateOneWithoutTbl_responsavel_bebeNestedInput
    tbl_responsavel?: tbl_responsavelUpdateOneWithoutTbl_responsavel_bebeNestedInput
  }

  export type tbl_responsavel_bebeUncheckedUpdateInput = {
    id_bebe_responsavel?: IntFieldUpdateOperationsInput | number
    id_bebe?: NullableIntFieldUpdateOperationsInput | number | null
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavel_bebeCreateManyInput = {
    id_bebe_responsavel?: number
    id_bebe?: number | null
    id_responsavel?: number | null
  }

  export type tbl_responsavel_bebeUpdateManyMutationInput = {

  }

  export type tbl_responsavel_bebeUncheckedUpdateManyInput = {
    id_bebe_responsavel?: IntFieldUpdateOperationsInput | number
    id_bebe?: NullableIntFieldUpdateOperationsInput | number | null
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_rotinaCreateInput = {
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    tbl_rotina_base?: tbl_rotina_baseCreateNestedOneWithoutTbl_rotinaInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_rotinaInput
  }

  export type tbl_rotinaUncheckedCreateInput = {
    id_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    id_user?: number | null
    id_rotina_base?: number | null
  }

  export type tbl_rotinaUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    tbl_rotina_base?: tbl_rotina_baseUpdateOneWithoutTbl_rotinaNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_rotinaNestedInput
  }

  export type tbl_rotinaUncheckedUpdateInput = {
    id_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    id_rotina_base?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_rotinaCreateManyInput = {
    id_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    id_user?: number | null
    id_rotina_base?: number | null
  }

  export type tbl_rotinaUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_rotinaUncheckedUpdateManyInput = {
    id_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    id_rotina_base?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_rotina_baseCreateInput = {
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    tbl_rotina?: tbl_rotinaCreateNestedManyWithoutTbl_rotina_baseInput
  }

  export type tbl_rotina_baseUncheckedCreateInput = {
    id_rotina_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    tbl_rotina?: tbl_rotinaUncheckedCreateNestedManyWithoutTbl_rotina_baseInput
  }

  export type tbl_rotina_baseUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    tbl_rotina?: tbl_rotinaUpdateManyWithoutTbl_rotina_baseNestedInput
  }

  export type tbl_rotina_baseUncheckedUpdateInput = {
    id_rotina_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    tbl_rotina?: tbl_rotinaUncheckedUpdateManyWithoutTbl_rotina_baseNestedInput
  }

  export type tbl_rotina_baseCreateManyInput = {
    id_rotina_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
  }

  export type tbl_rotina_baseUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_rotina_baseUncheckedUpdateManyInput = {
    id_rotina_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_sangueCreateInput = {
    tipo_sanguineo: string
    tbl_bebe?: tbl_bebeCreateNestedManyWithoutTbl_sangueInput
  }

  export type tbl_sangueUncheckedCreateInput = {
    id_sangue?: number
    tipo_sanguineo: string
    tbl_bebe?: tbl_bebeUncheckedCreateNestedManyWithoutTbl_sangueInput
  }

  export type tbl_sangueUpdateInput = {
    tipo_sanguineo?: StringFieldUpdateOperationsInput | string
    tbl_bebe?: tbl_bebeUpdateManyWithoutTbl_sangueNestedInput
  }

  export type tbl_sangueUncheckedUpdateInput = {
    id_sangue?: IntFieldUpdateOperationsInput | number
    tipo_sanguineo?: StringFieldUpdateOperationsInput | string
    tbl_bebe?: tbl_bebeUncheckedUpdateManyWithoutTbl_sangueNestedInput
  }

  export type tbl_sangueCreateManyInput = {
    id_sangue?: number
    tipo_sanguineo: string
  }

  export type tbl_sangueUpdateManyMutationInput = {
    tipo_sanguineo?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_sangueUncheckedUpdateManyInput = {
    id_sangue?: IntFieldUpdateOperationsInput | number
    tipo_sanguineo?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_sexoCreateInput = {
    sexo: string
    tbl_bebe?: tbl_bebeCreateNestedManyWithoutTbl_sexoInput
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_sexoInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateInput = {
    id_sexo?: number
    sexo: string
    tbl_bebe?: tbl_bebeUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUpdateInput = {
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_bebe?: tbl_bebeUpdateManyWithoutTbl_sexoNestedInput
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_sexoNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateInput = {
    id_sexo?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_bebe?: tbl_bebeUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoCreateManyInput = {
    id_sexo?: number
    sexo: string
  }

  export type tbl_sexoUpdateManyMutationInput = {
    sexo?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_sexoUncheckedUpdateManyInput = {
    id_sexo?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_status_messagerCreateInput = {
    status_messagem?: string | null
    tbl_messager?: tbl_messagerCreateNestedManyWithoutTbl_status_messagerInput
  }

  export type tbl_status_messagerUncheckedCreateInput = {
    id_status?: number
    status_messagem?: string | null
    tbl_messager?: tbl_messagerUncheckedCreateNestedManyWithoutTbl_status_messagerInput
  }

  export type tbl_status_messagerUpdateInput = {
    status_messagem?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_messager?: tbl_messagerUpdateManyWithoutTbl_status_messagerNestedInput
  }

  export type tbl_status_messagerUncheckedUpdateInput = {
    id_status?: IntFieldUpdateOperationsInput | number
    status_messagem?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_messager?: tbl_messagerUncheckedUpdateManyWithoutTbl_status_messagerNestedInput
  }

  export type tbl_status_messagerCreateManyInput = {
    id_status?: number
    status_messagem?: string | null
  }

  export type tbl_status_messagerUpdateManyMutationInput = {
    status_messagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_status_messagerUncheckedUpdateManyInput = {
    id_status?: IntFieldUpdateOperationsInput | number
    status_messagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_type_messagerCreateInput = {
    tipo_mensagem?: string | null
    tbl_messager?: tbl_messagerCreateNestedManyWithoutTbl_type_messagerInput
  }

  export type tbl_type_messagerUncheckedCreateInput = {
    id_tipo_mensagem?: number
    tipo_mensagem?: string | null
    tbl_messager?: tbl_messagerUncheckedCreateNestedManyWithoutTbl_type_messagerInput
  }

  export type tbl_type_messagerUpdateInput = {
    tipo_mensagem?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_messager?: tbl_messagerUpdateManyWithoutTbl_type_messagerNestedInput
  }

  export type tbl_type_messagerUncheckedUpdateInput = {
    id_tipo_mensagem?: IntFieldUpdateOperationsInput | number
    tipo_mensagem?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_messager?: tbl_messagerUncheckedUpdateManyWithoutTbl_type_messagerNestedInput
  }

  export type tbl_type_messagerCreateManyInput = {
    id_tipo_mensagem?: number
    tipo_mensagem?: string | null
  }

  export type tbl_type_messagerUpdateManyMutationInput = {
    tipo_mensagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_type_messagerUncheckedUpdateManyInput = {
    id_tipo_mensagem?: IntFieldUpdateOperationsInput | number
    tipo_mensagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_type_userCreateInput = {
    tipo?: string | null
    tbl_user?: tbl_userCreateNestedManyWithoutTbl_type_userInput
  }

  export type tbl_type_userUncheckedCreateInput = {
    id_tipo?: number
    tipo?: string | null
    tbl_user?: tbl_userUncheckedCreateNestedManyWithoutTbl_type_userInput
  }

  export type tbl_type_userUpdateInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_user?: tbl_userUpdateManyWithoutTbl_type_userNestedInput
  }

  export type tbl_type_userUncheckedUpdateInput = {
    id_tipo?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_user?: tbl_userUncheckedUpdateManyWithoutTbl_type_userNestedInput
  }

  export type tbl_type_userCreateManyInput = {
    id_tipo?: number
    tipo?: string | null
  }

  export type tbl_type_userUpdateManyMutationInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_type_userUncheckedUpdateManyInput = {
    id_tipo?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_userCreateInput = {
    email: string
    senha: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaCreateNestedManyWithoutTbl_userInput
    tbl_type_user?: tbl_type_userCreateNestedOneWithoutTbl_userInput
  }

  export type tbl_userUncheckedCreateInput = {
    id_user?: number
    email: string
    senha: string
    id_tipo?: number | null
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaUncheckedCreateNestedManyWithoutTbl_userInput
  }

  export type tbl_userUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUpdateManyWithoutTbl_userNestedInput
    tbl_type_user?: tbl_type_userUpdateOneWithoutTbl_userNestedInput
  }

  export type tbl_userUncheckedUpdateInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    id_tipo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUncheckedUpdateManyWithoutTbl_userNestedInput
  }

  export type tbl_userCreateManyInput = {
    id_user?: number
    email: string
    senha: string
    id_tipo?: number | null
  }

  export type tbl_userUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_userUncheckedUpdateManyInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    id_tipo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Tbl_cepNullableScalarRelationFilter = {
    is?: tbl_cepWhereInput | null
    isNot?: tbl_cepWhereInput | null
  }

  export type Tbl_sangueNullableScalarRelationFilter = {
    is?: tbl_sangueWhereInput | null
    isNot?: tbl_sangueWhereInput | null
  }

  export type Tbl_sexoNullableScalarRelationFilter = {
    is?: tbl_sexoWhereInput | null
    isNot?: tbl_sexoWhereInput | null
  }

  export type Tbl_responsavel_bebeListRelationFilter = {
    every?: tbl_responsavel_bebeWhereInput
    some?: tbl_responsavel_bebeWhereInput
    none?: tbl_responsavel_bebeWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tbl_responsavel_bebeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_bebeOrderByRelevanceInput = {
    fields: tbl_bebeOrderByRelevanceFieldEnum | tbl_bebeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_bebeCountOrderByAggregateInput = {
    id_bebe?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    peso?: SortOrder
    altura?: SortOrder
    certidao_nascimento?: SortOrder
    cpf?: SortOrder
    cartao_medico?: SortOrder
    imagem_certidao?: SortOrder
    id_sexo?: SortOrder
    id_cep?: SortOrder
    id_sangue?: SortOrder
  }

  export type tbl_bebeAvgOrderByAggregateInput = {
    id_bebe?: SortOrder
    peso?: SortOrder
    altura?: SortOrder
    id_sexo?: SortOrder
    id_cep?: SortOrder
    id_sangue?: SortOrder
  }

  export type tbl_bebeMaxOrderByAggregateInput = {
    id_bebe?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    peso?: SortOrder
    altura?: SortOrder
    certidao_nascimento?: SortOrder
    cpf?: SortOrder
    cartao_medico?: SortOrder
    imagem_certidao?: SortOrder
    id_sexo?: SortOrder
    id_cep?: SortOrder
    id_sangue?: SortOrder
  }

  export type tbl_bebeMinOrderByAggregateInput = {
    id_bebe?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    peso?: SortOrder
    altura?: SortOrder
    certidao_nascimento?: SortOrder
    cpf?: SortOrder
    cartao_medico?: SortOrder
    imagem_certidao?: SortOrder
    id_sexo?: SortOrder
    id_cep?: SortOrder
    id_sangue?: SortOrder
  }

  export type tbl_bebeSumOrderByAggregateInput = {
    id_bebe?: SortOrder
    peso?: SortOrder
    altura?: SortOrder
    id_sexo?: SortOrder
    id_cep?: SortOrder
    id_sangue?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Tbl_bebeListRelationFilter = {
    every?: tbl_bebeWhereInput
    some?: tbl_bebeWhereInput
    none?: tbl_bebeWhereInput
  }

  export type Tbl_clinicaListRelationFilter = {
    every?: tbl_clinicaWhereInput
    some?: tbl_clinicaWhereInput
    none?: tbl_clinicaWhereInput
  }

  export type Tbl_responsavelListRelationFilter = {
    every?: tbl_responsavelWhereInput
    some?: tbl_responsavelWhereInput
    none?: tbl_responsavelWhereInput
  }

  export type tbl_bebeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_clinicaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_responsavelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_cepOrderByRelevanceInput = {
    fields: tbl_cepOrderByRelevanceFieldEnum | tbl_cepOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_cepCountOrderByAggregateInput = {
    id_cep?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    id_responsavel?: SortOrder
  }

  export type tbl_cepAvgOrderByAggregateInput = {
    id_cep?: SortOrder
    id_responsavel?: SortOrder
  }

  export type tbl_cepMaxOrderByAggregateInput = {
    id_cep?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    id_responsavel?: SortOrder
  }

  export type tbl_cepMinOrderByAggregateInput = {
    id_cep?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    id_responsavel?: SortOrder
  }

  export type tbl_cepSumOrderByAggregateInput = {
    id_cep?: SortOrder
    id_responsavel?: SortOrder
  }

  export type Tbl_messagerNullableScalarRelationFilter = {
    is?: tbl_messagerWhereInput | null
    isNot?: tbl_messagerWhereInput | null
  }

  export type Tbl_userNullableScalarRelationFilter = {
    is?: tbl_userWhereInput | null
    isNot?: tbl_userWhereInput | null
  }

  export type tbl_chatCountOrderByAggregateInput = {
    id_chat?: SortOrder
    id_mensagem?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_chatAvgOrderByAggregateInput = {
    id_chat?: SortOrder
    id_mensagem?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_chatMaxOrderByAggregateInput = {
    id_chat?: SortOrder
    id_mensagem?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_chatMinOrderByAggregateInput = {
    id_chat?: SortOrder
    id_mensagem?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_chatSumOrderByAggregateInput = {
    id_chat?: SortOrder
    id_mensagem?: SortOrder
    id_user?: SortOrder
  }

  export type Tbl_especialidade_clinicaListRelationFilter = {
    every?: tbl_especialidade_clinicaWhereInput
    some?: tbl_especialidade_clinicaWhereInput
    none?: tbl_especialidade_clinicaWhereInput
  }

  export type tbl_especialidade_clinicaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_clinicaOrderByRelevanceInput = {
    fields: tbl_clinicaOrderByRelevanceFieldEnum | tbl_clinicaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_clinicaCountOrderByAggregateInput = {
    id_clinica?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    id_cep?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_clinicaAvgOrderByAggregateInput = {
    id_clinica?: SortOrder
    id_cep?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_clinicaMaxOrderByAggregateInput = {
    id_clinica?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    id_cep?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_clinicaMinOrderByAggregateInput = {
    id_clinica?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    id_cep?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_clinicaSumOrderByAggregateInput = {
    id_clinica?: SortOrder
    id_cep?: SortOrder
    id_user?: SortOrder
  }

  export type Tbl_especialidade_medicoListRelationFilter = {
    every?: tbl_especialidade_medicoWhereInput
    some?: tbl_especialidade_medicoWhereInput
    none?: tbl_especialidade_medicoWhereInput
  }

  export type tbl_especialidade_medicoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_especialidadeOrderByRelevanceInput = {
    fields: tbl_especialidadeOrderByRelevanceFieldEnum | tbl_especialidadeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_especialidadeCountOrderByAggregateInput = {
    id_especialidade?: SortOrder
    especialidade?: SortOrder
  }

  export type tbl_especialidadeAvgOrderByAggregateInput = {
    id_especialidade?: SortOrder
  }

  export type tbl_especialidadeMaxOrderByAggregateInput = {
    id_especialidade?: SortOrder
    especialidade?: SortOrder
  }

  export type tbl_especialidadeMinOrderByAggregateInput = {
    id_especialidade?: SortOrder
    especialidade?: SortOrder
  }

  export type tbl_especialidadeSumOrderByAggregateInput = {
    id_especialidade?: SortOrder
  }

  export type Tbl_clinicaNullableScalarRelationFilter = {
    is?: tbl_clinicaWhereInput | null
    isNot?: tbl_clinicaWhereInput | null
  }

  export type Tbl_especialidadeNullableScalarRelationFilter = {
    is?: tbl_especialidadeWhereInput | null
    isNot?: tbl_especialidadeWhereInput | null
  }

  export type tbl_especialidade_clinicaCountOrderByAggregateInput = {
    id?: SortOrder
    id_clinica?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_especialidade_clinicaAvgOrderByAggregateInput = {
    id?: SortOrder
    id_clinica?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_especialidade_clinicaMaxOrderByAggregateInput = {
    id?: SortOrder
    id_clinica?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_especialidade_clinicaMinOrderByAggregateInput = {
    id?: SortOrder
    id_clinica?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_especialidade_clinicaSumOrderByAggregateInput = {
    id?: SortOrder
    id_clinica?: SortOrder
    id_especialidade?: SortOrder
  }

  export type Tbl_medicoNullableScalarRelationFilter = {
    is?: tbl_medicoWhereInput | null
    isNot?: tbl_medicoWhereInput | null
  }

  export type tbl_especialidade_medicoCountOrderByAggregateInput = {
    id?: SortOrder
    id_medico?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_especialidade_medicoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_medico?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_especialidade_medicoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_medico?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_especialidade_medicoMinOrderByAggregateInput = {
    id?: SortOrder
    id_medico?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_especialidade_medicoSumOrderByAggregateInput = {
    id?: SortOrder
    id_medico?: SortOrder
    id_especialidade?: SortOrder
  }

  export type tbl_medicoOrderByRelevanceInput = {
    fields: tbl_medicoOrderByRelevanceFieldEnum | tbl_medicoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_medicoCountOrderByAggregateInput = {
    id_medico?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    crm?: SortOrder
    cpf?: SortOrder
    foto?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_medicoAvgOrderByAggregateInput = {
    id_medico?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_medicoMaxOrderByAggregateInput = {
    id_medico?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    crm?: SortOrder
    cpf?: SortOrder
    foto?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_medicoMinOrderByAggregateInput = {
    id_medico?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    crm?: SortOrder
    cpf?: SortOrder
    foto?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
  }

  export type tbl_medicoSumOrderByAggregateInput = {
    id_medico?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
  }

  export type Tbl_chatListRelationFilter = {
    every?: tbl_chatWhereInput
    some?: tbl_chatWhereInput
    none?: tbl_chatWhereInput
  }

  export type Tbl_status_messagerNullableScalarRelationFilter = {
    is?: tbl_status_messagerWhereInput | null
    isNot?: tbl_status_messagerWhereInput | null
  }

  export type Tbl_type_messagerNullableScalarRelationFilter = {
    is?: tbl_type_messagerWhereInput | null
    isNot?: tbl_type_messagerWhereInput | null
  }

  export type tbl_chatOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_messagerOrderByRelevanceInput = {
    fields: tbl_messagerOrderByRelevanceFieldEnum | tbl_messagerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_messagerCountOrderByAggregateInput = {
    id_mensagem?: SortOrder
    conteudo?: SortOrder
    id_tipo_mensagem?: SortOrder
    id_status?: SortOrder
  }

  export type tbl_messagerAvgOrderByAggregateInput = {
    id_mensagem?: SortOrder
    id_tipo_mensagem?: SortOrder
    id_status?: SortOrder
  }

  export type tbl_messagerMaxOrderByAggregateInput = {
    id_mensagem?: SortOrder
    conteudo?: SortOrder
    id_tipo_mensagem?: SortOrder
    id_status?: SortOrder
  }

  export type tbl_messagerMinOrderByAggregateInput = {
    id_mensagem?: SortOrder
    conteudo?: SortOrder
    id_tipo_mensagem?: SortOrder
    id_status?: SortOrder
  }

  export type tbl_messagerSumOrderByAggregateInput = {
    id_mensagem?: SortOrder
    id_tipo_mensagem?: SortOrder
    id_status?: SortOrder
  }

  export type tbl_responsavelOrderByRelevanceInput = {
    fields: tbl_responsavelOrderByRelevanceFieldEnum | tbl_responsavelOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_responsavelCountOrderByAggregateInput = {
    id_responsavel?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    telefone?: SortOrder
    arquivo?: SortOrder
    cartao_medico?: SortOrder
    cep?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
    id_cep?: SortOrder
  }

  export type tbl_responsavelAvgOrderByAggregateInput = {
    id_responsavel?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
    id_cep?: SortOrder
  }

  export type tbl_responsavelMaxOrderByAggregateInput = {
    id_responsavel?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    telefone?: SortOrder
    arquivo?: SortOrder
    cartao_medico?: SortOrder
    cep?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
    id_cep?: SortOrder
  }

  export type tbl_responsavelMinOrderByAggregateInput = {
    id_responsavel?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    telefone?: SortOrder
    arquivo?: SortOrder
    cartao_medico?: SortOrder
    cep?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
    id_cep?: SortOrder
  }

  export type tbl_responsavelSumOrderByAggregateInput = {
    id_responsavel?: SortOrder
    id_sexo?: SortOrder
    id_user?: SortOrder
    id_cep?: SortOrder
  }

  export type Tbl_bebeNullableScalarRelationFilter = {
    is?: tbl_bebeWhereInput | null
    isNot?: tbl_bebeWhereInput | null
  }

  export type Tbl_responsavelNullableScalarRelationFilter = {
    is?: tbl_responsavelWhereInput | null
    isNot?: tbl_responsavelWhereInput | null
  }

  export type tbl_responsavel_bebeCountOrderByAggregateInput = {
    id_bebe_responsavel?: SortOrder
    id_bebe?: SortOrder
    id_responsavel?: SortOrder
  }

  export type tbl_responsavel_bebeAvgOrderByAggregateInput = {
    id_bebe_responsavel?: SortOrder
    id_bebe?: SortOrder
    id_responsavel?: SortOrder
  }

  export type tbl_responsavel_bebeMaxOrderByAggregateInput = {
    id_bebe_responsavel?: SortOrder
    id_bebe?: SortOrder
    id_responsavel?: SortOrder
  }

  export type tbl_responsavel_bebeMinOrderByAggregateInput = {
    id_bebe_responsavel?: SortOrder
    id_bebe?: SortOrder
    id_responsavel?: SortOrder
  }

  export type tbl_responsavel_bebeSumOrderByAggregateInput = {
    id_bebe_responsavel?: SortOrder
    id_bebe?: SortOrder
    id_responsavel?: SortOrder
  }

  export type Tbl_rotina_baseNullableScalarRelationFilter = {
    is?: tbl_rotina_baseWhereInput | null
    isNot?: tbl_rotina_baseWhereInput | null
  }

  export type tbl_rotinaOrderByRelevanceInput = {
    fields: tbl_rotinaOrderByRelevanceFieldEnum | tbl_rotinaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_rotinaCountOrderByAggregateInput = {
    id_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
    id_user?: SortOrder
    id_rotina_base?: SortOrder
  }

  export type tbl_rotinaAvgOrderByAggregateInput = {
    id_base?: SortOrder
    id_user?: SortOrder
    id_rotina_base?: SortOrder
  }

  export type tbl_rotinaMaxOrderByAggregateInput = {
    id_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
    id_user?: SortOrder
    id_rotina_base?: SortOrder
  }

  export type tbl_rotinaMinOrderByAggregateInput = {
    id_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
    id_user?: SortOrder
    id_rotina_base?: SortOrder
  }

  export type tbl_rotinaSumOrderByAggregateInput = {
    id_base?: SortOrder
    id_user?: SortOrder
    id_rotina_base?: SortOrder
  }

  export type Tbl_rotinaListRelationFilter = {
    every?: tbl_rotinaWhereInput
    some?: tbl_rotinaWhereInput
    none?: tbl_rotinaWhereInput
  }

  export type tbl_rotinaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_rotina_baseOrderByRelevanceInput = {
    fields: tbl_rotina_baseOrderByRelevanceFieldEnum | tbl_rotina_baseOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_rotina_baseCountOrderByAggregateInput = {
    id_rotina_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_rotina_baseAvgOrderByAggregateInput = {
    id_rotina_base?: SortOrder
  }

  export type tbl_rotina_baseMaxOrderByAggregateInput = {
    id_rotina_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_rotina_baseMinOrderByAggregateInput = {
    id_rotina_base?: SortOrder
    titulo?: SortOrder
    cor?: SortOrder
    data_rotina?: SortOrder
    hora?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_rotina_baseSumOrderByAggregateInput = {
    id_rotina_base?: SortOrder
  }

  export type tbl_sangueOrderByRelevanceInput = {
    fields: tbl_sangueOrderByRelevanceFieldEnum | tbl_sangueOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_sangueCountOrderByAggregateInput = {
    id_sangue?: SortOrder
    tipo_sanguineo?: SortOrder
  }

  export type tbl_sangueAvgOrderByAggregateInput = {
    id_sangue?: SortOrder
  }

  export type tbl_sangueMaxOrderByAggregateInput = {
    id_sangue?: SortOrder
    tipo_sanguineo?: SortOrder
  }

  export type tbl_sangueMinOrderByAggregateInput = {
    id_sangue?: SortOrder
    tipo_sanguineo?: SortOrder
  }

  export type tbl_sangueSumOrderByAggregateInput = {
    id_sangue?: SortOrder
  }

  export type Tbl_medicoListRelationFilter = {
    every?: tbl_medicoWhereInput
    some?: tbl_medicoWhereInput
    none?: tbl_medicoWhereInput
  }

  export type tbl_medicoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_sexoOrderByRelevanceInput = {
    fields: tbl_sexoOrderByRelevanceFieldEnum | tbl_sexoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_sexoCountOrderByAggregateInput = {
    id_sexo?: SortOrder
    sexo?: SortOrder
  }

  export type tbl_sexoAvgOrderByAggregateInput = {
    id_sexo?: SortOrder
  }

  export type tbl_sexoMaxOrderByAggregateInput = {
    id_sexo?: SortOrder
    sexo?: SortOrder
  }

  export type tbl_sexoMinOrderByAggregateInput = {
    id_sexo?: SortOrder
    sexo?: SortOrder
  }

  export type tbl_sexoSumOrderByAggregateInput = {
    id_sexo?: SortOrder
  }

  export type Tbl_messagerListRelationFilter = {
    every?: tbl_messagerWhereInput
    some?: tbl_messagerWhereInput
    none?: tbl_messagerWhereInput
  }

  export type tbl_messagerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_status_messagerOrderByRelevanceInput = {
    fields: tbl_status_messagerOrderByRelevanceFieldEnum | tbl_status_messagerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_status_messagerCountOrderByAggregateInput = {
    id_status?: SortOrder
    status_messagem?: SortOrder
  }

  export type tbl_status_messagerAvgOrderByAggregateInput = {
    id_status?: SortOrder
  }

  export type tbl_status_messagerMaxOrderByAggregateInput = {
    id_status?: SortOrder
    status_messagem?: SortOrder
  }

  export type tbl_status_messagerMinOrderByAggregateInput = {
    id_status?: SortOrder
    status_messagem?: SortOrder
  }

  export type tbl_status_messagerSumOrderByAggregateInput = {
    id_status?: SortOrder
  }

  export type tbl_type_messagerOrderByRelevanceInput = {
    fields: tbl_type_messagerOrderByRelevanceFieldEnum | tbl_type_messagerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_type_messagerCountOrderByAggregateInput = {
    id_tipo_mensagem?: SortOrder
    tipo_mensagem?: SortOrder
  }

  export type tbl_type_messagerAvgOrderByAggregateInput = {
    id_tipo_mensagem?: SortOrder
  }

  export type tbl_type_messagerMaxOrderByAggregateInput = {
    id_tipo_mensagem?: SortOrder
    tipo_mensagem?: SortOrder
  }

  export type tbl_type_messagerMinOrderByAggregateInput = {
    id_tipo_mensagem?: SortOrder
    tipo_mensagem?: SortOrder
  }

  export type tbl_type_messagerSumOrderByAggregateInput = {
    id_tipo_mensagem?: SortOrder
  }

  export type Tbl_userListRelationFilter = {
    every?: tbl_userWhereInput
    some?: tbl_userWhereInput
    none?: tbl_userWhereInput
  }

  export type tbl_userOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_type_userOrderByRelevanceInput = {
    fields: tbl_type_userOrderByRelevanceFieldEnum | tbl_type_userOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_type_userCountOrderByAggregateInput = {
    id_tipo?: SortOrder
    tipo?: SortOrder
  }

  export type tbl_type_userAvgOrderByAggregateInput = {
    id_tipo?: SortOrder
  }

  export type tbl_type_userMaxOrderByAggregateInput = {
    id_tipo?: SortOrder
    tipo?: SortOrder
  }

  export type tbl_type_userMinOrderByAggregateInput = {
    id_tipo?: SortOrder
    tipo?: SortOrder
  }

  export type tbl_type_userSumOrderByAggregateInput = {
    id_tipo?: SortOrder
  }

  export type Tbl_type_userNullableScalarRelationFilter = {
    is?: tbl_type_userWhereInput | null
    isNot?: tbl_type_userWhereInput | null
  }

  export type tbl_userOrderByRelevanceInput = {
    fields: tbl_userOrderByRelevanceFieldEnum | tbl_userOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tbl_userCountOrderByAggregateInput = {
    id_user?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    id_tipo?: SortOrder
  }

  export type tbl_userAvgOrderByAggregateInput = {
    id_user?: SortOrder
    id_tipo?: SortOrder
  }

  export type tbl_userMaxOrderByAggregateInput = {
    id_user?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    id_tipo?: SortOrder
  }

  export type tbl_userMinOrderByAggregateInput = {
    id_user?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    id_tipo?: SortOrder
  }

  export type tbl_userSumOrderByAggregateInput = {
    id_user?: SortOrder
    id_tipo?: SortOrder
  }

  export type tbl_cepCreateNestedOneWithoutTbl_bebeInput = {
    create?: XOR<tbl_cepCreateWithoutTbl_bebeInput, tbl_cepUncheckedCreateWithoutTbl_bebeInput>
    connectOrCreate?: tbl_cepCreateOrConnectWithoutTbl_bebeInput
    connect?: tbl_cepWhereUniqueInput
  }

  export type tbl_sangueCreateNestedOneWithoutTbl_bebeInput = {
    create?: XOR<tbl_sangueCreateWithoutTbl_bebeInput, tbl_sangueUncheckedCreateWithoutTbl_bebeInput>
    connectOrCreate?: tbl_sangueCreateOrConnectWithoutTbl_bebeInput
    connect?: tbl_sangueWhereUniqueInput
  }

  export type tbl_sexoCreateNestedOneWithoutTbl_bebeInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_bebeInput, tbl_sexoUncheckedCreateWithoutTbl_bebeInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_bebeInput
    connect?: tbl_sexoWhereUniqueInput
  }

  export type tbl_responsavel_bebeCreateNestedManyWithoutTbl_bebeInput = {
    create?: XOR<tbl_responsavel_bebeCreateWithoutTbl_bebeInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput> | tbl_responsavel_bebeCreateWithoutTbl_bebeInput[] | tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput[]
    connectOrCreate?: tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput | tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput[]
    createMany?: tbl_responsavel_bebeCreateManyTbl_bebeInputEnvelope
    connect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
  }

  export type tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_bebeInput = {
    create?: XOR<tbl_responsavel_bebeCreateWithoutTbl_bebeInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput> | tbl_responsavel_bebeCreateWithoutTbl_bebeInput[] | tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput[]
    connectOrCreate?: tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput | tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput[]
    createMany?: tbl_responsavel_bebeCreateManyTbl_bebeInputEnvelope
    connect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type tbl_cepUpdateOneWithoutTbl_bebeNestedInput = {
    create?: XOR<tbl_cepCreateWithoutTbl_bebeInput, tbl_cepUncheckedCreateWithoutTbl_bebeInput>
    connectOrCreate?: tbl_cepCreateOrConnectWithoutTbl_bebeInput
    upsert?: tbl_cepUpsertWithoutTbl_bebeInput
    disconnect?: tbl_cepWhereInput | boolean
    delete?: tbl_cepWhereInput | boolean
    connect?: tbl_cepWhereUniqueInput
    update?: XOR<XOR<tbl_cepUpdateToOneWithWhereWithoutTbl_bebeInput, tbl_cepUpdateWithoutTbl_bebeInput>, tbl_cepUncheckedUpdateWithoutTbl_bebeInput>
  }

  export type tbl_sangueUpdateOneWithoutTbl_bebeNestedInput = {
    create?: XOR<tbl_sangueCreateWithoutTbl_bebeInput, tbl_sangueUncheckedCreateWithoutTbl_bebeInput>
    connectOrCreate?: tbl_sangueCreateOrConnectWithoutTbl_bebeInput
    upsert?: tbl_sangueUpsertWithoutTbl_bebeInput
    disconnect?: tbl_sangueWhereInput | boolean
    delete?: tbl_sangueWhereInput | boolean
    connect?: tbl_sangueWhereUniqueInput
    update?: XOR<XOR<tbl_sangueUpdateToOneWithWhereWithoutTbl_bebeInput, tbl_sangueUpdateWithoutTbl_bebeInput>, tbl_sangueUncheckedUpdateWithoutTbl_bebeInput>
  }

  export type tbl_sexoUpdateOneWithoutTbl_bebeNestedInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_bebeInput, tbl_sexoUncheckedCreateWithoutTbl_bebeInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_bebeInput
    upsert?: tbl_sexoUpsertWithoutTbl_bebeInput
    disconnect?: tbl_sexoWhereInput | boolean
    delete?: tbl_sexoWhereInput | boolean
    connect?: tbl_sexoWhereUniqueInput
    update?: XOR<XOR<tbl_sexoUpdateToOneWithWhereWithoutTbl_bebeInput, tbl_sexoUpdateWithoutTbl_bebeInput>, tbl_sexoUncheckedUpdateWithoutTbl_bebeInput>
  }

  export type tbl_responsavel_bebeUpdateManyWithoutTbl_bebeNestedInput = {
    create?: XOR<tbl_responsavel_bebeCreateWithoutTbl_bebeInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput> | tbl_responsavel_bebeCreateWithoutTbl_bebeInput[] | tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput[]
    connectOrCreate?: tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput | tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput[]
    upsert?: tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_bebeInput | tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_bebeInput[]
    createMany?: tbl_responsavel_bebeCreateManyTbl_bebeInputEnvelope
    set?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    disconnect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    delete?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    connect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    update?: tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_bebeInput | tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_bebeInput[]
    updateMany?: tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_bebeInput | tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_bebeInput[]
    deleteMany?: tbl_responsavel_bebeScalarWhereInput | tbl_responsavel_bebeScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_bebeNestedInput = {
    create?: XOR<tbl_responsavel_bebeCreateWithoutTbl_bebeInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput> | tbl_responsavel_bebeCreateWithoutTbl_bebeInput[] | tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput[]
    connectOrCreate?: tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput | tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput[]
    upsert?: tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_bebeInput | tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_bebeInput[]
    createMany?: tbl_responsavel_bebeCreateManyTbl_bebeInputEnvelope
    set?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    disconnect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    delete?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    connect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    update?: tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_bebeInput | tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_bebeInput[]
    updateMany?: tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_bebeInput | tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_bebeInput[]
    deleteMany?: tbl_responsavel_bebeScalarWhereInput | tbl_responsavel_bebeScalarWhereInput[]
  }

  export type tbl_bebeCreateNestedManyWithoutTbl_cepInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_cepInput, tbl_bebeUncheckedCreateWithoutTbl_cepInput> | tbl_bebeCreateWithoutTbl_cepInput[] | tbl_bebeUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_cepInput | tbl_bebeCreateOrConnectWithoutTbl_cepInput[]
    createMany?: tbl_bebeCreateManyTbl_cepInputEnvelope
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
  }

  export type tbl_clinicaCreateNestedManyWithoutTbl_cepInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_cepInput, tbl_clinicaUncheckedCreateWithoutTbl_cepInput> | tbl_clinicaCreateWithoutTbl_cepInput[] | tbl_clinicaUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_cepInput | tbl_clinicaCreateOrConnectWithoutTbl_cepInput[]
    createMany?: tbl_clinicaCreateManyTbl_cepInputEnvelope
    connect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
  }

  export type tbl_responsavelCreateNestedManyWithoutTbl_cepInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_cepInput, tbl_responsavelUncheckedCreateWithoutTbl_cepInput> | tbl_responsavelCreateWithoutTbl_cepInput[] | tbl_responsavelUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_cepInput | tbl_responsavelCreateOrConnectWithoutTbl_cepInput[]
    createMany?: tbl_responsavelCreateManyTbl_cepInputEnvelope
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
  }

  export type tbl_bebeUncheckedCreateNestedManyWithoutTbl_cepInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_cepInput, tbl_bebeUncheckedCreateWithoutTbl_cepInput> | tbl_bebeCreateWithoutTbl_cepInput[] | tbl_bebeUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_cepInput | tbl_bebeCreateOrConnectWithoutTbl_cepInput[]
    createMany?: tbl_bebeCreateManyTbl_cepInputEnvelope
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
  }

  export type tbl_clinicaUncheckedCreateNestedManyWithoutTbl_cepInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_cepInput, tbl_clinicaUncheckedCreateWithoutTbl_cepInput> | tbl_clinicaCreateWithoutTbl_cepInput[] | tbl_clinicaUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_cepInput | tbl_clinicaCreateOrConnectWithoutTbl_cepInput[]
    createMany?: tbl_clinicaCreateManyTbl_cepInputEnvelope
    connect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
  }

  export type tbl_responsavelUncheckedCreateNestedManyWithoutTbl_cepInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_cepInput, tbl_responsavelUncheckedCreateWithoutTbl_cepInput> | tbl_responsavelCreateWithoutTbl_cepInput[] | tbl_responsavelUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_cepInput | tbl_responsavelCreateOrConnectWithoutTbl_cepInput[]
    createMany?: tbl_responsavelCreateManyTbl_cepInputEnvelope
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
  }

  export type tbl_bebeUpdateManyWithoutTbl_cepNestedInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_cepInput, tbl_bebeUncheckedCreateWithoutTbl_cepInput> | tbl_bebeCreateWithoutTbl_cepInput[] | tbl_bebeUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_cepInput | tbl_bebeCreateOrConnectWithoutTbl_cepInput[]
    upsert?: tbl_bebeUpsertWithWhereUniqueWithoutTbl_cepInput | tbl_bebeUpsertWithWhereUniqueWithoutTbl_cepInput[]
    createMany?: tbl_bebeCreateManyTbl_cepInputEnvelope
    set?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    disconnect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    delete?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    update?: tbl_bebeUpdateWithWhereUniqueWithoutTbl_cepInput | tbl_bebeUpdateWithWhereUniqueWithoutTbl_cepInput[]
    updateMany?: tbl_bebeUpdateManyWithWhereWithoutTbl_cepInput | tbl_bebeUpdateManyWithWhereWithoutTbl_cepInput[]
    deleteMany?: tbl_bebeScalarWhereInput | tbl_bebeScalarWhereInput[]
  }

  export type tbl_clinicaUpdateManyWithoutTbl_cepNestedInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_cepInput, tbl_clinicaUncheckedCreateWithoutTbl_cepInput> | tbl_clinicaCreateWithoutTbl_cepInput[] | tbl_clinicaUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_cepInput | tbl_clinicaCreateOrConnectWithoutTbl_cepInput[]
    upsert?: tbl_clinicaUpsertWithWhereUniqueWithoutTbl_cepInput | tbl_clinicaUpsertWithWhereUniqueWithoutTbl_cepInput[]
    createMany?: tbl_clinicaCreateManyTbl_cepInputEnvelope
    set?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    disconnect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    delete?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    connect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    update?: tbl_clinicaUpdateWithWhereUniqueWithoutTbl_cepInput | tbl_clinicaUpdateWithWhereUniqueWithoutTbl_cepInput[]
    updateMany?: tbl_clinicaUpdateManyWithWhereWithoutTbl_cepInput | tbl_clinicaUpdateManyWithWhereWithoutTbl_cepInput[]
    deleteMany?: tbl_clinicaScalarWhereInput | tbl_clinicaScalarWhereInput[]
  }

  export type tbl_responsavelUpdateManyWithoutTbl_cepNestedInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_cepInput, tbl_responsavelUncheckedCreateWithoutTbl_cepInput> | tbl_responsavelCreateWithoutTbl_cepInput[] | tbl_responsavelUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_cepInput | tbl_responsavelCreateOrConnectWithoutTbl_cepInput[]
    upsert?: tbl_responsavelUpsertWithWhereUniqueWithoutTbl_cepInput | tbl_responsavelUpsertWithWhereUniqueWithoutTbl_cepInput[]
    createMany?: tbl_responsavelCreateManyTbl_cepInputEnvelope
    set?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    disconnect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    delete?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    update?: tbl_responsavelUpdateWithWhereUniqueWithoutTbl_cepInput | tbl_responsavelUpdateWithWhereUniqueWithoutTbl_cepInput[]
    updateMany?: tbl_responsavelUpdateManyWithWhereWithoutTbl_cepInput | tbl_responsavelUpdateManyWithWhereWithoutTbl_cepInput[]
    deleteMany?: tbl_responsavelScalarWhereInput | tbl_responsavelScalarWhereInput[]
  }

  export type tbl_bebeUncheckedUpdateManyWithoutTbl_cepNestedInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_cepInput, tbl_bebeUncheckedCreateWithoutTbl_cepInput> | tbl_bebeCreateWithoutTbl_cepInput[] | tbl_bebeUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_cepInput | tbl_bebeCreateOrConnectWithoutTbl_cepInput[]
    upsert?: tbl_bebeUpsertWithWhereUniqueWithoutTbl_cepInput | tbl_bebeUpsertWithWhereUniqueWithoutTbl_cepInput[]
    createMany?: tbl_bebeCreateManyTbl_cepInputEnvelope
    set?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    disconnect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    delete?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    update?: tbl_bebeUpdateWithWhereUniqueWithoutTbl_cepInput | tbl_bebeUpdateWithWhereUniqueWithoutTbl_cepInput[]
    updateMany?: tbl_bebeUpdateManyWithWhereWithoutTbl_cepInput | tbl_bebeUpdateManyWithWhereWithoutTbl_cepInput[]
    deleteMany?: tbl_bebeScalarWhereInput | tbl_bebeScalarWhereInput[]
  }

  export type tbl_clinicaUncheckedUpdateManyWithoutTbl_cepNestedInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_cepInput, tbl_clinicaUncheckedCreateWithoutTbl_cepInput> | tbl_clinicaCreateWithoutTbl_cepInput[] | tbl_clinicaUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_cepInput | tbl_clinicaCreateOrConnectWithoutTbl_cepInput[]
    upsert?: tbl_clinicaUpsertWithWhereUniqueWithoutTbl_cepInput | tbl_clinicaUpsertWithWhereUniqueWithoutTbl_cepInput[]
    createMany?: tbl_clinicaCreateManyTbl_cepInputEnvelope
    set?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    disconnect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    delete?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    connect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    update?: tbl_clinicaUpdateWithWhereUniqueWithoutTbl_cepInput | tbl_clinicaUpdateWithWhereUniqueWithoutTbl_cepInput[]
    updateMany?: tbl_clinicaUpdateManyWithWhereWithoutTbl_cepInput | tbl_clinicaUpdateManyWithWhereWithoutTbl_cepInput[]
    deleteMany?: tbl_clinicaScalarWhereInput | tbl_clinicaScalarWhereInput[]
  }

  export type tbl_responsavelUncheckedUpdateManyWithoutTbl_cepNestedInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_cepInput, tbl_responsavelUncheckedCreateWithoutTbl_cepInput> | tbl_responsavelCreateWithoutTbl_cepInput[] | tbl_responsavelUncheckedCreateWithoutTbl_cepInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_cepInput | tbl_responsavelCreateOrConnectWithoutTbl_cepInput[]
    upsert?: tbl_responsavelUpsertWithWhereUniqueWithoutTbl_cepInput | tbl_responsavelUpsertWithWhereUniqueWithoutTbl_cepInput[]
    createMany?: tbl_responsavelCreateManyTbl_cepInputEnvelope
    set?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    disconnect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    delete?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    update?: tbl_responsavelUpdateWithWhereUniqueWithoutTbl_cepInput | tbl_responsavelUpdateWithWhereUniqueWithoutTbl_cepInput[]
    updateMany?: tbl_responsavelUpdateManyWithWhereWithoutTbl_cepInput | tbl_responsavelUpdateManyWithWhereWithoutTbl_cepInput[]
    deleteMany?: tbl_responsavelScalarWhereInput | tbl_responsavelScalarWhereInput[]
  }

  export type tbl_messagerCreateNestedOneWithoutTbl_chatInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_chatInput, tbl_messagerUncheckedCreateWithoutTbl_chatInput>
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_chatInput
    connect?: tbl_messagerWhereUniqueInput
  }

  export type tbl_userCreateNestedOneWithoutTbl_chatInput = {
    create?: XOR<tbl_userCreateWithoutTbl_chatInput, tbl_userUncheckedCreateWithoutTbl_chatInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_chatInput
    connect?: tbl_userWhereUniqueInput
  }

  export type tbl_messagerUpdateOneWithoutTbl_chatNestedInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_chatInput, tbl_messagerUncheckedCreateWithoutTbl_chatInput>
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_chatInput
    upsert?: tbl_messagerUpsertWithoutTbl_chatInput
    disconnect?: tbl_messagerWhereInput | boolean
    delete?: tbl_messagerWhereInput | boolean
    connect?: tbl_messagerWhereUniqueInput
    update?: XOR<XOR<tbl_messagerUpdateToOneWithWhereWithoutTbl_chatInput, tbl_messagerUpdateWithoutTbl_chatInput>, tbl_messagerUncheckedUpdateWithoutTbl_chatInput>
  }

  export type tbl_userUpdateOneWithoutTbl_chatNestedInput = {
    create?: XOR<tbl_userCreateWithoutTbl_chatInput, tbl_userUncheckedCreateWithoutTbl_chatInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_chatInput
    upsert?: tbl_userUpsertWithoutTbl_chatInput
    disconnect?: tbl_userWhereInput | boolean
    delete?: tbl_userWhereInput | boolean
    connect?: tbl_userWhereUniqueInput
    update?: XOR<XOR<tbl_userUpdateToOneWithWhereWithoutTbl_chatInput, tbl_userUpdateWithoutTbl_chatInput>, tbl_userUncheckedUpdateWithoutTbl_chatInput>
  }

  export type tbl_cepCreateNestedOneWithoutTbl_clinicaInput = {
    create?: XOR<tbl_cepCreateWithoutTbl_clinicaInput, tbl_cepUncheckedCreateWithoutTbl_clinicaInput>
    connectOrCreate?: tbl_cepCreateOrConnectWithoutTbl_clinicaInput
    connect?: tbl_cepWhereUniqueInput
  }

  export type tbl_userCreateNestedOneWithoutTbl_clinicaInput = {
    create?: XOR<tbl_userCreateWithoutTbl_clinicaInput, tbl_userUncheckedCreateWithoutTbl_clinicaInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_clinicaInput
    connect?: tbl_userWhereUniqueInput
  }

  export type tbl_especialidade_clinicaCreateNestedManyWithoutTbl_clinicaInput = {
    create?: XOR<tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput> | tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput[] | tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput[]
    connectOrCreate?: tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput | tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput[]
    createMany?: tbl_especialidade_clinicaCreateManyTbl_clinicaInputEnvelope
    connect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
  }

  export type tbl_especialidade_clinicaUncheckedCreateNestedManyWithoutTbl_clinicaInput = {
    create?: XOR<tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput> | tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput[] | tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput[]
    connectOrCreate?: tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput | tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput[]
    createMany?: tbl_especialidade_clinicaCreateManyTbl_clinicaInputEnvelope
    connect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
  }

  export type tbl_cepUpdateOneWithoutTbl_clinicaNestedInput = {
    create?: XOR<tbl_cepCreateWithoutTbl_clinicaInput, tbl_cepUncheckedCreateWithoutTbl_clinicaInput>
    connectOrCreate?: tbl_cepCreateOrConnectWithoutTbl_clinicaInput
    upsert?: tbl_cepUpsertWithoutTbl_clinicaInput
    disconnect?: tbl_cepWhereInput | boolean
    delete?: tbl_cepWhereInput | boolean
    connect?: tbl_cepWhereUniqueInput
    update?: XOR<XOR<tbl_cepUpdateToOneWithWhereWithoutTbl_clinicaInput, tbl_cepUpdateWithoutTbl_clinicaInput>, tbl_cepUncheckedUpdateWithoutTbl_clinicaInput>
  }

  export type tbl_userUpdateOneWithoutTbl_clinicaNestedInput = {
    create?: XOR<tbl_userCreateWithoutTbl_clinicaInput, tbl_userUncheckedCreateWithoutTbl_clinicaInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_clinicaInput
    upsert?: tbl_userUpsertWithoutTbl_clinicaInput
    disconnect?: tbl_userWhereInput | boolean
    delete?: tbl_userWhereInput | boolean
    connect?: tbl_userWhereUniqueInput
    update?: XOR<XOR<tbl_userUpdateToOneWithWhereWithoutTbl_clinicaInput, tbl_userUpdateWithoutTbl_clinicaInput>, tbl_userUncheckedUpdateWithoutTbl_clinicaInput>
  }

  export type tbl_especialidade_clinicaUpdateManyWithoutTbl_clinicaNestedInput = {
    create?: XOR<tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput> | tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput[] | tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput[]
    connectOrCreate?: tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput | tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput[]
    upsert?: tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_clinicaInput | tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_clinicaInput[]
    createMany?: tbl_especialidade_clinicaCreateManyTbl_clinicaInputEnvelope
    set?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    disconnect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    delete?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    connect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    update?: tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_clinicaInput | tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_clinicaInput[]
    updateMany?: tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_clinicaInput | tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_clinicaInput[]
    deleteMany?: tbl_especialidade_clinicaScalarWhereInput | tbl_especialidade_clinicaScalarWhereInput[]
  }

  export type tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_clinicaNestedInput = {
    create?: XOR<tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput> | tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput[] | tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput[]
    connectOrCreate?: tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput | tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput[]
    upsert?: tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_clinicaInput | tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_clinicaInput[]
    createMany?: tbl_especialidade_clinicaCreateManyTbl_clinicaInputEnvelope
    set?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    disconnect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    delete?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    connect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    update?: tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_clinicaInput | tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_clinicaInput[]
    updateMany?: tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_clinicaInput | tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_clinicaInput[]
    deleteMany?: tbl_especialidade_clinicaScalarWhereInput | tbl_especialidade_clinicaScalarWhereInput[]
  }

  export type tbl_especialidade_clinicaCreateNestedManyWithoutTbl_especialidadeInput = {
    create?: XOR<tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput> | tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput[] | tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput[]
    connectOrCreate?: tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput | tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput[]
    createMany?: tbl_especialidade_clinicaCreateManyTbl_especialidadeInputEnvelope
    connect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
  }

  export type tbl_especialidade_medicoCreateNestedManyWithoutTbl_especialidadeInput = {
    create?: XOR<tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput> | tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput[] | tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput[]
    connectOrCreate?: tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput | tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput[]
    createMany?: tbl_especialidade_medicoCreateManyTbl_especialidadeInputEnvelope
    connect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
  }

  export type tbl_especialidade_clinicaUncheckedCreateNestedManyWithoutTbl_especialidadeInput = {
    create?: XOR<tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput> | tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput[] | tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput[]
    connectOrCreate?: tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput | tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput[]
    createMany?: tbl_especialidade_clinicaCreateManyTbl_especialidadeInputEnvelope
    connect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
  }

  export type tbl_especialidade_medicoUncheckedCreateNestedManyWithoutTbl_especialidadeInput = {
    create?: XOR<tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput> | tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput[] | tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput[]
    connectOrCreate?: tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput | tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput[]
    createMany?: tbl_especialidade_medicoCreateManyTbl_especialidadeInputEnvelope
    connect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
  }

  export type tbl_especialidade_clinicaUpdateManyWithoutTbl_especialidadeNestedInput = {
    create?: XOR<tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput> | tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput[] | tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput[]
    connectOrCreate?: tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput | tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput[]
    upsert?: tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_especialidadeInput | tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_especialidadeInput[]
    createMany?: tbl_especialidade_clinicaCreateManyTbl_especialidadeInputEnvelope
    set?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    disconnect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    delete?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    connect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    update?: tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_especialidadeInput | tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_especialidadeInput[]
    updateMany?: tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_especialidadeInput | tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_especialidadeInput[]
    deleteMany?: tbl_especialidade_clinicaScalarWhereInput | tbl_especialidade_clinicaScalarWhereInput[]
  }

  export type tbl_especialidade_medicoUpdateManyWithoutTbl_especialidadeNestedInput = {
    create?: XOR<tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput> | tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput[] | tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput[]
    connectOrCreate?: tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput | tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput[]
    upsert?: tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_especialidadeInput | tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_especialidadeInput[]
    createMany?: tbl_especialidade_medicoCreateManyTbl_especialidadeInputEnvelope
    set?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    disconnect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    delete?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    connect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    update?: tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_especialidadeInput | tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_especialidadeInput[]
    updateMany?: tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_especialidadeInput | tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_especialidadeInput[]
    deleteMany?: tbl_especialidade_medicoScalarWhereInput | tbl_especialidade_medicoScalarWhereInput[]
  }

  export type tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_especialidadeNestedInput = {
    create?: XOR<tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput> | tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput[] | tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput[]
    connectOrCreate?: tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput | tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput[]
    upsert?: tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_especialidadeInput | tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_especialidadeInput[]
    createMany?: tbl_especialidade_clinicaCreateManyTbl_especialidadeInputEnvelope
    set?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    disconnect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    delete?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    connect?: tbl_especialidade_clinicaWhereUniqueInput | tbl_especialidade_clinicaWhereUniqueInput[]
    update?: tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_especialidadeInput | tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_especialidadeInput[]
    updateMany?: tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_especialidadeInput | tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_especialidadeInput[]
    deleteMany?: tbl_especialidade_clinicaScalarWhereInput | tbl_especialidade_clinicaScalarWhereInput[]
  }

  export type tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_especialidadeNestedInput = {
    create?: XOR<tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput> | tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput[] | tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput[]
    connectOrCreate?: tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput | tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput[]
    upsert?: tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_especialidadeInput | tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_especialidadeInput[]
    createMany?: tbl_especialidade_medicoCreateManyTbl_especialidadeInputEnvelope
    set?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    disconnect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    delete?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    connect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    update?: tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_especialidadeInput | tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_especialidadeInput[]
    updateMany?: tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_especialidadeInput | tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_especialidadeInput[]
    deleteMany?: tbl_especialidade_medicoScalarWhereInput | tbl_especialidade_medicoScalarWhereInput[]
  }

  export type tbl_clinicaCreateNestedOneWithoutTbl_especialidade_clinicaInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_especialidade_clinicaInput, tbl_clinicaUncheckedCreateWithoutTbl_especialidade_clinicaInput>
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_especialidade_clinicaInput
    connect?: tbl_clinicaWhereUniqueInput
  }

  export type tbl_especialidadeCreateNestedOneWithoutTbl_especialidade_clinicaInput = {
    create?: XOR<tbl_especialidadeCreateWithoutTbl_especialidade_clinicaInput, tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_clinicaInput>
    connectOrCreate?: tbl_especialidadeCreateOrConnectWithoutTbl_especialidade_clinicaInput
    connect?: tbl_especialidadeWhereUniqueInput
  }

  export type tbl_clinicaUpdateOneWithoutTbl_especialidade_clinicaNestedInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_especialidade_clinicaInput, tbl_clinicaUncheckedCreateWithoutTbl_especialidade_clinicaInput>
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_especialidade_clinicaInput
    upsert?: tbl_clinicaUpsertWithoutTbl_especialidade_clinicaInput
    disconnect?: tbl_clinicaWhereInput | boolean
    delete?: tbl_clinicaWhereInput | boolean
    connect?: tbl_clinicaWhereUniqueInput
    update?: XOR<XOR<tbl_clinicaUpdateToOneWithWhereWithoutTbl_especialidade_clinicaInput, tbl_clinicaUpdateWithoutTbl_especialidade_clinicaInput>, tbl_clinicaUncheckedUpdateWithoutTbl_especialidade_clinicaInput>
  }

  export type tbl_especialidadeUpdateOneWithoutTbl_especialidade_clinicaNestedInput = {
    create?: XOR<tbl_especialidadeCreateWithoutTbl_especialidade_clinicaInput, tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_clinicaInput>
    connectOrCreate?: tbl_especialidadeCreateOrConnectWithoutTbl_especialidade_clinicaInput
    upsert?: tbl_especialidadeUpsertWithoutTbl_especialidade_clinicaInput
    disconnect?: tbl_especialidadeWhereInput | boolean
    delete?: tbl_especialidadeWhereInput | boolean
    connect?: tbl_especialidadeWhereUniqueInput
    update?: XOR<XOR<tbl_especialidadeUpdateToOneWithWhereWithoutTbl_especialidade_clinicaInput, tbl_especialidadeUpdateWithoutTbl_especialidade_clinicaInput>, tbl_especialidadeUncheckedUpdateWithoutTbl_especialidade_clinicaInput>
  }

  export type tbl_especialidadeCreateNestedOneWithoutTbl_especialidade_medicoInput = {
    create?: XOR<tbl_especialidadeCreateWithoutTbl_especialidade_medicoInput, tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_medicoInput>
    connectOrCreate?: tbl_especialidadeCreateOrConnectWithoutTbl_especialidade_medicoInput
    connect?: tbl_especialidadeWhereUniqueInput
  }

  export type tbl_medicoCreateNestedOneWithoutTbl_especialidade_medicoInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_especialidade_medicoInput, tbl_medicoUncheckedCreateWithoutTbl_especialidade_medicoInput>
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_especialidade_medicoInput
    connect?: tbl_medicoWhereUniqueInput
  }

  export type tbl_especialidadeUpdateOneWithoutTbl_especialidade_medicoNestedInput = {
    create?: XOR<tbl_especialidadeCreateWithoutTbl_especialidade_medicoInput, tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_medicoInput>
    connectOrCreate?: tbl_especialidadeCreateOrConnectWithoutTbl_especialidade_medicoInput
    upsert?: tbl_especialidadeUpsertWithoutTbl_especialidade_medicoInput
    disconnect?: tbl_especialidadeWhereInput | boolean
    delete?: tbl_especialidadeWhereInput | boolean
    connect?: tbl_especialidadeWhereUniqueInput
    update?: XOR<XOR<tbl_especialidadeUpdateToOneWithWhereWithoutTbl_especialidade_medicoInput, tbl_especialidadeUpdateWithoutTbl_especialidade_medicoInput>, tbl_especialidadeUncheckedUpdateWithoutTbl_especialidade_medicoInput>
  }

  export type tbl_medicoUpdateOneWithoutTbl_especialidade_medicoNestedInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_especialidade_medicoInput, tbl_medicoUncheckedCreateWithoutTbl_especialidade_medicoInput>
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_especialidade_medicoInput
    upsert?: tbl_medicoUpsertWithoutTbl_especialidade_medicoInput
    disconnect?: tbl_medicoWhereInput | boolean
    delete?: tbl_medicoWhereInput | boolean
    connect?: tbl_medicoWhereUniqueInput
    update?: XOR<XOR<tbl_medicoUpdateToOneWithWhereWithoutTbl_especialidade_medicoInput, tbl_medicoUpdateWithoutTbl_especialidade_medicoInput>, tbl_medicoUncheckedUpdateWithoutTbl_especialidade_medicoInput>
  }

  export type tbl_especialidade_medicoCreateNestedManyWithoutTbl_medicoInput = {
    create?: XOR<tbl_especialidade_medicoCreateWithoutTbl_medicoInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput> | tbl_especialidade_medicoCreateWithoutTbl_medicoInput[] | tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput[]
    connectOrCreate?: tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput | tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput[]
    createMany?: tbl_especialidade_medicoCreateManyTbl_medicoInputEnvelope
    connect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
  }

  export type tbl_sexoCreateNestedOneWithoutTbl_medicoInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_medicoInput, tbl_sexoUncheckedCreateWithoutTbl_medicoInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_medicoInput
    connect?: tbl_sexoWhereUniqueInput
  }

  export type tbl_userCreateNestedOneWithoutTbl_medicoInput = {
    create?: XOR<tbl_userCreateWithoutTbl_medicoInput, tbl_userUncheckedCreateWithoutTbl_medicoInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_medicoInput
    connect?: tbl_userWhereUniqueInput
  }

  export type tbl_especialidade_medicoUncheckedCreateNestedManyWithoutTbl_medicoInput = {
    create?: XOR<tbl_especialidade_medicoCreateWithoutTbl_medicoInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput> | tbl_especialidade_medicoCreateWithoutTbl_medicoInput[] | tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput[]
    connectOrCreate?: tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput | tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput[]
    createMany?: tbl_especialidade_medicoCreateManyTbl_medicoInputEnvelope
    connect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
  }

  export type tbl_especialidade_medicoUpdateManyWithoutTbl_medicoNestedInput = {
    create?: XOR<tbl_especialidade_medicoCreateWithoutTbl_medicoInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput> | tbl_especialidade_medicoCreateWithoutTbl_medicoInput[] | tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput[]
    connectOrCreate?: tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput | tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput[]
    upsert?: tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_medicoInput | tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_medicoInput[]
    createMany?: tbl_especialidade_medicoCreateManyTbl_medicoInputEnvelope
    set?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    disconnect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    delete?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    connect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    update?: tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_medicoInput | tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_medicoInput[]
    updateMany?: tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_medicoInput | tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_medicoInput[]
    deleteMany?: tbl_especialidade_medicoScalarWhereInput | tbl_especialidade_medicoScalarWhereInput[]
  }

  export type tbl_sexoUpdateOneWithoutTbl_medicoNestedInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_medicoInput, tbl_sexoUncheckedCreateWithoutTbl_medicoInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_medicoInput
    upsert?: tbl_sexoUpsertWithoutTbl_medicoInput
    disconnect?: tbl_sexoWhereInput | boolean
    delete?: tbl_sexoWhereInput | boolean
    connect?: tbl_sexoWhereUniqueInput
    update?: XOR<XOR<tbl_sexoUpdateToOneWithWhereWithoutTbl_medicoInput, tbl_sexoUpdateWithoutTbl_medicoInput>, tbl_sexoUncheckedUpdateWithoutTbl_medicoInput>
  }

  export type tbl_userUpdateOneWithoutTbl_medicoNestedInput = {
    create?: XOR<tbl_userCreateWithoutTbl_medicoInput, tbl_userUncheckedCreateWithoutTbl_medicoInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_medicoInput
    upsert?: tbl_userUpsertWithoutTbl_medicoInput
    disconnect?: tbl_userWhereInput | boolean
    delete?: tbl_userWhereInput | boolean
    connect?: tbl_userWhereUniqueInput
    update?: XOR<XOR<tbl_userUpdateToOneWithWhereWithoutTbl_medicoInput, tbl_userUpdateWithoutTbl_medicoInput>, tbl_userUncheckedUpdateWithoutTbl_medicoInput>
  }

  export type tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_medicoNestedInput = {
    create?: XOR<tbl_especialidade_medicoCreateWithoutTbl_medicoInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput> | tbl_especialidade_medicoCreateWithoutTbl_medicoInput[] | tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput[]
    connectOrCreate?: tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput | tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput[]
    upsert?: tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_medicoInput | tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_medicoInput[]
    createMany?: tbl_especialidade_medicoCreateManyTbl_medicoInputEnvelope
    set?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    disconnect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    delete?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    connect?: tbl_especialidade_medicoWhereUniqueInput | tbl_especialidade_medicoWhereUniqueInput[]
    update?: tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_medicoInput | tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_medicoInput[]
    updateMany?: tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_medicoInput | tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_medicoInput[]
    deleteMany?: tbl_especialidade_medicoScalarWhereInput | tbl_especialidade_medicoScalarWhereInput[]
  }

  export type tbl_chatCreateNestedManyWithoutTbl_messagerInput = {
    create?: XOR<tbl_chatCreateWithoutTbl_messagerInput, tbl_chatUncheckedCreateWithoutTbl_messagerInput> | tbl_chatCreateWithoutTbl_messagerInput[] | tbl_chatUncheckedCreateWithoutTbl_messagerInput[]
    connectOrCreate?: tbl_chatCreateOrConnectWithoutTbl_messagerInput | tbl_chatCreateOrConnectWithoutTbl_messagerInput[]
    createMany?: tbl_chatCreateManyTbl_messagerInputEnvelope
    connect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
  }

  export type tbl_status_messagerCreateNestedOneWithoutTbl_messagerInput = {
    create?: XOR<tbl_status_messagerCreateWithoutTbl_messagerInput, tbl_status_messagerUncheckedCreateWithoutTbl_messagerInput>
    connectOrCreate?: tbl_status_messagerCreateOrConnectWithoutTbl_messagerInput
    connect?: tbl_status_messagerWhereUniqueInput
  }

  export type tbl_type_messagerCreateNestedOneWithoutTbl_messagerInput = {
    create?: XOR<tbl_type_messagerCreateWithoutTbl_messagerInput, tbl_type_messagerUncheckedCreateWithoutTbl_messagerInput>
    connectOrCreate?: tbl_type_messagerCreateOrConnectWithoutTbl_messagerInput
    connect?: tbl_type_messagerWhereUniqueInput
  }

  export type tbl_chatUncheckedCreateNestedManyWithoutTbl_messagerInput = {
    create?: XOR<tbl_chatCreateWithoutTbl_messagerInput, tbl_chatUncheckedCreateWithoutTbl_messagerInput> | tbl_chatCreateWithoutTbl_messagerInput[] | tbl_chatUncheckedCreateWithoutTbl_messagerInput[]
    connectOrCreate?: tbl_chatCreateOrConnectWithoutTbl_messagerInput | tbl_chatCreateOrConnectWithoutTbl_messagerInput[]
    createMany?: tbl_chatCreateManyTbl_messagerInputEnvelope
    connect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
  }

  export type tbl_chatUpdateManyWithoutTbl_messagerNestedInput = {
    create?: XOR<tbl_chatCreateWithoutTbl_messagerInput, tbl_chatUncheckedCreateWithoutTbl_messagerInput> | tbl_chatCreateWithoutTbl_messagerInput[] | tbl_chatUncheckedCreateWithoutTbl_messagerInput[]
    connectOrCreate?: tbl_chatCreateOrConnectWithoutTbl_messagerInput | tbl_chatCreateOrConnectWithoutTbl_messagerInput[]
    upsert?: tbl_chatUpsertWithWhereUniqueWithoutTbl_messagerInput | tbl_chatUpsertWithWhereUniqueWithoutTbl_messagerInput[]
    createMany?: tbl_chatCreateManyTbl_messagerInputEnvelope
    set?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    disconnect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    delete?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    connect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    update?: tbl_chatUpdateWithWhereUniqueWithoutTbl_messagerInput | tbl_chatUpdateWithWhereUniqueWithoutTbl_messagerInput[]
    updateMany?: tbl_chatUpdateManyWithWhereWithoutTbl_messagerInput | tbl_chatUpdateManyWithWhereWithoutTbl_messagerInput[]
    deleteMany?: tbl_chatScalarWhereInput | tbl_chatScalarWhereInput[]
  }

  export type tbl_status_messagerUpdateOneWithoutTbl_messagerNestedInput = {
    create?: XOR<tbl_status_messagerCreateWithoutTbl_messagerInput, tbl_status_messagerUncheckedCreateWithoutTbl_messagerInput>
    connectOrCreate?: tbl_status_messagerCreateOrConnectWithoutTbl_messagerInput
    upsert?: tbl_status_messagerUpsertWithoutTbl_messagerInput
    disconnect?: tbl_status_messagerWhereInput | boolean
    delete?: tbl_status_messagerWhereInput | boolean
    connect?: tbl_status_messagerWhereUniqueInput
    update?: XOR<XOR<tbl_status_messagerUpdateToOneWithWhereWithoutTbl_messagerInput, tbl_status_messagerUpdateWithoutTbl_messagerInput>, tbl_status_messagerUncheckedUpdateWithoutTbl_messagerInput>
  }

  export type tbl_type_messagerUpdateOneWithoutTbl_messagerNestedInput = {
    create?: XOR<tbl_type_messagerCreateWithoutTbl_messagerInput, tbl_type_messagerUncheckedCreateWithoutTbl_messagerInput>
    connectOrCreate?: tbl_type_messagerCreateOrConnectWithoutTbl_messagerInput
    upsert?: tbl_type_messagerUpsertWithoutTbl_messagerInput
    disconnect?: tbl_type_messagerWhereInput | boolean
    delete?: tbl_type_messagerWhereInput | boolean
    connect?: tbl_type_messagerWhereUniqueInput
    update?: XOR<XOR<tbl_type_messagerUpdateToOneWithWhereWithoutTbl_messagerInput, tbl_type_messagerUpdateWithoutTbl_messagerInput>, tbl_type_messagerUncheckedUpdateWithoutTbl_messagerInput>
  }

  export type tbl_chatUncheckedUpdateManyWithoutTbl_messagerNestedInput = {
    create?: XOR<tbl_chatCreateWithoutTbl_messagerInput, tbl_chatUncheckedCreateWithoutTbl_messagerInput> | tbl_chatCreateWithoutTbl_messagerInput[] | tbl_chatUncheckedCreateWithoutTbl_messagerInput[]
    connectOrCreate?: tbl_chatCreateOrConnectWithoutTbl_messagerInput | tbl_chatCreateOrConnectWithoutTbl_messagerInput[]
    upsert?: tbl_chatUpsertWithWhereUniqueWithoutTbl_messagerInput | tbl_chatUpsertWithWhereUniqueWithoutTbl_messagerInput[]
    createMany?: tbl_chatCreateManyTbl_messagerInputEnvelope
    set?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    disconnect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    delete?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    connect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    update?: tbl_chatUpdateWithWhereUniqueWithoutTbl_messagerInput | tbl_chatUpdateWithWhereUniqueWithoutTbl_messagerInput[]
    updateMany?: tbl_chatUpdateManyWithWhereWithoutTbl_messagerInput | tbl_chatUpdateManyWithWhereWithoutTbl_messagerInput[]
    deleteMany?: tbl_chatScalarWhereInput | tbl_chatScalarWhereInput[]
  }

  export type tbl_cepCreateNestedOneWithoutTbl_responsavelInput = {
    create?: XOR<tbl_cepCreateWithoutTbl_responsavelInput, tbl_cepUncheckedCreateWithoutTbl_responsavelInput>
    connectOrCreate?: tbl_cepCreateOrConnectWithoutTbl_responsavelInput
    connect?: tbl_cepWhereUniqueInput
  }

  export type tbl_sexoCreateNestedOneWithoutTbl_responsavelInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_responsavelInput, tbl_sexoUncheckedCreateWithoutTbl_responsavelInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_responsavelInput
    connect?: tbl_sexoWhereUniqueInput
  }

  export type tbl_userCreateNestedOneWithoutTbl_responsavelInput = {
    create?: XOR<tbl_userCreateWithoutTbl_responsavelInput, tbl_userUncheckedCreateWithoutTbl_responsavelInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_responsavelInput
    connect?: tbl_userWhereUniqueInput
  }

  export type tbl_responsavel_bebeCreateNestedManyWithoutTbl_responsavelInput = {
    create?: XOR<tbl_responsavel_bebeCreateWithoutTbl_responsavelInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput> | tbl_responsavel_bebeCreateWithoutTbl_responsavelInput[] | tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput[]
    connectOrCreate?: tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput | tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput[]
    createMany?: tbl_responsavel_bebeCreateManyTbl_responsavelInputEnvelope
    connect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
  }

  export type tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_responsavelInput = {
    create?: XOR<tbl_responsavel_bebeCreateWithoutTbl_responsavelInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput> | tbl_responsavel_bebeCreateWithoutTbl_responsavelInput[] | tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput[]
    connectOrCreate?: tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput | tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput[]
    createMany?: tbl_responsavel_bebeCreateManyTbl_responsavelInputEnvelope
    connect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
  }

  export type tbl_cepUpdateOneWithoutTbl_responsavelNestedInput = {
    create?: XOR<tbl_cepCreateWithoutTbl_responsavelInput, tbl_cepUncheckedCreateWithoutTbl_responsavelInput>
    connectOrCreate?: tbl_cepCreateOrConnectWithoutTbl_responsavelInput
    upsert?: tbl_cepUpsertWithoutTbl_responsavelInput
    disconnect?: tbl_cepWhereInput | boolean
    delete?: tbl_cepWhereInput | boolean
    connect?: tbl_cepWhereUniqueInput
    update?: XOR<XOR<tbl_cepUpdateToOneWithWhereWithoutTbl_responsavelInput, tbl_cepUpdateWithoutTbl_responsavelInput>, tbl_cepUncheckedUpdateWithoutTbl_responsavelInput>
  }

  export type tbl_sexoUpdateOneWithoutTbl_responsavelNestedInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_responsavelInput, tbl_sexoUncheckedCreateWithoutTbl_responsavelInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_responsavelInput
    upsert?: tbl_sexoUpsertWithoutTbl_responsavelInput
    disconnect?: tbl_sexoWhereInput | boolean
    delete?: tbl_sexoWhereInput | boolean
    connect?: tbl_sexoWhereUniqueInput
    update?: XOR<XOR<tbl_sexoUpdateToOneWithWhereWithoutTbl_responsavelInput, tbl_sexoUpdateWithoutTbl_responsavelInput>, tbl_sexoUncheckedUpdateWithoutTbl_responsavelInput>
  }

  export type tbl_userUpdateOneWithoutTbl_responsavelNestedInput = {
    create?: XOR<tbl_userCreateWithoutTbl_responsavelInput, tbl_userUncheckedCreateWithoutTbl_responsavelInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_responsavelInput
    upsert?: tbl_userUpsertWithoutTbl_responsavelInput
    disconnect?: tbl_userWhereInput | boolean
    delete?: tbl_userWhereInput | boolean
    connect?: tbl_userWhereUniqueInput
    update?: XOR<XOR<tbl_userUpdateToOneWithWhereWithoutTbl_responsavelInput, tbl_userUpdateWithoutTbl_responsavelInput>, tbl_userUncheckedUpdateWithoutTbl_responsavelInput>
  }

  export type tbl_responsavel_bebeUpdateManyWithoutTbl_responsavelNestedInput = {
    create?: XOR<tbl_responsavel_bebeCreateWithoutTbl_responsavelInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput> | tbl_responsavel_bebeCreateWithoutTbl_responsavelInput[] | tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput[]
    connectOrCreate?: tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput | tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput[]
    upsert?: tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_responsavelInput | tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_responsavelInput[]
    createMany?: tbl_responsavel_bebeCreateManyTbl_responsavelInputEnvelope
    set?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    disconnect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    delete?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    connect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    update?: tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_responsavelInput | tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_responsavelInput[]
    updateMany?: tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_responsavelInput | tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_responsavelInput[]
    deleteMany?: tbl_responsavel_bebeScalarWhereInput | tbl_responsavel_bebeScalarWhereInput[]
  }

  export type tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_responsavelNestedInput = {
    create?: XOR<tbl_responsavel_bebeCreateWithoutTbl_responsavelInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput> | tbl_responsavel_bebeCreateWithoutTbl_responsavelInput[] | tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput[]
    connectOrCreate?: tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput | tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput[]
    upsert?: tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_responsavelInput | tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_responsavelInput[]
    createMany?: tbl_responsavel_bebeCreateManyTbl_responsavelInputEnvelope
    set?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    disconnect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    delete?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    connect?: tbl_responsavel_bebeWhereUniqueInput | tbl_responsavel_bebeWhereUniqueInput[]
    update?: tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_responsavelInput | tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_responsavelInput[]
    updateMany?: tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_responsavelInput | tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_responsavelInput[]
    deleteMany?: tbl_responsavel_bebeScalarWhereInput | tbl_responsavel_bebeScalarWhereInput[]
  }

  export type tbl_bebeCreateNestedOneWithoutTbl_responsavel_bebeInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_responsavel_bebeInput, tbl_bebeUncheckedCreateWithoutTbl_responsavel_bebeInput>
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_responsavel_bebeInput
    connect?: tbl_bebeWhereUniqueInput
  }

  export type tbl_responsavelCreateNestedOneWithoutTbl_responsavel_bebeInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_responsavel_bebeInput, tbl_responsavelUncheckedCreateWithoutTbl_responsavel_bebeInput>
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_responsavel_bebeInput
    connect?: tbl_responsavelWhereUniqueInput
  }

  export type tbl_bebeUpdateOneWithoutTbl_responsavel_bebeNestedInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_responsavel_bebeInput, tbl_bebeUncheckedCreateWithoutTbl_responsavel_bebeInput>
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_responsavel_bebeInput
    upsert?: tbl_bebeUpsertWithoutTbl_responsavel_bebeInput
    disconnect?: tbl_bebeWhereInput | boolean
    delete?: tbl_bebeWhereInput | boolean
    connect?: tbl_bebeWhereUniqueInput
    update?: XOR<XOR<tbl_bebeUpdateToOneWithWhereWithoutTbl_responsavel_bebeInput, tbl_bebeUpdateWithoutTbl_responsavel_bebeInput>, tbl_bebeUncheckedUpdateWithoutTbl_responsavel_bebeInput>
  }

  export type tbl_responsavelUpdateOneWithoutTbl_responsavel_bebeNestedInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_responsavel_bebeInput, tbl_responsavelUncheckedCreateWithoutTbl_responsavel_bebeInput>
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_responsavel_bebeInput
    upsert?: tbl_responsavelUpsertWithoutTbl_responsavel_bebeInput
    disconnect?: tbl_responsavelWhereInput | boolean
    delete?: tbl_responsavelWhereInput | boolean
    connect?: tbl_responsavelWhereUniqueInput
    update?: XOR<XOR<tbl_responsavelUpdateToOneWithWhereWithoutTbl_responsavel_bebeInput, tbl_responsavelUpdateWithoutTbl_responsavel_bebeInput>, tbl_responsavelUncheckedUpdateWithoutTbl_responsavel_bebeInput>
  }

  export type tbl_rotina_baseCreateNestedOneWithoutTbl_rotinaInput = {
    create?: XOR<tbl_rotina_baseCreateWithoutTbl_rotinaInput, tbl_rotina_baseUncheckedCreateWithoutTbl_rotinaInput>
    connectOrCreate?: tbl_rotina_baseCreateOrConnectWithoutTbl_rotinaInput
    connect?: tbl_rotina_baseWhereUniqueInput
  }

  export type tbl_userCreateNestedOneWithoutTbl_rotinaInput = {
    create?: XOR<tbl_userCreateWithoutTbl_rotinaInput, tbl_userUncheckedCreateWithoutTbl_rotinaInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_rotinaInput
    connect?: tbl_userWhereUniqueInput
  }

  export type tbl_rotina_baseUpdateOneWithoutTbl_rotinaNestedInput = {
    create?: XOR<tbl_rotina_baseCreateWithoutTbl_rotinaInput, tbl_rotina_baseUncheckedCreateWithoutTbl_rotinaInput>
    connectOrCreate?: tbl_rotina_baseCreateOrConnectWithoutTbl_rotinaInput
    upsert?: tbl_rotina_baseUpsertWithoutTbl_rotinaInput
    disconnect?: tbl_rotina_baseWhereInput | boolean
    delete?: tbl_rotina_baseWhereInput | boolean
    connect?: tbl_rotina_baseWhereUniqueInput
    update?: XOR<XOR<tbl_rotina_baseUpdateToOneWithWhereWithoutTbl_rotinaInput, tbl_rotina_baseUpdateWithoutTbl_rotinaInput>, tbl_rotina_baseUncheckedUpdateWithoutTbl_rotinaInput>
  }

  export type tbl_userUpdateOneWithoutTbl_rotinaNestedInput = {
    create?: XOR<tbl_userCreateWithoutTbl_rotinaInput, tbl_userUncheckedCreateWithoutTbl_rotinaInput>
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_rotinaInput
    upsert?: tbl_userUpsertWithoutTbl_rotinaInput
    disconnect?: tbl_userWhereInput | boolean
    delete?: tbl_userWhereInput | boolean
    connect?: tbl_userWhereUniqueInput
    update?: XOR<XOR<tbl_userUpdateToOneWithWhereWithoutTbl_rotinaInput, tbl_userUpdateWithoutTbl_rotinaInput>, tbl_userUncheckedUpdateWithoutTbl_rotinaInput>
  }

  export type tbl_rotinaCreateNestedManyWithoutTbl_rotina_baseInput = {
    create?: XOR<tbl_rotinaCreateWithoutTbl_rotina_baseInput, tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput> | tbl_rotinaCreateWithoutTbl_rotina_baseInput[] | tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput[]
    connectOrCreate?: tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput | tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput[]
    createMany?: tbl_rotinaCreateManyTbl_rotina_baseInputEnvelope
    connect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
  }

  export type tbl_rotinaUncheckedCreateNestedManyWithoutTbl_rotina_baseInput = {
    create?: XOR<tbl_rotinaCreateWithoutTbl_rotina_baseInput, tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput> | tbl_rotinaCreateWithoutTbl_rotina_baseInput[] | tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput[]
    connectOrCreate?: tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput | tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput[]
    createMany?: tbl_rotinaCreateManyTbl_rotina_baseInputEnvelope
    connect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
  }

  export type tbl_rotinaUpdateManyWithoutTbl_rotina_baseNestedInput = {
    create?: XOR<tbl_rotinaCreateWithoutTbl_rotina_baseInput, tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput> | tbl_rotinaCreateWithoutTbl_rotina_baseInput[] | tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput[]
    connectOrCreate?: tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput | tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput[]
    upsert?: tbl_rotinaUpsertWithWhereUniqueWithoutTbl_rotina_baseInput | tbl_rotinaUpsertWithWhereUniqueWithoutTbl_rotina_baseInput[]
    createMany?: tbl_rotinaCreateManyTbl_rotina_baseInputEnvelope
    set?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    disconnect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    delete?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    connect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    update?: tbl_rotinaUpdateWithWhereUniqueWithoutTbl_rotina_baseInput | tbl_rotinaUpdateWithWhereUniqueWithoutTbl_rotina_baseInput[]
    updateMany?: tbl_rotinaUpdateManyWithWhereWithoutTbl_rotina_baseInput | tbl_rotinaUpdateManyWithWhereWithoutTbl_rotina_baseInput[]
    deleteMany?: tbl_rotinaScalarWhereInput | tbl_rotinaScalarWhereInput[]
  }

  export type tbl_rotinaUncheckedUpdateManyWithoutTbl_rotina_baseNestedInput = {
    create?: XOR<tbl_rotinaCreateWithoutTbl_rotina_baseInput, tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput> | tbl_rotinaCreateWithoutTbl_rotina_baseInput[] | tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput[]
    connectOrCreate?: tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput | tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput[]
    upsert?: tbl_rotinaUpsertWithWhereUniqueWithoutTbl_rotina_baseInput | tbl_rotinaUpsertWithWhereUniqueWithoutTbl_rotina_baseInput[]
    createMany?: tbl_rotinaCreateManyTbl_rotina_baseInputEnvelope
    set?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    disconnect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    delete?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    connect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    update?: tbl_rotinaUpdateWithWhereUniqueWithoutTbl_rotina_baseInput | tbl_rotinaUpdateWithWhereUniqueWithoutTbl_rotina_baseInput[]
    updateMany?: tbl_rotinaUpdateManyWithWhereWithoutTbl_rotina_baseInput | tbl_rotinaUpdateManyWithWhereWithoutTbl_rotina_baseInput[]
    deleteMany?: tbl_rotinaScalarWhereInput | tbl_rotinaScalarWhereInput[]
  }

  export type tbl_bebeCreateNestedManyWithoutTbl_sangueInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_sangueInput, tbl_bebeUncheckedCreateWithoutTbl_sangueInput> | tbl_bebeCreateWithoutTbl_sangueInput[] | tbl_bebeUncheckedCreateWithoutTbl_sangueInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_sangueInput | tbl_bebeCreateOrConnectWithoutTbl_sangueInput[]
    createMany?: tbl_bebeCreateManyTbl_sangueInputEnvelope
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
  }

  export type tbl_bebeUncheckedCreateNestedManyWithoutTbl_sangueInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_sangueInput, tbl_bebeUncheckedCreateWithoutTbl_sangueInput> | tbl_bebeCreateWithoutTbl_sangueInput[] | tbl_bebeUncheckedCreateWithoutTbl_sangueInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_sangueInput | tbl_bebeCreateOrConnectWithoutTbl_sangueInput[]
    createMany?: tbl_bebeCreateManyTbl_sangueInputEnvelope
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
  }

  export type tbl_bebeUpdateManyWithoutTbl_sangueNestedInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_sangueInput, tbl_bebeUncheckedCreateWithoutTbl_sangueInput> | tbl_bebeCreateWithoutTbl_sangueInput[] | tbl_bebeUncheckedCreateWithoutTbl_sangueInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_sangueInput | tbl_bebeCreateOrConnectWithoutTbl_sangueInput[]
    upsert?: tbl_bebeUpsertWithWhereUniqueWithoutTbl_sangueInput | tbl_bebeUpsertWithWhereUniqueWithoutTbl_sangueInput[]
    createMany?: tbl_bebeCreateManyTbl_sangueInputEnvelope
    set?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    disconnect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    delete?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    update?: tbl_bebeUpdateWithWhereUniqueWithoutTbl_sangueInput | tbl_bebeUpdateWithWhereUniqueWithoutTbl_sangueInput[]
    updateMany?: tbl_bebeUpdateManyWithWhereWithoutTbl_sangueInput | tbl_bebeUpdateManyWithWhereWithoutTbl_sangueInput[]
    deleteMany?: tbl_bebeScalarWhereInput | tbl_bebeScalarWhereInput[]
  }

  export type tbl_bebeUncheckedUpdateManyWithoutTbl_sangueNestedInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_sangueInput, tbl_bebeUncheckedCreateWithoutTbl_sangueInput> | tbl_bebeCreateWithoutTbl_sangueInput[] | tbl_bebeUncheckedCreateWithoutTbl_sangueInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_sangueInput | tbl_bebeCreateOrConnectWithoutTbl_sangueInput[]
    upsert?: tbl_bebeUpsertWithWhereUniqueWithoutTbl_sangueInput | tbl_bebeUpsertWithWhereUniqueWithoutTbl_sangueInput[]
    createMany?: tbl_bebeCreateManyTbl_sangueInputEnvelope
    set?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    disconnect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    delete?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    update?: tbl_bebeUpdateWithWhereUniqueWithoutTbl_sangueInput | tbl_bebeUpdateWithWhereUniqueWithoutTbl_sangueInput[]
    updateMany?: tbl_bebeUpdateManyWithWhereWithoutTbl_sangueInput | tbl_bebeUpdateManyWithWhereWithoutTbl_sangueInput[]
    deleteMany?: tbl_bebeScalarWhereInput | tbl_bebeScalarWhereInput[]
  }

  export type tbl_bebeCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_sexoInput, tbl_bebeUncheckedCreateWithoutTbl_sexoInput> | tbl_bebeCreateWithoutTbl_sexoInput[] | tbl_bebeUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_sexoInput | tbl_bebeCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_bebeCreateManyTbl_sexoInputEnvelope
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
  }

  export type tbl_medicoCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_sexoInput, tbl_medicoUncheckedCreateWithoutTbl_sexoInput> | tbl_medicoCreateWithoutTbl_sexoInput[] | tbl_medicoUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_sexoInput | tbl_medicoCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_medicoCreateManyTbl_sexoInputEnvelope
    connect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
  }

  export type tbl_responsavelCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_sexoInput, tbl_responsavelUncheckedCreateWithoutTbl_sexoInput> | tbl_responsavelCreateWithoutTbl_sexoInput[] | tbl_responsavelUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_sexoInput | tbl_responsavelCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_responsavelCreateManyTbl_sexoInputEnvelope
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
  }

  export type tbl_bebeUncheckedCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_sexoInput, tbl_bebeUncheckedCreateWithoutTbl_sexoInput> | tbl_bebeCreateWithoutTbl_sexoInput[] | tbl_bebeUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_sexoInput | tbl_bebeCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_bebeCreateManyTbl_sexoInputEnvelope
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
  }

  export type tbl_medicoUncheckedCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_sexoInput, tbl_medicoUncheckedCreateWithoutTbl_sexoInput> | tbl_medicoCreateWithoutTbl_sexoInput[] | tbl_medicoUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_sexoInput | tbl_medicoCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_medicoCreateManyTbl_sexoInputEnvelope
    connect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
  }

  export type tbl_responsavelUncheckedCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_sexoInput, tbl_responsavelUncheckedCreateWithoutTbl_sexoInput> | tbl_responsavelCreateWithoutTbl_sexoInput[] | tbl_responsavelUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_sexoInput | tbl_responsavelCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_responsavelCreateManyTbl_sexoInputEnvelope
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
  }

  export type tbl_bebeUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_sexoInput, tbl_bebeUncheckedCreateWithoutTbl_sexoInput> | tbl_bebeCreateWithoutTbl_sexoInput[] | tbl_bebeUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_sexoInput | tbl_bebeCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_bebeUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_bebeUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_bebeCreateManyTbl_sexoInputEnvelope
    set?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    disconnect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    delete?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    update?: tbl_bebeUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_bebeUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_bebeUpdateManyWithWhereWithoutTbl_sexoInput | tbl_bebeUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_bebeScalarWhereInput | tbl_bebeScalarWhereInput[]
  }

  export type tbl_medicoUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_sexoInput, tbl_medicoUncheckedCreateWithoutTbl_sexoInput> | tbl_medicoCreateWithoutTbl_sexoInput[] | tbl_medicoUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_sexoInput | tbl_medicoCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_medicoUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_medicoUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_medicoCreateManyTbl_sexoInputEnvelope
    set?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    disconnect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    delete?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    connect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    update?: tbl_medicoUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_medicoUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_medicoUpdateManyWithWhereWithoutTbl_sexoInput | tbl_medicoUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_medicoScalarWhereInput | tbl_medicoScalarWhereInput[]
  }

  export type tbl_responsavelUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_sexoInput, tbl_responsavelUncheckedCreateWithoutTbl_sexoInput> | tbl_responsavelCreateWithoutTbl_sexoInput[] | tbl_responsavelUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_sexoInput | tbl_responsavelCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_responsavelUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_responsavelUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_responsavelCreateManyTbl_sexoInputEnvelope
    set?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    disconnect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    delete?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    update?: tbl_responsavelUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_responsavelUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_responsavelUpdateManyWithWhereWithoutTbl_sexoInput | tbl_responsavelUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_responsavelScalarWhereInput | tbl_responsavelScalarWhereInput[]
  }

  export type tbl_bebeUncheckedUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_bebeCreateWithoutTbl_sexoInput, tbl_bebeUncheckedCreateWithoutTbl_sexoInput> | tbl_bebeCreateWithoutTbl_sexoInput[] | tbl_bebeUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_bebeCreateOrConnectWithoutTbl_sexoInput | tbl_bebeCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_bebeUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_bebeUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_bebeCreateManyTbl_sexoInputEnvelope
    set?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    disconnect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    delete?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    connect?: tbl_bebeWhereUniqueInput | tbl_bebeWhereUniqueInput[]
    update?: tbl_bebeUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_bebeUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_bebeUpdateManyWithWhereWithoutTbl_sexoInput | tbl_bebeUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_bebeScalarWhereInput | tbl_bebeScalarWhereInput[]
  }

  export type tbl_medicoUncheckedUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_sexoInput, tbl_medicoUncheckedCreateWithoutTbl_sexoInput> | tbl_medicoCreateWithoutTbl_sexoInput[] | tbl_medicoUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_sexoInput | tbl_medicoCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_medicoUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_medicoUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_medicoCreateManyTbl_sexoInputEnvelope
    set?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    disconnect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    delete?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    connect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    update?: tbl_medicoUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_medicoUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_medicoUpdateManyWithWhereWithoutTbl_sexoInput | tbl_medicoUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_medicoScalarWhereInput | tbl_medicoScalarWhereInput[]
  }

  export type tbl_responsavelUncheckedUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_sexoInput, tbl_responsavelUncheckedCreateWithoutTbl_sexoInput> | tbl_responsavelCreateWithoutTbl_sexoInput[] | tbl_responsavelUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_sexoInput | tbl_responsavelCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_responsavelUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_responsavelUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_responsavelCreateManyTbl_sexoInputEnvelope
    set?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    disconnect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    delete?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    update?: tbl_responsavelUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_responsavelUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_responsavelUpdateManyWithWhereWithoutTbl_sexoInput | tbl_responsavelUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_responsavelScalarWhereInput | tbl_responsavelScalarWhereInput[]
  }

  export type tbl_messagerCreateNestedManyWithoutTbl_status_messagerInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_status_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput> | tbl_messagerCreateWithoutTbl_status_messagerInput[] | tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput[]
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput | tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput[]
    createMany?: tbl_messagerCreateManyTbl_status_messagerInputEnvelope
    connect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
  }

  export type tbl_messagerUncheckedCreateNestedManyWithoutTbl_status_messagerInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_status_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput> | tbl_messagerCreateWithoutTbl_status_messagerInput[] | tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput[]
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput | tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput[]
    createMany?: tbl_messagerCreateManyTbl_status_messagerInputEnvelope
    connect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
  }

  export type tbl_messagerUpdateManyWithoutTbl_status_messagerNestedInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_status_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput> | tbl_messagerCreateWithoutTbl_status_messagerInput[] | tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput[]
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput | tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput[]
    upsert?: tbl_messagerUpsertWithWhereUniqueWithoutTbl_status_messagerInput | tbl_messagerUpsertWithWhereUniqueWithoutTbl_status_messagerInput[]
    createMany?: tbl_messagerCreateManyTbl_status_messagerInputEnvelope
    set?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    disconnect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    delete?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    connect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    update?: tbl_messagerUpdateWithWhereUniqueWithoutTbl_status_messagerInput | tbl_messagerUpdateWithWhereUniqueWithoutTbl_status_messagerInput[]
    updateMany?: tbl_messagerUpdateManyWithWhereWithoutTbl_status_messagerInput | tbl_messagerUpdateManyWithWhereWithoutTbl_status_messagerInput[]
    deleteMany?: tbl_messagerScalarWhereInput | tbl_messagerScalarWhereInput[]
  }

  export type tbl_messagerUncheckedUpdateManyWithoutTbl_status_messagerNestedInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_status_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput> | tbl_messagerCreateWithoutTbl_status_messagerInput[] | tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput[]
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput | tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput[]
    upsert?: tbl_messagerUpsertWithWhereUniqueWithoutTbl_status_messagerInput | tbl_messagerUpsertWithWhereUniqueWithoutTbl_status_messagerInput[]
    createMany?: tbl_messagerCreateManyTbl_status_messagerInputEnvelope
    set?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    disconnect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    delete?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    connect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    update?: tbl_messagerUpdateWithWhereUniqueWithoutTbl_status_messagerInput | tbl_messagerUpdateWithWhereUniqueWithoutTbl_status_messagerInput[]
    updateMany?: tbl_messagerUpdateManyWithWhereWithoutTbl_status_messagerInput | tbl_messagerUpdateManyWithWhereWithoutTbl_status_messagerInput[]
    deleteMany?: tbl_messagerScalarWhereInput | tbl_messagerScalarWhereInput[]
  }

  export type tbl_messagerCreateNestedManyWithoutTbl_type_messagerInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_type_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput> | tbl_messagerCreateWithoutTbl_type_messagerInput[] | tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput[]
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput | tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput[]
    createMany?: tbl_messagerCreateManyTbl_type_messagerInputEnvelope
    connect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
  }

  export type tbl_messagerUncheckedCreateNestedManyWithoutTbl_type_messagerInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_type_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput> | tbl_messagerCreateWithoutTbl_type_messagerInput[] | tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput[]
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput | tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput[]
    createMany?: tbl_messagerCreateManyTbl_type_messagerInputEnvelope
    connect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
  }

  export type tbl_messagerUpdateManyWithoutTbl_type_messagerNestedInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_type_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput> | tbl_messagerCreateWithoutTbl_type_messagerInput[] | tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput[]
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput | tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput[]
    upsert?: tbl_messagerUpsertWithWhereUniqueWithoutTbl_type_messagerInput | tbl_messagerUpsertWithWhereUniqueWithoutTbl_type_messagerInput[]
    createMany?: tbl_messagerCreateManyTbl_type_messagerInputEnvelope
    set?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    disconnect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    delete?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    connect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    update?: tbl_messagerUpdateWithWhereUniqueWithoutTbl_type_messagerInput | tbl_messagerUpdateWithWhereUniqueWithoutTbl_type_messagerInput[]
    updateMany?: tbl_messagerUpdateManyWithWhereWithoutTbl_type_messagerInput | tbl_messagerUpdateManyWithWhereWithoutTbl_type_messagerInput[]
    deleteMany?: tbl_messagerScalarWhereInput | tbl_messagerScalarWhereInput[]
  }

  export type tbl_messagerUncheckedUpdateManyWithoutTbl_type_messagerNestedInput = {
    create?: XOR<tbl_messagerCreateWithoutTbl_type_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput> | tbl_messagerCreateWithoutTbl_type_messagerInput[] | tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput[]
    connectOrCreate?: tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput | tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput[]
    upsert?: tbl_messagerUpsertWithWhereUniqueWithoutTbl_type_messagerInput | tbl_messagerUpsertWithWhereUniqueWithoutTbl_type_messagerInput[]
    createMany?: tbl_messagerCreateManyTbl_type_messagerInputEnvelope
    set?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    disconnect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    delete?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    connect?: tbl_messagerWhereUniqueInput | tbl_messagerWhereUniqueInput[]
    update?: tbl_messagerUpdateWithWhereUniqueWithoutTbl_type_messagerInput | tbl_messagerUpdateWithWhereUniqueWithoutTbl_type_messagerInput[]
    updateMany?: tbl_messagerUpdateManyWithWhereWithoutTbl_type_messagerInput | tbl_messagerUpdateManyWithWhereWithoutTbl_type_messagerInput[]
    deleteMany?: tbl_messagerScalarWhereInput | tbl_messagerScalarWhereInput[]
  }

  export type tbl_userCreateNestedManyWithoutTbl_type_userInput = {
    create?: XOR<tbl_userCreateWithoutTbl_type_userInput, tbl_userUncheckedCreateWithoutTbl_type_userInput> | tbl_userCreateWithoutTbl_type_userInput[] | tbl_userUncheckedCreateWithoutTbl_type_userInput[]
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_type_userInput | tbl_userCreateOrConnectWithoutTbl_type_userInput[]
    createMany?: tbl_userCreateManyTbl_type_userInputEnvelope
    connect?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
  }

  export type tbl_userUncheckedCreateNestedManyWithoutTbl_type_userInput = {
    create?: XOR<tbl_userCreateWithoutTbl_type_userInput, tbl_userUncheckedCreateWithoutTbl_type_userInput> | tbl_userCreateWithoutTbl_type_userInput[] | tbl_userUncheckedCreateWithoutTbl_type_userInput[]
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_type_userInput | tbl_userCreateOrConnectWithoutTbl_type_userInput[]
    createMany?: tbl_userCreateManyTbl_type_userInputEnvelope
    connect?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
  }

  export type tbl_userUpdateManyWithoutTbl_type_userNestedInput = {
    create?: XOR<tbl_userCreateWithoutTbl_type_userInput, tbl_userUncheckedCreateWithoutTbl_type_userInput> | tbl_userCreateWithoutTbl_type_userInput[] | tbl_userUncheckedCreateWithoutTbl_type_userInput[]
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_type_userInput | tbl_userCreateOrConnectWithoutTbl_type_userInput[]
    upsert?: tbl_userUpsertWithWhereUniqueWithoutTbl_type_userInput | tbl_userUpsertWithWhereUniqueWithoutTbl_type_userInput[]
    createMany?: tbl_userCreateManyTbl_type_userInputEnvelope
    set?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
    disconnect?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
    delete?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
    connect?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
    update?: tbl_userUpdateWithWhereUniqueWithoutTbl_type_userInput | tbl_userUpdateWithWhereUniqueWithoutTbl_type_userInput[]
    updateMany?: tbl_userUpdateManyWithWhereWithoutTbl_type_userInput | tbl_userUpdateManyWithWhereWithoutTbl_type_userInput[]
    deleteMany?: tbl_userScalarWhereInput | tbl_userScalarWhereInput[]
  }

  export type tbl_userUncheckedUpdateManyWithoutTbl_type_userNestedInput = {
    create?: XOR<tbl_userCreateWithoutTbl_type_userInput, tbl_userUncheckedCreateWithoutTbl_type_userInput> | tbl_userCreateWithoutTbl_type_userInput[] | tbl_userUncheckedCreateWithoutTbl_type_userInput[]
    connectOrCreate?: tbl_userCreateOrConnectWithoutTbl_type_userInput | tbl_userCreateOrConnectWithoutTbl_type_userInput[]
    upsert?: tbl_userUpsertWithWhereUniqueWithoutTbl_type_userInput | tbl_userUpsertWithWhereUniqueWithoutTbl_type_userInput[]
    createMany?: tbl_userCreateManyTbl_type_userInputEnvelope
    set?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
    disconnect?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
    delete?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
    connect?: tbl_userWhereUniqueInput | tbl_userWhereUniqueInput[]
    update?: tbl_userUpdateWithWhereUniqueWithoutTbl_type_userInput | tbl_userUpdateWithWhereUniqueWithoutTbl_type_userInput[]
    updateMany?: tbl_userUpdateManyWithWhereWithoutTbl_type_userInput | tbl_userUpdateManyWithWhereWithoutTbl_type_userInput[]
    deleteMany?: tbl_userScalarWhereInput | tbl_userScalarWhereInput[]
  }

  export type tbl_chatCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_chatCreateWithoutTbl_userInput, tbl_chatUncheckedCreateWithoutTbl_userInput> | tbl_chatCreateWithoutTbl_userInput[] | tbl_chatUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_chatCreateOrConnectWithoutTbl_userInput | tbl_chatCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_chatCreateManyTbl_userInputEnvelope
    connect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
  }

  export type tbl_clinicaCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_userInput, tbl_clinicaUncheckedCreateWithoutTbl_userInput> | tbl_clinicaCreateWithoutTbl_userInput[] | tbl_clinicaUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_userInput | tbl_clinicaCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_clinicaCreateManyTbl_userInputEnvelope
    connect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
  }

  export type tbl_medicoCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_userInput, tbl_medicoUncheckedCreateWithoutTbl_userInput> | tbl_medicoCreateWithoutTbl_userInput[] | tbl_medicoUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_userInput | tbl_medicoCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_medicoCreateManyTbl_userInputEnvelope
    connect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
  }

  export type tbl_responsavelCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_userInput, tbl_responsavelUncheckedCreateWithoutTbl_userInput> | tbl_responsavelCreateWithoutTbl_userInput[] | tbl_responsavelUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_userInput | tbl_responsavelCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_responsavelCreateManyTbl_userInputEnvelope
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
  }

  export type tbl_rotinaCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_rotinaCreateWithoutTbl_userInput, tbl_rotinaUncheckedCreateWithoutTbl_userInput> | tbl_rotinaCreateWithoutTbl_userInput[] | tbl_rotinaUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_rotinaCreateOrConnectWithoutTbl_userInput | tbl_rotinaCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_rotinaCreateManyTbl_userInputEnvelope
    connect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
  }

  export type tbl_type_userCreateNestedOneWithoutTbl_userInput = {
    create?: XOR<tbl_type_userCreateWithoutTbl_userInput, tbl_type_userUncheckedCreateWithoutTbl_userInput>
    connectOrCreate?: tbl_type_userCreateOrConnectWithoutTbl_userInput
    connect?: tbl_type_userWhereUniqueInput
  }

  export type tbl_chatUncheckedCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_chatCreateWithoutTbl_userInput, tbl_chatUncheckedCreateWithoutTbl_userInput> | tbl_chatCreateWithoutTbl_userInput[] | tbl_chatUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_chatCreateOrConnectWithoutTbl_userInput | tbl_chatCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_chatCreateManyTbl_userInputEnvelope
    connect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
  }

  export type tbl_clinicaUncheckedCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_userInput, tbl_clinicaUncheckedCreateWithoutTbl_userInput> | tbl_clinicaCreateWithoutTbl_userInput[] | tbl_clinicaUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_userInput | tbl_clinicaCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_clinicaCreateManyTbl_userInputEnvelope
    connect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
  }

  export type tbl_medicoUncheckedCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_userInput, tbl_medicoUncheckedCreateWithoutTbl_userInput> | tbl_medicoCreateWithoutTbl_userInput[] | tbl_medicoUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_userInput | tbl_medicoCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_medicoCreateManyTbl_userInputEnvelope
    connect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
  }

  export type tbl_responsavelUncheckedCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_userInput, tbl_responsavelUncheckedCreateWithoutTbl_userInput> | tbl_responsavelCreateWithoutTbl_userInput[] | tbl_responsavelUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_userInput | tbl_responsavelCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_responsavelCreateManyTbl_userInputEnvelope
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
  }

  export type tbl_rotinaUncheckedCreateNestedManyWithoutTbl_userInput = {
    create?: XOR<tbl_rotinaCreateWithoutTbl_userInput, tbl_rotinaUncheckedCreateWithoutTbl_userInput> | tbl_rotinaCreateWithoutTbl_userInput[] | tbl_rotinaUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_rotinaCreateOrConnectWithoutTbl_userInput | tbl_rotinaCreateOrConnectWithoutTbl_userInput[]
    createMany?: tbl_rotinaCreateManyTbl_userInputEnvelope
    connect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
  }

  export type tbl_chatUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_chatCreateWithoutTbl_userInput, tbl_chatUncheckedCreateWithoutTbl_userInput> | tbl_chatCreateWithoutTbl_userInput[] | tbl_chatUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_chatCreateOrConnectWithoutTbl_userInput | tbl_chatCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_chatUpsertWithWhereUniqueWithoutTbl_userInput | tbl_chatUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_chatCreateManyTbl_userInputEnvelope
    set?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    disconnect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    delete?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    connect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    update?: tbl_chatUpdateWithWhereUniqueWithoutTbl_userInput | tbl_chatUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_chatUpdateManyWithWhereWithoutTbl_userInput | tbl_chatUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_chatScalarWhereInput | tbl_chatScalarWhereInput[]
  }

  export type tbl_clinicaUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_userInput, tbl_clinicaUncheckedCreateWithoutTbl_userInput> | tbl_clinicaCreateWithoutTbl_userInput[] | tbl_clinicaUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_userInput | tbl_clinicaCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_clinicaUpsertWithWhereUniqueWithoutTbl_userInput | tbl_clinicaUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_clinicaCreateManyTbl_userInputEnvelope
    set?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    disconnect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    delete?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    connect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    update?: tbl_clinicaUpdateWithWhereUniqueWithoutTbl_userInput | tbl_clinicaUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_clinicaUpdateManyWithWhereWithoutTbl_userInput | tbl_clinicaUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_clinicaScalarWhereInput | tbl_clinicaScalarWhereInput[]
  }

  export type tbl_medicoUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_userInput, tbl_medicoUncheckedCreateWithoutTbl_userInput> | tbl_medicoCreateWithoutTbl_userInput[] | tbl_medicoUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_userInput | tbl_medicoCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_medicoUpsertWithWhereUniqueWithoutTbl_userInput | tbl_medicoUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_medicoCreateManyTbl_userInputEnvelope
    set?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    disconnect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    delete?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    connect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    update?: tbl_medicoUpdateWithWhereUniqueWithoutTbl_userInput | tbl_medicoUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_medicoUpdateManyWithWhereWithoutTbl_userInput | tbl_medicoUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_medicoScalarWhereInput | tbl_medicoScalarWhereInput[]
  }

  export type tbl_responsavelUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_userInput, tbl_responsavelUncheckedCreateWithoutTbl_userInput> | tbl_responsavelCreateWithoutTbl_userInput[] | tbl_responsavelUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_userInput | tbl_responsavelCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_responsavelUpsertWithWhereUniqueWithoutTbl_userInput | tbl_responsavelUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_responsavelCreateManyTbl_userInputEnvelope
    set?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    disconnect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    delete?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    update?: tbl_responsavelUpdateWithWhereUniqueWithoutTbl_userInput | tbl_responsavelUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_responsavelUpdateManyWithWhereWithoutTbl_userInput | tbl_responsavelUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_responsavelScalarWhereInput | tbl_responsavelScalarWhereInput[]
  }

  export type tbl_rotinaUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_rotinaCreateWithoutTbl_userInput, tbl_rotinaUncheckedCreateWithoutTbl_userInput> | tbl_rotinaCreateWithoutTbl_userInput[] | tbl_rotinaUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_rotinaCreateOrConnectWithoutTbl_userInput | tbl_rotinaCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_rotinaUpsertWithWhereUniqueWithoutTbl_userInput | tbl_rotinaUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_rotinaCreateManyTbl_userInputEnvelope
    set?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    disconnect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    delete?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    connect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    update?: tbl_rotinaUpdateWithWhereUniqueWithoutTbl_userInput | tbl_rotinaUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_rotinaUpdateManyWithWhereWithoutTbl_userInput | tbl_rotinaUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_rotinaScalarWhereInput | tbl_rotinaScalarWhereInput[]
  }

  export type tbl_type_userUpdateOneWithoutTbl_userNestedInput = {
    create?: XOR<tbl_type_userCreateWithoutTbl_userInput, tbl_type_userUncheckedCreateWithoutTbl_userInput>
    connectOrCreate?: tbl_type_userCreateOrConnectWithoutTbl_userInput
    upsert?: tbl_type_userUpsertWithoutTbl_userInput
    disconnect?: tbl_type_userWhereInput | boolean
    delete?: tbl_type_userWhereInput | boolean
    connect?: tbl_type_userWhereUniqueInput
    update?: XOR<XOR<tbl_type_userUpdateToOneWithWhereWithoutTbl_userInput, tbl_type_userUpdateWithoutTbl_userInput>, tbl_type_userUncheckedUpdateWithoutTbl_userInput>
  }

  export type tbl_chatUncheckedUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_chatCreateWithoutTbl_userInput, tbl_chatUncheckedCreateWithoutTbl_userInput> | tbl_chatCreateWithoutTbl_userInput[] | tbl_chatUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_chatCreateOrConnectWithoutTbl_userInput | tbl_chatCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_chatUpsertWithWhereUniqueWithoutTbl_userInput | tbl_chatUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_chatCreateManyTbl_userInputEnvelope
    set?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    disconnect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    delete?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    connect?: tbl_chatWhereUniqueInput | tbl_chatWhereUniqueInput[]
    update?: tbl_chatUpdateWithWhereUniqueWithoutTbl_userInput | tbl_chatUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_chatUpdateManyWithWhereWithoutTbl_userInput | tbl_chatUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_chatScalarWhereInput | tbl_chatScalarWhereInput[]
  }

  export type tbl_clinicaUncheckedUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_clinicaCreateWithoutTbl_userInput, tbl_clinicaUncheckedCreateWithoutTbl_userInput> | tbl_clinicaCreateWithoutTbl_userInput[] | tbl_clinicaUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_clinicaCreateOrConnectWithoutTbl_userInput | tbl_clinicaCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_clinicaUpsertWithWhereUniqueWithoutTbl_userInput | tbl_clinicaUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_clinicaCreateManyTbl_userInputEnvelope
    set?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    disconnect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    delete?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    connect?: tbl_clinicaWhereUniqueInput | tbl_clinicaWhereUniqueInput[]
    update?: tbl_clinicaUpdateWithWhereUniqueWithoutTbl_userInput | tbl_clinicaUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_clinicaUpdateManyWithWhereWithoutTbl_userInput | tbl_clinicaUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_clinicaScalarWhereInput | tbl_clinicaScalarWhereInput[]
  }

  export type tbl_medicoUncheckedUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_medicoCreateWithoutTbl_userInput, tbl_medicoUncheckedCreateWithoutTbl_userInput> | tbl_medicoCreateWithoutTbl_userInput[] | tbl_medicoUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_medicoCreateOrConnectWithoutTbl_userInput | tbl_medicoCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_medicoUpsertWithWhereUniqueWithoutTbl_userInput | tbl_medicoUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_medicoCreateManyTbl_userInputEnvelope
    set?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    disconnect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    delete?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    connect?: tbl_medicoWhereUniqueInput | tbl_medicoWhereUniqueInput[]
    update?: tbl_medicoUpdateWithWhereUniqueWithoutTbl_userInput | tbl_medicoUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_medicoUpdateManyWithWhereWithoutTbl_userInput | tbl_medicoUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_medicoScalarWhereInput | tbl_medicoScalarWhereInput[]
  }

  export type tbl_responsavelUncheckedUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_responsavelCreateWithoutTbl_userInput, tbl_responsavelUncheckedCreateWithoutTbl_userInput> | tbl_responsavelCreateWithoutTbl_userInput[] | tbl_responsavelUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_responsavelCreateOrConnectWithoutTbl_userInput | tbl_responsavelCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_responsavelUpsertWithWhereUniqueWithoutTbl_userInput | tbl_responsavelUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_responsavelCreateManyTbl_userInputEnvelope
    set?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    disconnect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    delete?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    connect?: tbl_responsavelWhereUniqueInput | tbl_responsavelWhereUniqueInput[]
    update?: tbl_responsavelUpdateWithWhereUniqueWithoutTbl_userInput | tbl_responsavelUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_responsavelUpdateManyWithWhereWithoutTbl_userInput | tbl_responsavelUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_responsavelScalarWhereInput | tbl_responsavelScalarWhereInput[]
  }

  export type tbl_rotinaUncheckedUpdateManyWithoutTbl_userNestedInput = {
    create?: XOR<tbl_rotinaCreateWithoutTbl_userInput, tbl_rotinaUncheckedCreateWithoutTbl_userInput> | tbl_rotinaCreateWithoutTbl_userInput[] | tbl_rotinaUncheckedCreateWithoutTbl_userInput[]
    connectOrCreate?: tbl_rotinaCreateOrConnectWithoutTbl_userInput | tbl_rotinaCreateOrConnectWithoutTbl_userInput[]
    upsert?: tbl_rotinaUpsertWithWhereUniqueWithoutTbl_userInput | tbl_rotinaUpsertWithWhereUniqueWithoutTbl_userInput[]
    createMany?: tbl_rotinaCreateManyTbl_userInputEnvelope
    set?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    disconnect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    delete?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    connect?: tbl_rotinaWhereUniqueInput | tbl_rotinaWhereUniqueInput[]
    update?: tbl_rotinaUpdateWithWhereUniqueWithoutTbl_userInput | tbl_rotinaUpdateWithWhereUniqueWithoutTbl_userInput[]
    updateMany?: tbl_rotinaUpdateManyWithWhereWithoutTbl_userInput | tbl_rotinaUpdateManyWithWhereWithoutTbl_userInput[]
    deleteMany?: tbl_rotinaScalarWhereInput | tbl_rotinaScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type tbl_cepCreateWithoutTbl_bebeInput = {
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_cepInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_cepInput
  }

  export type tbl_cepUncheckedCreateWithoutTbl_bebeInput = {
    id_cep?: number
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_cepInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_cepInput
  }

  export type tbl_cepCreateOrConnectWithoutTbl_bebeInput = {
    where: tbl_cepWhereUniqueInput
    create: XOR<tbl_cepCreateWithoutTbl_bebeInput, tbl_cepUncheckedCreateWithoutTbl_bebeInput>
  }

  export type tbl_sangueCreateWithoutTbl_bebeInput = {
    tipo_sanguineo: string
  }

  export type tbl_sangueUncheckedCreateWithoutTbl_bebeInput = {
    id_sangue?: number
    tipo_sanguineo: string
  }

  export type tbl_sangueCreateOrConnectWithoutTbl_bebeInput = {
    where: tbl_sangueWhereUniqueInput
    create: XOR<tbl_sangueCreateWithoutTbl_bebeInput, tbl_sangueUncheckedCreateWithoutTbl_bebeInput>
  }

  export type tbl_sexoCreateWithoutTbl_bebeInput = {
    sexo: string
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_sexoInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateWithoutTbl_bebeInput = {
    id_sexo?: number
    sexo: string
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoCreateOrConnectWithoutTbl_bebeInput = {
    where: tbl_sexoWhereUniqueInput
    create: XOR<tbl_sexoCreateWithoutTbl_bebeInput, tbl_sexoUncheckedCreateWithoutTbl_bebeInput>
  }

  export type tbl_responsavel_bebeCreateWithoutTbl_bebeInput = {
    tbl_responsavel?: tbl_responsavelCreateNestedOneWithoutTbl_responsavel_bebeInput
  }

  export type tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput = {
    id_bebe_responsavel?: number
    id_responsavel?: number | null
  }

  export type tbl_responsavel_bebeCreateOrConnectWithoutTbl_bebeInput = {
    where: tbl_responsavel_bebeWhereUniqueInput
    create: XOR<tbl_responsavel_bebeCreateWithoutTbl_bebeInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput>
  }

  export type tbl_responsavel_bebeCreateManyTbl_bebeInputEnvelope = {
    data: tbl_responsavel_bebeCreateManyTbl_bebeInput | tbl_responsavel_bebeCreateManyTbl_bebeInput[]
    skipDuplicates?: boolean
  }

  export type tbl_cepUpsertWithoutTbl_bebeInput = {
    update: XOR<tbl_cepUpdateWithoutTbl_bebeInput, tbl_cepUncheckedUpdateWithoutTbl_bebeInput>
    create: XOR<tbl_cepCreateWithoutTbl_bebeInput, tbl_cepUncheckedCreateWithoutTbl_bebeInput>
    where?: tbl_cepWhereInput
  }

  export type tbl_cepUpdateToOneWithWhereWithoutTbl_bebeInput = {
    where?: tbl_cepWhereInput
    data: XOR<tbl_cepUpdateWithoutTbl_bebeInput, tbl_cepUncheckedUpdateWithoutTbl_bebeInput>
  }

  export type tbl_cepUpdateWithoutTbl_bebeInput = {
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_cepNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_cepNestedInput
  }

  export type tbl_cepUncheckedUpdateWithoutTbl_bebeInput = {
    id_cep?: IntFieldUpdateOperationsInput | number
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_cepNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_cepNestedInput
  }

  export type tbl_sangueUpsertWithoutTbl_bebeInput = {
    update: XOR<tbl_sangueUpdateWithoutTbl_bebeInput, tbl_sangueUncheckedUpdateWithoutTbl_bebeInput>
    create: XOR<tbl_sangueCreateWithoutTbl_bebeInput, tbl_sangueUncheckedCreateWithoutTbl_bebeInput>
    where?: tbl_sangueWhereInput
  }

  export type tbl_sangueUpdateToOneWithWhereWithoutTbl_bebeInput = {
    where?: tbl_sangueWhereInput
    data: XOR<tbl_sangueUpdateWithoutTbl_bebeInput, tbl_sangueUncheckedUpdateWithoutTbl_bebeInput>
  }

  export type tbl_sangueUpdateWithoutTbl_bebeInput = {
    tipo_sanguineo?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_sangueUncheckedUpdateWithoutTbl_bebeInput = {
    id_sangue?: IntFieldUpdateOperationsInput | number
    tipo_sanguineo?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_sexoUpsertWithoutTbl_bebeInput = {
    update: XOR<tbl_sexoUpdateWithoutTbl_bebeInput, tbl_sexoUncheckedUpdateWithoutTbl_bebeInput>
    create: XOR<tbl_sexoCreateWithoutTbl_bebeInput, tbl_sexoUncheckedCreateWithoutTbl_bebeInput>
    where?: tbl_sexoWhereInput
  }

  export type tbl_sexoUpdateToOneWithWhereWithoutTbl_bebeInput = {
    where?: tbl_sexoWhereInput
    data: XOR<tbl_sexoUpdateWithoutTbl_bebeInput, tbl_sexoUncheckedUpdateWithoutTbl_bebeInput>
  }

  export type tbl_sexoUpdateWithoutTbl_bebeInput = {
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_sexoNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateWithoutTbl_bebeInput = {
    id_sexo?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_bebeInput = {
    where: tbl_responsavel_bebeWhereUniqueInput
    update: XOR<tbl_responsavel_bebeUpdateWithoutTbl_bebeInput, tbl_responsavel_bebeUncheckedUpdateWithoutTbl_bebeInput>
    create: XOR<tbl_responsavel_bebeCreateWithoutTbl_bebeInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_bebeInput>
  }

  export type tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_bebeInput = {
    where: tbl_responsavel_bebeWhereUniqueInput
    data: XOR<tbl_responsavel_bebeUpdateWithoutTbl_bebeInput, tbl_responsavel_bebeUncheckedUpdateWithoutTbl_bebeInput>
  }

  export type tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_bebeInput = {
    where: tbl_responsavel_bebeScalarWhereInput
    data: XOR<tbl_responsavel_bebeUpdateManyMutationInput, tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_bebeInput>
  }

  export type tbl_responsavel_bebeScalarWhereInput = {
    AND?: tbl_responsavel_bebeScalarWhereInput | tbl_responsavel_bebeScalarWhereInput[]
    OR?: tbl_responsavel_bebeScalarWhereInput[]
    NOT?: tbl_responsavel_bebeScalarWhereInput | tbl_responsavel_bebeScalarWhereInput[]
    id_bebe_responsavel?: IntFilter<"tbl_responsavel_bebe"> | number
    id_bebe?: IntNullableFilter<"tbl_responsavel_bebe"> | number | null
    id_responsavel?: IntNullableFilter<"tbl_responsavel_bebe"> | number | null
  }

  export type tbl_bebeCreateWithoutTbl_cepInput = {
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    tbl_sangue?: tbl_sangueCreateNestedOneWithoutTbl_bebeInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_bebeInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeCreateNestedManyWithoutTbl_bebeInput
  }

  export type tbl_bebeUncheckedCreateWithoutTbl_cepInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_sexo?: number | null
    id_sangue?: number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_bebeInput
  }

  export type tbl_bebeCreateOrConnectWithoutTbl_cepInput = {
    where: tbl_bebeWhereUniqueInput
    create: XOR<tbl_bebeCreateWithoutTbl_cepInput, tbl_bebeUncheckedCreateWithoutTbl_cepInput>
  }

  export type tbl_bebeCreateManyTbl_cepInputEnvelope = {
    data: tbl_bebeCreateManyTbl_cepInput | tbl_bebeCreateManyTbl_cepInput[]
    skipDuplicates?: boolean
  }

  export type tbl_clinicaCreateWithoutTbl_cepInput = {
    nome: string
    cnpj: string
    telefone: string
    email: string
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_clinicaInput
    tbl_especialidade_clinica?: tbl_especialidade_clinicaCreateNestedManyWithoutTbl_clinicaInput
  }

  export type tbl_clinicaUncheckedCreateWithoutTbl_cepInput = {
    id_clinica?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    id_user?: number | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedCreateNestedManyWithoutTbl_clinicaInput
  }

  export type tbl_clinicaCreateOrConnectWithoutTbl_cepInput = {
    where: tbl_clinicaWhereUniqueInput
    create: XOR<tbl_clinicaCreateWithoutTbl_cepInput, tbl_clinicaUncheckedCreateWithoutTbl_cepInput>
  }

  export type tbl_clinicaCreateManyTbl_cepInputEnvelope = {
    data: tbl_clinicaCreateManyTbl_cepInput | tbl_clinicaCreateManyTbl_cepInput[]
    skipDuplicates?: boolean
  }

  export type tbl_responsavelCreateWithoutTbl_cepInput = {
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_responsavelInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_responsavelInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeCreateNestedManyWithoutTbl_responsavelInput
  }

  export type tbl_responsavelUncheckedCreateWithoutTbl_cepInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_sexo?: number | null
    id_user?: number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_responsavelInput
  }

  export type tbl_responsavelCreateOrConnectWithoutTbl_cepInput = {
    where: tbl_responsavelWhereUniqueInput
    create: XOR<tbl_responsavelCreateWithoutTbl_cepInput, tbl_responsavelUncheckedCreateWithoutTbl_cepInput>
  }

  export type tbl_responsavelCreateManyTbl_cepInputEnvelope = {
    data: tbl_responsavelCreateManyTbl_cepInput | tbl_responsavelCreateManyTbl_cepInput[]
    skipDuplicates?: boolean
  }

  export type tbl_bebeUpsertWithWhereUniqueWithoutTbl_cepInput = {
    where: tbl_bebeWhereUniqueInput
    update: XOR<tbl_bebeUpdateWithoutTbl_cepInput, tbl_bebeUncheckedUpdateWithoutTbl_cepInput>
    create: XOR<tbl_bebeCreateWithoutTbl_cepInput, tbl_bebeUncheckedCreateWithoutTbl_cepInput>
  }

  export type tbl_bebeUpdateWithWhereUniqueWithoutTbl_cepInput = {
    where: tbl_bebeWhereUniqueInput
    data: XOR<tbl_bebeUpdateWithoutTbl_cepInput, tbl_bebeUncheckedUpdateWithoutTbl_cepInput>
  }

  export type tbl_bebeUpdateManyWithWhereWithoutTbl_cepInput = {
    where: tbl_bebeScalarWhereInput
    data: XOR<tbl_bebeUpdateManyMutationInput, tbl_bebeUncheckedUpdateManyWithoutTbl_cepInput>
  }

  export type tbl_bebeScalarWhereInput = {
    AND?: tbl_bebeScalarWhereInput | tbl_bebeScalarWhereInput[]
    OR?: tbl_bebeScalarWhereInput[]
    NOT?: tbl_bebeScalarWhereInput | tbl_bebeScalarWhereInput[]
    id_bebe?: IntFilter<"tbl_bebe"> | number
    nome?: StringFilter<"tbl_bebe"> | string
    data_nascimento?: DateTimeFilter<"tbl_bebe"> | Date | string
    peso?: DecimalFilter<"tbl_bebe"> | Decimal | DecimalJsLike | number | string
    altura?: IntFilter<"tbl_bebe"> | number
    certidao_nascimento?: StringFilter<"tbl_bebe"> | string
    cpf?: StringNullableFilter<"tbl_bebe"> | string | null
    cartao_medico?: StringFilter<"tbl_bebe"> | string
    imagem_certidao?: StringFilter<"tbl_bebe"> | string
    id_sexo?: IntNullableFilter<"tbl_bebe"> | number | null
    id_cep?: IntNullableFilter<"tbl_bebe"> | number | null
    id_sangue?: IntNullableFilter<"tbl_bebe"> | number | null
  }

  export type tbl_clinicaUpsertWithWhereUniqueWithoutTbl_cepInput = {
    where: tbl_clinicaWhereUniqueInput
    update: XOR<tbl_clinicaUpdateWithoutTbl_cepInput, tbl_clinicaUncheckedUpdateWithoutTbl_cepInput>
    create: XOR<tbl_clinicaCreateWithoutTbl_cepInput, tbl_clinicaUncheckedCreateWithoutTbl_cepInput>
  }

  export type tbl_clinicaUpdateWithWhereUniqueWithoutTbl_cepInput = {
    where: tbl_clinicaWhereUniqueInput
    data: XOR<tbl_clinicaUpdateWithoutTbl_cepInput, tbl_clinicaUncheckedUpdateWithoutTbl_cepInput>
  }

  export type tbl_clinicaUpdateManyWithWhereWithoutTbl_cepInput = {
    where: tbl_clinicaScalarWhereInput
    data: XOR<tbl_clinicaUpdateManyMutationInput, tbl_clinicaUncheckedUpdateManyWithoutTbl_cepInput>
  }

  export type tbl_clinicaScalarWhereInput = {
    AND?: tbl_clinicaScalarWhereInput | tbl_clinicaScalarWhereInput[]
    OR?: tbl_clinicaScalarWhereInput[]
    NOT?: tbl_clinicaScalarWhereInput | tbl_clinicaScalarWhereInput[]
    id_clinica?: IntFilter<"tbl_clinica"> | number
    nome?: StringFilter<"tbl_clinica"> | string
    cnpj?: StringFilter<"tbl_clinica"> | string
    telefone?: StringFilter<"tbl_clinica"> | string
    email?: StringFilter<"tbl_clinica"> | string
    id_cep?: IntNullableFilter<"tbl_clinica"> | number | null
    id_user?: IntNullableFilter<"tbl_clinica"> | number | null
  }

  export type tbl_responsavelUpsertWithWhereUniqueWithoutTbl_cepInput = {
    where: tbl_responsavelWhereUniqueInput
    update: XOR<tbl_responsavelUpdateWithoutTbl_cepInput, tbl_responsavelUncheckedUpdateWithoutTbl_cepInput>
    create: XOR<tbl_responsavelCreateWithoutTbl_cepInput, tbl_responsavelUncheckedCreateWithoutTbl_cepInput>
  }

  export type tbl_responsavelUpdateWithWhereUniqueWithoutTbl_cepInput = {
    where: tbl_responsavelWhereUniqueInput
    data: XOR<tbl_responsavelUpdateWithoutTbl_cepInput, tbl_responsavelUncheckedUpdateWithoutTbl_cepInput>
  }

  export type tbl_responsavelUpdateManyWithWhereWithoutTbl_cepInput = {
    where: tbl_responsavelScalarWhereInput
    data: XOR<tbl_responsavelUpdateManyMutationInput, tbl_responsavelUncheckedUpdateManyWithoutTbl_cepInput>
  }

  export type tbl_responsavelScalarWhereInput = {
    AND?: tbl_responsavelScalarWhereInput | tbl_responsavelScalarWhereInput[]
    OR?: tbl_responsavelScalarWhereInput[]
    NOT?: tbl_responsavelScalarWhereInput | tbl_responsavelScalarWhereInput[]
    id_responsavel?: IntFilter<"tbl_responsavel"> | number
    nome?: StringFilter<"tbl_responsavel"> | string
    data_nascimento?: DateTimeFilter<"tbl_responsavel"> | Date | string
    cpf?: StringFilter<"tbl_responsavel"> | string
    telefone?: StringFilter<"tbl_responsavel"> | string
    arquivo?: StringFilter<"tbl_responsavel"> | string
    cartao_medico?: StringFilter<"tbl_responsavel"> | string
    cep?: StringFilter<"tbl_responsavel"> | string
    id_sexo?: IntNullableFilter<"tbl_responsavel"> | number | null
    id_user?: IntNullableFilter<"tbl_responsavel"> | number | null
    id_cep?: IntNullableFilter<"tbl_responsavel"> | number | null
  }

  export type tbl_messagerCreateWithoutTbl_chatInput = {
    conteudo: string
    tbl_status_messager?: tbl_status_messagerCreateNestedOneWithoutTbl_messagerInput
    tbl_type_messager?: tbl_type_messagerCreateNestedOneWithoutTbl_messagerInput
  }

  export type tbl_messagerUncheckedCreateWithoutTbl_chatInput = {
    id_mensagem?: number
    conteudo: string
    id_tipo_mensagem?: number | null
    id_status?: number | null
  }

  export type tbl_messagerCreateOrConnectWithoutTbl_chatInput = {
    where: tbl_messagerWhereUniqueInput
    create: XOR<tbl_messagerCreateWithoutTbl_chatInput, tbl_messagerUncheckedCreateWithoutTbl_chatInput>
  }

  export type tbl_userCreateWithoutTbl_chatInput = {
    email: string
    senha: string
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaCreateNestedManyWithoutTbl_userInput
    tbl_type_user?: tbl_type_userCreateNestedOneWithoutTbl_userInput
  }

  export type tbl_userUncheckedCreateWithoutTbl_chatInput = {
    id_user?: number
    email: string
    senha: string
    id_tipo?: number | null
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaUncheckedCreateNestedManyWithoutTbl_userInput
  }

  export type tbl_userCreateOrConnectWithoutTbl_chatInput = {
    where: tbl_userWhereUniqueInput
    create: XOR<tbl_userCreateWithoutTbl_chatInput, tbl_userUncheckedCreateWithoutTbl_chatInput>
  }

  export type tbl_messagerUpsertWithoutTbl_chatInput = {
    update: XOR<tbl_messagerUpdateWithoutTbl_chatInput, tbl_messagerUncheckedUpdateWithoutTbl_chatInput>
    create: XOR<tbl_messagerCreateWithoutTbl_chatInput, tbl_messagerUncheckedCreateWithoutTbl_chatInput>
    where?: tbl_messagerWhereInput
  }

  export type tbl_messagerUpdateToOneWithWhereWithoutTbl_chatInput = {
    where?: tbl_messagerWhereInput
    data: XOR<tbl_messagerUpdateWithoutTbl_chatInput, tbl_messagerUncheckedUpdateWithoutTbl_chatInput>
  }

  export type tbl_messagerUpdateWithoutTbl_chatInput = {
    conteudo?: StringFieldUpdateOperationsInput | string
    tbl_status_messager?: tbl_status_messagerUpdateOneWithoutTbl_messagerNestedInput
    tbl_type_messager?: tbl_type_messagerUpdateOneWithoutTbl_messagerNestedInput
  }

  export type tbl_messagerUncheckedUpdateWithoutTbl_chatInput = {
    id_mensagem?: IntFieldUpdateOperationsInput | number
    conteudo?: StringFieldUpdateOperationsInput | string
    id_tipo_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
    id_status?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_userUpsertWithoutTbl_chatInput = {
    update: XOR<tbl_userUpdateWithoutTbl_chatInput, tbl_userUncheckedUpdateWithoutTbl_chatInput>
    create: XOR<tbl_userCreateWithoutTbl_chatInput, tbl_userUncheckedCreateWithoutTbl_chatInput>
    where?: tbl_userWhereInput
  }

  export type tbl_userUpdateToOneWithWhereWithoutTbl_chatInput = {
    where?: tbl_userWhereInput
    data: XOR<tbl_userUpdateWithoutTbl_chatInput, tbl_userUncheckedUpdateWithoutTbl_chatInput>
  }

  export type tbl_userUpdateWithoutTbl_chatInput = {
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUpdateManyWithoutTbl_userNestedInput
    tbl_type_user?: tbl_type_userUpdateOneWithoutTbl_userNestedInput
  }

  export type tbl_userUncheckedUpdateWithoutTbl_chatInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    id_tipo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUncheckedUpdateManyWithoutTbl_userNestedInput
  }

  export type tbl_cepCreateWithoutTbl_clinicaInput = {
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
    tbl_bebe?: tbl_bebeCreateNestedManyWithoutTbl_cepInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_cepInput
  }

  export type tbl_cepUncheckedCreateWithoutTbl_clinicaInput = {
    id_cep?: number
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
    tbl_bebe?: tbl_bebeUncheckedCreateNestedManyWithoutTbl_cepInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_cepInput
  }

  export type tbl_cepCreateOrConnectWithoutTbl_clinicaInput = {
    where: tbl_cepWhereUniqueInput
    create: XOR<tbl_cepCreateWithoutTbl_clinicaInput, tbl_cepUncheckedCreateWithoutTbl_clinicaInput>
  }

  export type tbl_userCreateWithoutTbl_clinicaInput = {
    email: string
    senha: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaCreateNestedManyWithoutTbl_userInput
    tbl_type_user?: tbl_type_userCreateNestedOneWithoutTbl_userInput
  }

  export type tbl_userUncheckedCreateWithoutTbl_clinicaInput = {
    id_user?: number
    email: string
    senha: string
    id_tipo?: number | null
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaUncheckedCreateNestedManyWithoutTbl_userInput
  }

  export type tbl_userCreateOrConnectWithoutTbl_clinicaInput = {
    where: tbl_userWhereUniqueInput
    create: XOR<tbl_userCreateWithoutTbl_clinicaInput, tbl_userUncheckedCreateWithoutTbl_clinicaInput>
  }

  export type tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput = {
    tbl_especialidade?: tbl_especialidadeCreateNestedOneWithoutTbl_especialidade_clinicaInput
  }

  export type tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput = {
    id?: number
    id_especialidade?: number | null
  }

  export type tbl_especialidade_clinicaCreateOrConnectWithoutTbl_clinicaInput = {
    where: tbl_especialidade_clinicaWhereUniqueInput
    create: XOR<tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput>
  }

  export type tbl_especialidade_clinicaCreateManyTbl_clinicaInputEnvelope = {
    data: tbl_especialidade_clinicaCreateManyTbl_clinicaInput | tbl_especialidade_clinicaCreateManyTbl_clinicaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_cepUpsertWithoutTbl_clinicaInput = {
    update: XOR<tbl_cepUpdateWithoutTbl_clinicaInput, tbl_cepUncheckedUpdateWithoutTbl_clinicaInput>
    create: XOR<tbl_cepCreateWithoutTbl_clinicaInput, tbl_cepUncheckedCreateWithoutTbl_clinicaInput>
    where?: tbl_cepWhereInput
  }

  export type tbl_cepUpdateToOneWithWhereWithoutTbl_clinicaInput = {
    where?: tbl_cepWhereInput
    data: XOR<tbl_cepUpdateWithoutTbl_clinicaInput, tbl_cepUncheckedUpdateWithoutTbl_clinicaInput>
  }

  export type tbl_cepUpdateWithoutTbl_clinicaInput = {
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_bebe?: tbl_bebeUpdateManyWithoutTbl_cepNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_cepNestedInput
  }

  export type tbl_cepUncheckedUpdateWithoutTbl_clinicaInput = {
    id_cep?: IntFieldUpdateOperationsInput | number
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_bebe?: tbl_bebeUncheckedUpdateManyWithoutTbl_cepNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_cepNestedInput
  }

  export type tbl_userUpsertWithoutTbl_clinicaInput = {
    update: XOR<tbl_userUpdateWithoutTbl_clinicaInput, tbl_userUncheckedUpdateWithoutTbl_clinicaInput>
    create: XOR<tbl_userCreateWithoutTbl_clinicaInput, tbl_userUncheckedCreateWithoutTbl_clinicaInput>
    where?: tbl_userWhereInput
  }

  export type tbl_userUpdateToOneWithWhereWithoutTbl_clinicaInput = {
    where?: tbl_userWhereInput
    data: XOR<tbl_userUpdateWithoutTbl_clinicaInput, tbl_userUncheckedUpdateWithoutTbl_clinicaInput>
  }

  export type tbl_userUpdateWithoutTbl_clinicaInput = {
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUpdateManyWithoutTbl_userNestedInput
    tbl_type_user?: tbl_type_userUpdateOneWithoutTbl_userNestedInput
  }

  export type tbl_userUncheckedUpdateWithoutTbl_clinicaInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    id_tipo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUncheckedUpdateManyWithoutTbl_userNestedInput
  }

  export type tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_clinicaInput = {
    where: tbl_especialidade_clinicaWhereUniqueInput
    update: XOR<tbl_especialidade_clinicaUpdateWithoutTbl_clinicaInput, tbl_especialidade_clinicaUncheckedUpdateWithoutTbl_clinicaInput>
    create: XOR<tbl_especialidade_clinicaCreateWithoutTbl_clinicaInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_clinicaInput>
  }

  export type tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_clinicaInput = {
    where: tbl_especialidade_clinicaWhereUniqueInput
    data: XOR<tbl_especialidade_clinicaUpdateWithoutTbl_clinicaInput, tbl_especialidade_clinicaUncheckedUpdateWithoutTbl_clinicaInput>
  }

  export type tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_clinicaInput = {
    where: tbl_especialidade_clinicaScalarWhereInput
    data: XOR<tbl_especialidade_clinicaUpdateManyMutationInput, tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_clinicaInput>
  }

  export type tbl_especialidade_clinicaScalarWhereInput = {
    AND?: tbl_especialidade_clinicaScalarWhereInput | tbl_especialidade_clinicaScalarWhereInput[]
    OR?: tbl_especialidade_clinicaScalarWhereInput[]
    NOT?: tbl_especialidade_clinicaScalarWhereInput | tbl_especialidade_clinicaScalarWhereInput[]
    id?: IntFilter<"tbl_especialidade_clinica"> | number
    id_clinica?: IntNullableFilter<"tbl_especialidade_clinica"> | number | null
    id_especialidade?: IntNullableFilter<"tbl_especialidade_clinica"> | number | null
  }

  export type tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput = {
    tbl_clinica?: tbl_clinicaCreateNestedOneWithoutTbl_especialidade_clinicaInput
  }

  export type tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput = {
    id?: number
    id_clinica?: number | null
  }

  export type tbl_especialidade_clinicaCreateOrConnectWithoutTbl_especialidadeInput = {
    where: tbl_especialidade_clinicaWhereUniqueInput
    create: XOR<tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput>
  }

  export type tbl_especialidade_clinicaCreateManyTbl_especialidadeInputEnvelope = {
    data: tbl_especialidade_clinicaCreateManyTbl_especialidadeInput | tbl_especialidade_clinicaCreateManyTbl_especialidadeInput[]
    skipDuplicates?: boolean
  }

  export type tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput = {
    tbl_medico?: tbl_medicoCreateNestedOneWithoutTbl_especialidade_medicoInput
  }

  export type tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput = {
    id?: number
    id_medico?: number | null
  }

  export type tbl_especialidade_medicoCreateOrConnectWithoutTbl_especialidadeInput = {
    where: tbl_especialidade_medicoWhereUniqueInput
    create: XOR<tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput>
  }

  export type tbl_especialidade_medicoCreateManyTbl_especialidadeInputEnvelope = {
    data: tbl_especialidade_medicoCreateManyTbl_especialidadeInput | tbl_especialidade_medicoCreateManyTbl_especialidadeInput[]
    skipDuplicates?: boolean
  }

  export type tbl_especialidade_clinicaUpsertWithWhereUniqueWithoutTbl_especialidadeInput = {
    where: tbl_especialidade_clinicaWhereUniqueInput
    update: XOR<tbl_especialidade_clinicaUpdateWithoutTbl_especialidadeInput, tbl_especialidade_clinicaUncheckedUpdateWithoutTbl_especialidadeInput>
    create: XOR<tbl_especialidade_clinicaCreateWithoutTbl_especialidadeInput, tbl_especialidade_clinicaUncheckedCreateWithoutTbl_especialidadeInput>
  }

  export type tbl_especialidade_clinicaUpdateWithWhereUniqueWithoutTbl_especialidadeInput = {
    where: tbl_especialidade_clinicaWhereUniqueInput
    data: XOR<tbl_especialidade_clinicaUpdateWithoutTbl_especialidadeInput, tbl_especialidade_clinicaUncheckedUpdateWithoutTbl_especialidadeInput>
  }

  export type tbl_especialidade_clinicaUpdateManyWithWhereWithoutTbl_especialidadeInput = {
    where: tbl_especialidade_clinicaScalarWhereInput
    data: XOR<tbl_especialidade_clinicaUpdateManyMutationInput, tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_especialidadeInput>
  }

  export type tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_especialidadeInput = {
    where: tbl_especialidade_medicoWhereUniqueInput
    update: XOR<tbl_especialidade_medicoUpdateWithoutTbl_especialidadeInput, tbl_especialidade_medicoUncheckedUpdateWithoutTbl_especialidadeInput>
    create: XOR<tbl_especialidade_medicoCreateWithoutTbl_especialidadeInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_especialidadeInput>
  }

  export type tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_especialidadeInput = {
    where: tbl_especialidade_medicoWhereUniqueInput
    data: XOR<tbl_especialidade_medicoUpdateWithoutTbl_especialidadeInput, tbl_especialidade_medicoUncheckedUpdateWithoutTbl_especialidadeInput>
  }

  export type tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_especialidadeInput = {
    where: tbl_especialidade_medicoScalarWhereInput
    data: XOR<tbl_especialidade_medicoUpdateManyMutationInput, tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_especialidadeInput>
  }

  export type tbl_especialidade_medicoScalarWhereInput = {
    AND?: tbl_especialidade_medicoScalarWhereInput | tbl_especialidade_medicoScalarWhereInput[]
    OR?: tbl_especialidade_medicoScalarWhereInput[]
    NOT?: tbl_especialidade_medicoScalarWhereInput | tbl_especialidade_medicoScalarWhereInput[]
    id?: IntFilter<"tbl_especialidade_medico"> | number
    id_medico?: IntNullableFilter<"tbl_especialidade_medico"> | number | null
    id_especialidade?: IntNullableFilter<"tbl_especialidade_medico"> | number | null
  }

  export type tbl_clinicaCreateWithoutTbl_especialidade_clinicaInput = {
    nome: string
    cnpj: string
    telefone: string
    email: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_clinicaInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_clinicaInput
  }

  export type tbl_clinicaUncheckedCreateWithoutTbl_especialidade_clinicaInput = {
    id_clinica?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    id_cep?: number | null
    id_user?: number | null
  }

  export type tbl_clinicaCreateOrConnectWithoutTbl_especialidade_clinicaInput = {
    where: tbl_clinicaWhereUniqueInput
    create: XOR<tbl_clinicaCreateWithoutTbl_especialidade_clinicaInput, tbl_clinicaUncheckedCreateWithoutTbl_especialidade_clinicaInput>
  }

  export type tbl_especialidadeCreateWithoutTbl_especialidade_clinicaInput = {
    especialidade?: string | null
    tbl_especialidade_medico?: tbl_especialidade_medicoCreateNestedManyWithoutTbl_especialidadeInput
  }

  export type tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_clinicaInput = {
    id_especialidade?: number
    especialidade?: string | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedCreateNestedManyWithoutTbl_especialidadeInput
  }

  export type tbl_especialidadeCreateOrConnectWithoutTbl_especialidade_clinicaInput = {
    where: tbl_especialidadeWhereUniqueInput
    create: XOR<tbl_especialidadeCreateWithoutTbl_especialidade_clinicaInput, tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_clinicaInput>
  }

  export type tbl_clinicaUpsertWithoutTbl_especialidade_clinicaInput = {
    update: XOR<tbl_clinicaUpdateWithoutTbl_especialidade_clinicaInput, tbl_clinicaUncheckedUpdateWithoutTbl_especialidade_clinicaInput>
    create: XOR<tbl_clinicaCreateWithoutTbl_especialidade_clinicaInput, tbl_clinicaUncheckedCreateWithoutTbl_especialidade_clinicaInput>
    where?: tbl_clinicaWhereInput
  }

  export type tbl_clinicaUpdateToOneWithWhereWithoutTbl_especialidade_clinicaInput = {
    where?: tbl_clinicaWhereInput
    data: XOR<tbl_clinicaUpdateWithoutTbl_especialidade_clinicaInput, tbl_clinicaUncheckedUpdateWithoutTbl_especialidade_clinicaInput>
  }

  export type tbl_clinicaUpdateWithoutTbl_especialidade_clinicaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_clinicaNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_clinicaNestedInput
  }

  export type tbl_clinicaUncheckedUpdateWithoutTbl_especialidade_clinicaInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidadeUpsertWithoutTbl_especialidade_clinicaInput = {
    update: XOR<tbl_especialidadeUpdateWithoutTbl_especialidade_clinicaInput, tbl_especialidadeUncheckedUpdateWithoutTbl_especialidade_clinicaInput>
    create: XOR<tbl_especialidadeCreateWithoutTbl_especialidade_clinicaInput, tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_clinicaInput>
    where?: tbl_especialidadeWhereInput
  }

  export type tbl_especialidadeUpdateToOneWithWhereWithoutTbl_especialidade_clinicaInput = {
    where?: tbl_especialidadeWhereInput
    data: XOR<tbl_especialidadeUpdateWithoutTbl_especialidade_clinicaInput, tbl_especialidadeUncheckedUpdateWithoutTbl_especialidade_clinicaInput>
  }

  export type tbl_especialidadeUpdateWithoutTbl_especialidade_clinicaInput = {
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUpdateManyWithoutTbl_especialidadeNestedInput
  }

  export type tbl_especialidadeUncheckedUpdateWithoutTbl_especialidade_clinicaInput = {
    id_especialidade?: IntFieldUpdateOperationsInput | number
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_especialidadeNestedInput
  }

  export type tbl_especialidadeCreateWithoutTbl_especialidade_medicoInput = {
    especialidade?: string | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaCreateNestedManyWithoutTbl_especialidadeInput
  }

  export type tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_medicoInput = {
    id_especialidade?: number
    especialidade?: string | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedCreateNestedManyWithoutTbl_especialidadeInput
  }

  export type tbl_especialidadeCreateOrConnectWithoutTbl_especialidade_medicoInput = {
    where: tbl_especialidadeWhereUniqueInput
    create: XOR<tbl_especialidadeCreateWithoutTbl_especialidade_medicoInput, tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_medicoInput>
  }

  export type tbl_medicoCreateWithoutTbl_especialidade_medicoInput = {
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_medicoInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_medicoInput
  }

  export type tbl_medicoUncheckedCreateWithoutTbl_especialidade_medicoInput = {
    id_medico?: number
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    id_sexo?: number | null
    id_user?: number | null
  }

  export type tbl_medicoCreateOrConnectWithoutTbl_especialidade_medicoInput = {
    where: tbl_medicoWhereUniqueInput
    create: XOR<tbl_medicoCreateWithoutTbl_especialidade_medicoInput, tbl_medicoUncheckedCreateWithoutTbl_especialidade_medicoInput>
  }

  export type tbl_especialidadeUpsertWithoutTbl_especialidade_medicoInput = {
    update: XOR<tbl_especialidadeUpdateWithoutTbl_especialidade_medicoInput, tbl_especialidadeUncheckedUpdateWithoutTbl_especialidade_medicoInput>
    create: XOR<tbl_especialidadeCreateWithoutTbl_especialidade_medicoInput, tbl_especialidadeUncheckedCreateWithoutTbl_especialidade_medicoInput>
    where?: tbl_especialidadeWhereInput
  }

  export type tbl_especialidadeUpdateToOneWithWhereWithoutTbl_especialidade_medicoInput = {
    where?: tbl_especialidadeWhereInput
    data: XOR<tbl_especialidadeUpdateWithoutTbl_especialidade_medicoInput, tbl_especialidadeUncheckedUpdateWithoutTbl_especialidade_medicoInput>
  }

  export type tbl_especialidadeUpdateWithoutTbl_especialidade_medicoInput = {
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUpdateManyWithoutTbl_especialidadeNestedInput
  }

  export type tbl_especialidadeUncheckedUpdateWithoutTbl_especialidade_medicoInput = {
    id_especialidade?: IntFieldUpdateOperationsInput | number
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_especialidadeNestedInput
  }

  export type tbl_medicoUpsertWithoutTbl_especialidade_medicoInput = {
    update: XOR<tbl_medicoUpdateWithoutTbl_especialidade_medicoInput, tbl_medicoUncheckedUpdateWithoutTbl_especialidade_medicoInput>
    create: XOR<tbl_medicoCreateWithoutTbl_especialidade_medicoInput, tbl_medicoUncheckedCreateWithoutTbl_especialidade_medicoInput>
    where?: tbl_medicoWhereInput
  }

  export type tbl_medicoUpdateToOneWithWhereWithoutTbl_especialidade_medicoInput = {
    where?: tbl_medicoWhereInput
    data: XOR<tbl_medicoUpdateWithoutTbl_especialidade_medicoInput, tbl_medicoUncheckedUpdateWithoutTbl_especialidade_medicoInput>
  }

  export type tbl_medicoUpdateWithoutTbl_especialidade_medicoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_medicoNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_medicoNestedInput
  }

  export type tbl_medicoUncheckedUpdateWithoutTbl_especialidade_medicoInput = {
    id_medico?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_medicoCreateWithoutTbl_medicoInput = {
    tbl_especialidade?: tbl_especialidadeCreateNestedOneWithoutTbl_especialidade_medicoInput
  }

  export type tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput = {
    id?: number
    id_especialidade?: number | null
  }

  export type tbl_especialidade_medicoCreateOrConnectWithoutTbl_medicoInput = {
    where: tbl_especialidade_medicoWhereUniqueInput
    create: XOR<tbl_especialidade_medicoCreateWithoutTbl_medicoInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput>
  }

  export type tbl_especialidade_medicoCreateManyTbl_medicoInputEnvelope = {
    data: tbl_especialidade_medicoCreateManyTbl_medicoInput | tbl_especialidade_medicoCreateManyTbl_medicoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_sexoCreateWithoutTbl_medicoInput = {
    sexo: string
    tbl_bebe?: tbl_bebeCreateNestedManyWithoutTbl_sexoInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateWithoutTbl_medicoInput = {
    id_sexo?: number
    sexo: string
    tbl_bebe?: tbl_bebeUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoCreateOrConnectWithoutTbl_medicoInput = {
    where: tbl_sexoWhereUniqueInput
    create: XOR<tbl_sexoCreateWithoutTbl_medicoInput, tbl_sexoUncheckedCreateWithoutTbl_medicoInput>
  }

  export type tbl_userCreateWithoutTbl_medicoInput = {
    email: string
    senha: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaCreateNestedManyWithoutTbl_userInput
    tbl_type_user?: tbl_type_userCreateNestedOneWithoutTbl_userInput
  }

  export type tbl_userUncheckedCreateWithoutTbl_medicoInput = {
    id_user?: number
    email: string
    senha: string
    id_tipo?: number | null
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaUncheckedCreateNestedManyWithoutTbl_userInput
  }

  export type tbl_userCreateOrConnectWithoutTbl_medicoInput = {
    where: tbl_userWhereUniqueInput
    create: XOR<tbl_userCreateWithoutTbl_medicoInput, tbl_userUncheckedCreateWithoutTbl_medicoInput>
  }

  export type tbl_especialidade_medicoUpsertWithWhereUniqueWithoutTbl_medicoInput = {
    where: tbl_especialidade_medicoWhereUniqueInput
    update: XOR<tbl_especialidade_medicoUpdateWithoutTbl_medicoInput, tbl_especialidade_medicoUncheckedUpdateWithoutTbl_medicoInput>
    create: XOR<tbl_especialidade_medicoCreateWithoutTbl_medicoInput, tbl_especialidade_medicoUncheckedCreateWithoutTbl_medicoInput>
  }

  export type tbl_especialidade_medicoUpdateWithWhereUniqueWithoutTbl_medicoInput = {
    where: tbl_especialidade_medicoWhereUniqueInput
    data: XOR<tbl_especialidade_medicoUpdateWithoutTbl_medicoInput, tbl_especialidade_medicoUncheckedUpdateWithoutTbl_medicoInput>
  }

  export type tbl_especialidade_medicoUpdateManyWithWhereWithoutTbl_medicoInput = {
    where: tbl_especialidade_medicoScalarWhereInput
    data: XOR<tbl_especialidade_medicoUpdateManyMutationInput, tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_medicoInput>
  }

  export type tbl_sexoUpsertWithoutTbl_medicoInput = {
    update: XOR<tbl_sexoUpdateWithoutTbl_medicoInput, tbl_sexoUncheckedUpdateWithoutTbl_medicoInput>
    create: XOR<tbl_sexoCreateWithoutTbl_medicoInput, tbl_sexoUncheckedCreateWithoutTbl_medicoInput>
    where?: tbl_sexoWhereInput
  }

  export type tbl_sexoUpdateToOneWithWhereWithoutTbl_medicoInput = {
    where?: tbl_sexoWhereInput
    data: XOR<tbl_sexoUpdateWithoutTbl_medicoInput, tbl_sexoUncheckedUpdateWithoutTbl_medicoInput>
  }

  export type tbl_sexoUpdateWithoutTbl_medicoInput = {
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_bebe?: tbl_bebeUpdateManyWithoutTbl_sexoNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateWithoutTbl_medicoInput = {
    id_sexo?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_bebe?: tbl_bebeUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_userUpsertWithoutTbl_medicoInput = {
    update: XOR<tbl_userUpdateWithoutTbl_medicoInput, tbl_userUncheckedUpdateWithoutTbl_medicoInput>
    create: XOR<tbl_userCreateWithoutTbl_medicoInput, tbl_userUncheckedCreateWithoutTbl_medicoInput>
    where?: tbl_userWhereInput
  }

  export type tbl_userUpdateToOneWithWhereWithoutTbl_medicoInput = {
    where?: tbl_userWhereInput
    data: XOR<tbl_userUpdateWithoutTbl_medicoInput, tbl_userUncheckedUpdateWithoutTbl_medicoInput>
  }

  export type tbl_userUpdateWithoutTbl_medicoInput = {
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUpdateManyWithoutTbl_userNestedInput
    tbl_type_user?: tbl_type_userUpdateOneWithoutTbl_userNestedInput
  }

  export type tbl_userUncheckedUpdateWithoutTbl_medicoInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    id_tipo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUncheckedUpdateManyWithoutTbl_userNestedInput
  }

  export type tbl_chatCreateWithoutTbl_messagerInput = {
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_chatInput
  }

  export type tbl_chatUncheckedCreateWithoutTbl_messagerInput = {
    id_chat?: number
    id_user?: number | null
  }

  export type tbl_chatCreateOrConnectWithoutTbl_messagerInput = {
    where: tbl_chatWhereUniqueInput
    create: XOR<tbl_chatCreateWithoutTbl_messagerInput, tbl_chatUncheckedCreateWithoutTbl_messagerInput>
  }

  export type tbl_chatCreateManyTbl_messagerInputEnvelope = {
    data: tbl_chatCreateManyTbl_messagerInput | tbl_chatCreateManyTbl_messagerInput[]
    skipDuplicates?: boolean
  }

  export type tbl_status_messagerCreateWithoutTbl_messagerInput = {
    status_messagem?: string | null
  }

  export type tbl_status_messagerUncheckedCreateWithoutTbl_messagerInput = {
    id_status?: number
    status_messagem?: string | null
  }

  export type tbl_status_messagerCreateOrConnectWithoutTbl_messagerInput = {
    where: tbl_status_messagerWhereUniqueInput
    create: XOR<tbl_status_messagerCreateWithoutTbl_messagerInput, tbl_status_messagerUncheckedCreateWithoutTbl_messagerInput>
  }

  export type tbl_type_messagerCreateWithoutTbl_messagerInput = {
    tipo_mensagem?: string | null
  }

  export type tbl_type_messagerUncheckedCreateWithoutTbl_messagerInput = {
    id_tipo_mensagem?: number
    tipo_mensagem?: string | null
  }

  export type tbl_type_messagerCreateOrConnectWithoutTbl_messagerInput = {
    where: tbl_type_messagerWhereUniqueInput
    create: XOR<tbl_type_messagerCreateWithoutTbl_messagerInput, tbl_type_messagerUncheckedCreateWithoutTbl_messagerInput>
  }

  export type tbl_chatUpsertWithWhereUniqueWithoutTbl_messagerInput = {
    where: tbl_chatWhereUniqueInput
    update: XOR<tbl_chatUpdateWithoutTbl_messagerInput, tbl_chatUncheckedUpdateWithoutTbl_messagerInput>
    create: XOR<tbl_chatCreateWithoutTbl_messagerInput, tbl_chatUncheckedCreateWithoutTbl_messagerInput>
  }

  export type tbl_chatUpdateWithWhereUniqueWithoutTbl_messagerInput = {
    where: tbl_chatWhereUniqueInput
    data: XOR<tbl_chatUpdateWithoutTbl_messagerInput, tbl_chatUncheckedUpdateWithoutTbl_messagerInput>
  }

  export type tbl_chatUpdateManyWithWhereWithoutTbl_messagerInput = {
    where: tbl_chatScalarWhereInput
    data: XOR<tbl_chatUpdateManyMutationInput, tbl_chatUncheckedUpdateManyWithoutTbl_messagerInput>
  }

  export type tbl_chatScalarWhereInput = {
    AND?: tbl_chatScalarWhereInput | tbl_chatScalarWhereInput[]
    OR?: tbl_chatScalarWhereInput[]
    NOT?: tbl_chatScalarWhereInput | tbl_chatScalarWhereInput[]
    id_chat?: IntFilter<"tbl_chat"> | number
    id_mensagem?: IntNullableFilter<"tbl_chat"> | number | null
    id_user?: IntNullableFilter<"tbl_chat"> | number | null
  }

  export type tbl_status_messagerUpsertWithoutTbl_messagerInput = {
    update: XOR<tbl_status_messagerUpdateWithoutTbl_messagerInput, tbl_status_messagerUncheckedUpdateWithoutTbl_messagerInput>
    create: XOR<tbl_status_messagerCreateWithoutTbl_messagerInput, tbl_status_messagerUncheckedCreateWithoutTbl_messagerInput>
    where?: tbl_status_messagerWhereInput
  }

  export type tbl_status_messagerUpdateToOneWithWhereWithoutTbl_messagerInput = {
    where?: tbl_status_messagerWhereInput
    data: XOR<tbl_status_messagerUpdateWithoutTbl_messagerInput, tbl_status_messagerUncheckedUpdateWithoutTbl_messagerInput>
  }

  export type tbl_status_messagerUpdateWithoutTbl_messagerInput = {
    status_messagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_status_messagerUncheckedUpdateWithoutTbl_messagerInput = {
    id_status?: IntFieldUpdateOperationsInput | number
    status_messagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_type_messagerUpsertWithoutTbl_messagerInput = {
    update: XOR<tbl_type_messagerUpdateWithoutTbl_messagerInput, tbl_type_messagerUncheckedUpdateWithoutTbl_messagerInput>
    create: XOR<tbl_type_messagerCreateWithoutTbl_messagerInput, tbl_type_messagerUncheckedCreateWithoutTbl_messagerInput>
    where?: tbl_type_messagerWhereInput
  }

  export type tbl_type_messagerUpdateToOneWithWhereWithoutTbl_messagerInput = {
    where?: tbl_type_messagerWhereInput
    data: XOR<tbl_type_messagerUpdateWithoutTbl_messagerInput, tbl_type_messagerUncheckedUpdateWithoutTbl_messagerInput>
  }

  export type tbl_type_messagerUpdateWithoutTbl_messagerInput = {
    tipo_mensagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_type_messagerUncheckedUpdateWithoutTbl_messagerInput = {
    id_tipo_mensagem?: IntFieldUpdateOperationsInput | number
    tipo_mensagem?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_cepCreateWithoutTbl_responsavelInput = {
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
    tbl_bebe?: tbl_bebeCreateNestedManyWithoutTbl_cepInput
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_cepInput
  }

  export type tbl_cepUncheckedCreateWithoutTbl_responsavelInput = {
    id_cep?: number
    cep: string
    logradouro: string
    cidade: string
    uf: string
    id_responsavel?: number | null
    tbl_bebe?: tbl_bebeUncheckedCreateNestedManyWithoutTbl_cepInput
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_cepInput
  }

  export type tbl_cepCreateOrConnectWithoutTbl_responsavelInput = {
    where: tbl_cepWhereUniqueInput
    create: XOR<tbl_cepCreateWithoutTbl_responsavelInput, tbl_cepUncheckedCreateWithoutTbl_responsavelInput>
  }

  export type tbl_sexoCreateWithoutTbl_responsavelInput = {
    sexo: string
    tbl_bebe?: tbl_bebeCreateNestedManyWithoutTbl_sexoInput
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateWithoutTbl_responsavelInput = {
    id_sexo?: number
    sexo: string
    tbl_bebe?: tbl_bebeUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoCreateOrConnectWithoutTbl_responsavelInput = {
    where: tbl_sexoWhereUniqueInput
    create: XOR<tbl_sexoCreateWithoutTbl_responsavelInput, tbl_sexoUncheckedCreateWithoutTbl_responsavelInput>
  }

  export type tbl_userCreateWithoutTbl_responsavelInput = {
    email: string
    senha: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaCreateNestedManyWithoutTbl_userInput
    tbl_type_user?: tbl_type_userCreateNestedOneWithoutTbl_userInput
  }

  export type tbl_userUncheckedCreateWithoutTbl_responsavelInput = {
    id_user?: number
    email: string
    senha: string
    id_tipo?: number | null
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaUncheckedCreateNestedManyWithoutTbl_userInput
  }

  export type tbl_userCreateOrConnectWithoutTbl_responsavelInput = {
    where: tbl_userWhereUniqueInput
    create: XOR<tbl_userCreateWithoutTbl_responsavelInput, tbl_userUncheckedCreateWithoutTbl_responsavelInput>
  }

  export type tbl_responsavel_bebeCreateWithoutTbl_responsavelInput = {
    tbl_bebe?: tbl_bebeCreateNestedOneWithoutTbl_responsavel_bebeInput
  }

  export type tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput = {
    id_bebe_responsavel?: number
    id_bebe?: number | null
  }

  export type tbl_responsavel_bebeCreateOrConnectWithoutTbl_responsavelInput = {
    where: tbl_responsavel_bebeWhereUniqueInput
    create: XOR<tbl_responsavel_bebeCreateWithoutTbl_responsavelInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput>
  }

  export type tbl_responsavel_bebeCreateManyTbl_responsavelInputEnvelope = {
    data: tbl_responsavel_bebeCreateManyTbl_responsavelInput | tbl_responsavel_bebeCreateManyTbl_responsavelInput[]
    skipDuplicates?: boolean
  }

  export type tbl_cepUpsertWithoutTbl_responsavelInput = {
    update: XOR<tbl_cepUpdateWithoutTbl_responsavelInput, tbl_cepUncheckedUpdateWithoutTbl_responsavelInput>
    create: XOR<tbl_cepCreateWithoutTbl_responsavelInput, tbl_cepUncheckedCreateWithoutTbl_responsavelInput>
    where?: tbl_cepWhereInput
  }

  export type tbl_cepUpdateToOneWithWhereWithoutTbl_responsavelInput = {
    where?: tbl_cepWhereInput
    data: XOR<tbl_cepUpdateWithoutTbl_responsavelInput, tbl_cepUncheckedUpdateWithoutTbl_responsavelInput>
  }

  export type tbl_cepUpdateWithoutTbl_responsavelInput = {
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_bebe?: tbl_bebeUpdateManyWithoutTbl_cepNestedInput
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_cepNestedInput
  }

  export type tbl_cepUncheckedUpdateWithoutTbl_responsavelInput = {
    id_cep?: IntFieldUpdateOperationsInput | number
    cep?: StringFieldUpdateOperationsInput | string
    logradouro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_bebe?: tbl_bebeUncheckedUpdateManyWithoutTbl_cepNestedInput
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_cepNestedInput
  }

  export type tbl_sexoUpsertWithoutTbl_responsavelInput = {
    update: XOR<tbl_sexoUpdateWithoutTbl_responsavelInput, tbl_sexoUncheckedUpdateWithoutTbl_responsavelInput>
    create: XOR<tbl_sexoCreateWithoutTbl_responsavelInput, tbl_sexoUncheckedCreateWithoutTbl_responsavelInput>
    where?: tbl_sexoWhereInput
  }

  export type tbl_sexoUpdateToOneWithWhereWithoutTbl_responsavelInput = {
    where?: tbl_sexoWhereInput
    data: XOR<tbl_sexoUpdateWithoutTbl_responsavelInput, tbl_sexoUncheckedUpdateWithoutTbl_responsavelInput>
  }

  export type tbl_sexoUpdateWithoutTbl_responsavelInput = {
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_bebe?: tbl_bebeUpdateManyWithoutTbl_sexoNestedInput
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateWithoutTbl_responsavelInput = {
    id_sexo?: IntFieldUpdateOperationsInput | number
    sexo?: StringFieldUpdateOperationsInput | string
    tbl_bebe?: tbl_bebeUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_userUpsertWithoutTbl_responsavelInput = {
    update: XOR<tbl_userUpdateWithoutTbl_responsavelInput, tbl_userUncheckedUpdateWithoutTbl_responsavelInput>
    create: XOR<tbl_userCreateWithoutTbl_responsavelInput, tbl_userUncheckedCreateWithoutTbl_responsavelInput>
    where?: tbl_userWhereInput
  }

  export type tbl_userUpdateToOneWithWhereWithoutTbl_responsavelInput = {
    where?: tbl_userWhereInput
    data: XOR<tbl_userUpdateWithoutTbl_responsavelInput, tbl_userUncheckedUpdateWithoutTbl_responsavelInput>
  }

  export type tbl_userUpdateWithoutTbl_responsavelInput = {
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUpdateManyWithoutTbl_userNestedInput
    tbl_type_user?: tbl_type_userUpdateOneWithoutTbl_userNestedInput
  }

  export type tbl_userUncheckedUpdateWithoutTbl_responsavelInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    id_tipo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUncheckedUpdateManyWithoutTbl_userNestedInput
  }

  export type tbl_responsavel_bebeUpsertWithWhereUniqueWithoutTbl_responsavelInput = {
    where: tbl_responsavel_bebeWhereUniqueInput
    update: XOR<tbl_responsavel_bebeUpdateWithoutTbl_responsavelInput, tbl_responsavel_bebeUncheckedUpdateWithoutTbl_responsavelInput>
    create: XOR<tbl_responsavel_bebeCreateWithoutTbl_responsavelInput, tbl_responsavel_bebeUncheckedCreateWithoutTbl_responsavelInput>
  }

  export type tbl_responsavel_bebeUpdateWithWhereUniqueWithoutTbl_responsavelInput = {
    where: tbl_responsavel_bebeWhereUniqueInput
    data: XOR<tbl_responsavel_bebeUpdateWithoutTbl_responsavelInput, tbl_responsavel_bebeUncheckedUpdateWithoutTbl_responsavelInput>
  }

  export type tbl_responsavel_bebeUpdateManyWithWhereWithoutTbl_responsavelInput = {
    where: tbl_responsavel_bebeScalarWhereInput
    data: XOR<tbl_responsavel_bebeUpdateManyMutationInput, tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_responsavelInput>
  }

  export type tbl_bebeCreateWithoutTbl_responsavel_bebeInput = {
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_bebeInput
    tbl_sangue?: tbl_sangueCreateNestedOneWithoutTbl_bebeInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_bebeInput
  }

  export type tbl_bebeUncheckedCreateWithoutTbl_responsavel_bebeInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_sexo?: number | null
    id_cep?: number | null
    id_sangue?: number | null
  }

  export type tbl_bebeCreateOrConnectWithoutTbl_responsavel_bebeInput = {
    where: tbl_bebeWhereUniqueInput
    create: XOR<tbl_bebeCreateWithoutTbl_responsavel_bebeInput, tbl_bebeUncheckedCreateWithoutTbl_responsavel_bebeInput>
  }

  export type tbl_responsavelCreateWithoutTbl_responsavel_bebeInput = {
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_responsavelInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_responsavelInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_responsavelInput
  }

  export type tbl_responsavelUncheckedCreateWithoutTbl_responsavel_bebeInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_sexo?: number | null
    id_user?: number | null
    id_cep?: number | null
  }

  export type tbl_responsavelCreateOrConnectWithoutTbl_responsavel_bebeInput = {
    where: tbl_responsavelWhereUniqueInput
    create: XOR<tbl_responsavelCreateWithoutTbl_responsavel_bebeInput, tbl_responsavelUncheckedCreateWithoutTbl_responsavel_bebeInput>
  }

  export type tbl_bebeUpsertWithoutTbl_responsavel_bebeInput = {
    update: XOR<tbl_bebeUpdateWithoutTbl_responsavel_bebeInput, tbl_bebeUncheckedUpdateWithoutTbl_responsavel_bebeInput>
    create: XOR<tbl_bebeCreateWithoutTbl_responsavel_bebeInput, tbl_bebeUncheckedCreateWithoutTbl_responsavel_bebeInput>
    where?: tbl_bebeWhereInput
  }

  export type tbl_bebeUpdateToOneWithWhereWithoutTbl_responsavel_bebeInput = {
    where?: tbl_bebeWhereInput
    data: XOR<tbl_bebeUpdateWithoutTbl_responsavel_bebeInput, tbl_bebeUncheckedUpdateWithoutTbl_responsavel_bebeInput>
  }

  export type tbl_bebeUpdateWithoutTbl_responsavel_bebeInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_bebeNestedInput
    tbl_sangue?: tbl_sangueUpdateOneWithoutTbl_bebeNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeUncheckedUpdateWithoutTbl_responsavel_bebeInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    id_sangue?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavelUpsertWithoutTbl_responsavel_bebeInput = {
    update: XOR<tbl_responsavelUpdateWithoutTbl_responsavel_bebeInput, tbl_responsavelUncheckedUpdateWithoutTbl_responsavel_bebeInput>
    create: XOR<tbl_responsavelCreateWithoutTbl_responsavel_bebeInput, tbl_responsavelUncheckedCreateWithoutTbl_responsavel_bebeInput>
    where?: tbl_responsavelWhereInput
  }

  export type tbl_responsavelUpdateToOneWithWhereWithoutTbl_responsavel_bebeInput = {
    where?: tbl_responsavelWhereInput
    data: XOR<tbl_responsavelUpdateWithoutTbl_responsavel_bebeInput, tbl_responsavelUncheckedUpdateWithoutTbl_responsavel_bebeInput>
  }

  export type tbl_responsavelUpdateWithoutTbl_responsavel_bebeInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_responsavelNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_responsavelNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelUncheckedUpdateWithoutTbl_responsavel_bebeInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_rotina_baseCreateWithoutTbl_rotinaInput = {
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
  }

  export type tbl_rotina_baseUncheckedCreateWithoutTbl_rotinaInput = {
    id_rotina_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
  }

  export type tbl_rotina_baseCreateOrConnectWithoutTbl_rotinaInput = {
    where: tbl_rotina_baseWhereUniqueInput
    create: XOR<tbl_rotina_baseCreateWithoutTbl_rotinaInput, tbl_rotina_baseUncheckedCreateWithoutTbl_rotinaInput>
  }

  export type tbl_userCreateWithoutTbl_rotinaInput = {
    email: string
    senha: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_userInput
    tbl_type_user?: tbl_type_userCreateNestedOneWithoutTbl_userInput
  }

  export type tbl_userUncheckedCreateWithoutTbl_rotinaInput = {
    id_user?: number
    email: string
    senha: string
    id_tipo?: number | null
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_userInput
  }

  export type tbl_userCreateOrConnectWithoutTbl_rotinaInput = {
    where: tbl_userWhereUniqueInput
    create: XOR<tbl_userCreateWithoutTbl_rotinaInput, tbl_userUncheckedCreateWithoutTbl_rotinaInput>
  }

  export type tbl_rotina_baseUpsertWithoutTbl_rotinaInput = {
    update: XOR<tbl_rotina_baseUpdateWithoutTbl_rotinaInput, tbl_rotina_baseUncheckedUpdateWithoutTbl_rotinaInput>
    create: XOR<tbl_rotina_baseCreateWithoutTbl_rotinaInput, tbl_rotina_baseUncheckedCreateWithoutTbl_rotinaInput>
    where?: tbl_rotina_baseWhereInput
  }

  export type tbl_rotina_baseUpdateToOneWithWhereWithoutTbl_rotinaInput = {
    where?: tbl_rotina_baseWhereInput
    data: XOR<tbl_rotina_baseUpdateWithoutTbl_rotinaInput, tbl_rotina_baseUncheckedUpdateWithoutTbl_rotinaInput>
  }

  export type tbl_rotina_baseUpdateWithoutTbl_rotinaInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_rotina_baseUncheckedUpdateWithoutTbl_rotinaInput = {
    id_rotina_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_userUpsertWithoutTbl_rotinaInput = {
    update: XOR<tbl_userUpdateWithoutTbl_rotinaInput, tbl_userUncheckedUpdateWithoutTbl_rotinaInput>
    create: XOR<tbl_userCreateWithoutTbl_rotinaInput, tbl_userUncheckedCreateWithoutTbl_rotinaInput>
    where?: tbl_userWhereInput
  }

  export type tbl_userUpdateToOneWithWhereWithoutTbl_rotinaInput = {
    where?: tbl_userWhereInput
    data: XOR<tbl_userUpdateWithoutTbl_rotinaInput, tbl_userUncheckedUpdateWithoutTbl_rotinaInput>
  }

  export type tbl_userUpdateWithoutTbl_rotinaInput = {
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_userNestedInput
    tbl_type_user?: tbl_type_userUpdateOneWithoutTbl_userNestedInput
  }

  export type tbl_userUncheckedUpdateWithoutTbl_rotinaInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    id_tipo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_userNestedInput
  }

  export type tbl_rotinaCreateWithoutTbl_rotina_baseInput = {
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_rotinaInput
  }

  export type tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput = {
    id_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    id_user?: number | null
  }

  export type tbl_rotinaCreateOrConnectWithoutTbl_rotina_baseInput = {
    where: tbl_rotinaWhereUniqueInput
    create: XOR<tbl_rotinaCreateWithoutTbl_rotina_baseInput, tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput>
  }

  export type tbl_rotinaCreateManyTbl_rotina_baseInputEnvelope = {
    data: tbl_rotinaCreateManyTbl_rotina_baseInput | tbl_rotinaCreateManyTbl_rotina_baseInput[]
    skipDuplicates?: boolean
  }

  export type tbl_rotinaUpsertWithWhereUniqueWithoutTbl_rotina_baseInput = {
    where: tbl_rotinaWhereUniqueInput
    update: XOR<tbl_rotinaUpdateWithoutTbl_rotina_baseInput, tbl_rotinaUncheckedUpdateWithoutTbl_rotina_baseInput>
    create: XOR<tbl_rotinaCreateWithoutTbl_rotina_baseInput, tbl_rotinaUncheckedCreateWithoutTbl_rotina_baseInput>
  }

  export type tbl_rotinaUpdateWithWhereUniqueWithoutTbl_rotina_baseInput = {
    where: tbl_rotinaWhereUniqueInput
    data: XOR<tbl_rotinaUpdateWithoutTbl_rotina_baseInput, tbl_rotinaUncheckedUpdateWithoutTbl_rotina_baseInput>
  }

  export type tbl_rotinaUpdateManyWithWhereWithoutTbl_rotina_baseInput = {
    where: tbl_rotinaScalarWhereInput
    data: XOR<tbl_rotinaUpdateManyMutationInput, tbl_rotinaUncheckedUpdateManyWithoutTbl_rotina_baseInput>
  }

  export type tbl_rotinaScalarWhereInput = {
    AND?: tbl_rotinaScalarWhereInput | tbl_rotinaScalarWhereInput[]
    OR?: tbl_rotinaScalarWhereInput[]
    NOT?: tbl_rotinaScalarWhereInput | tbl_rotinaScalarWhereInput[]
    id_base?: IntFilter<"tbl_rotina"> | number
    titulo?: StringFilter<"tbl_rotina"> | string
    cor?: StringFilter<"tbl_rotina"> | string
    data_rotina?: DateTimeFilter<"tbl_rotina"> | Date | string
    hora?: DateTimeFilter<"tbl_rotina"> | Date | string
    descricao?: StringFilter<"tbl_rotina"> | string
    id_user?: IntNullableFilter<"tbl_rotina"> | number | null
    id_rotina_base?: IntNullableFilter<"tbl_rotina"> | number | null
  }

  export type tbl_bebeCreateWithoutTbl_sangueInput = {
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_bebeInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_bebeInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeCreateNestedManyWithoutTbl_bebeInput
  }

  export type tbl_bebeUncheckedCreateWithoutTbl_sangueInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_sexo?: number | null
    id_cep?: number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_bebeInput
  }

  export type tbl_bebeCreateOrConnectWithoutTbl_sangueInput = {
    where: tbl_bebeWhereUniqueInput
    create: XOR<tbl_bebeCreateWithoutTbl_sangueInput, tbl_bebeUncheckedCreateWithoutTbl_sangueInput>
  }

  export type tbl_bebeCreateManyTbl_sangueInputEnvelope = {
    data: tbl_bebeCreateManyTbl_sangueInput | tbl_bebeCreateManyTbl_sangueInput[]
    skipDuplicates?: boolean
  }

  export type tbl_bebeUpsertWithWhereUniqueWithoutTbl_sangueInput = {
    where: tbl_bebeWhereUniqueInput
    update: XOR<tbl_bebeUpdateWithoutTbl_sangueInput, tbl_bebeUncheckedUpdateWithoutTbl_sangueInput>
    create: XOR<tbl_bebeCreateWithoutTbl_sangueInput, tbl_bebeUncheckedCreateWithoutTbl_sangueInput>
  }

  export type tbl_bebeUpdateWithWhereUniqueWithoutTbl_sangueInput = {
    where: tbl_bebeWhereUniqueInput
    data: XOR<tbl_bebeUpdateWithoutTbl_sangueInput, tbl_bebeUncheckedUpdateWithoutTbl_sangueInput>
  }

  export type tbl_bebeUpdateManyWithWhereWithoutTbl_sangueInput = {
    where: tbl_bebeScalarWhereInput
    data: XOR<tbl_bebeUpdateManyMutationInput, tbl_bebeUncheckedUpdateManyWithoutTbl_sangueInput>
  }

  export type tbl_bebeCreateWithoutTbl_sexoInput = {
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_bebeInput
    tbl_sangue?: tbl_sangueCreateNestedOneWithoutTbl_bebeInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeCreateNestedManyWithoutTbl_bebeInput
  }

  export type tbl_bebeUncheckedCreateWithoutTbl_sexoInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_cep?: number | null
    id_sangue?: number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_bebeInput
  }

  export type tbl_bebeCreateOrConnectWithoutTbl_sexoInput = {
    where: tbl_bebeWhereUniqueInput
    create: XOR<tbl_bebeCreateWithoutTbl_sexoInput, tbl_bebeUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_bebeCreateManyTbl_sexoInputEnvelope = {
    data: tbl_bebeCreateManyTbl_sexoInput | tbl_bebeCreateManyTbl_sexoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_medicoCreateWithoutTbl_sexoInput = {
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    tbl_especialidade_medico?: tbl_especialidade_medicoCreateNestedManyWithoutTbl_medicoInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_medicoInput
  }

  export type tbl_medicoUncheckedCreateWithoutTbl_sexoInput = {
    id_medico?: number
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    id_user?: number | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedCreateNestedManyWithoutTbl_medicoInput
  }

  export type tbl_medicoCreateOrConnectWithoutTbl_sexoInput = {
    where: tbl_medicoWhereUniqueInput
    create: XOR<tbl_medicoCreateWithoutTbl_sexoInput, tbl_medicoUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_medicoCreateManyTbl_sexoInputEnvelope = {
    data: tbl_medicoCreateManyTbl_sexoInput | tbl_medicoCreateManyTbl_sexoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_responsavelCreateWithoutTbl_sexoInput = {
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_responsavelInput
    tbl_user?: tbl_userCreateNestedOneWithoutTbl_responsavelInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeCreateNestedManyWithoutTbl_responsavelInput
  }

  export type tbl_responsavelUncheckedCreateWithoutTbl_sexoInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_user?: number | null
    id_cep?: number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_responsavelInput
  }

  export type tbl_responsavelCreateOrConnectWithoutTbl_sexoInput = {
    where: tbl_responsavelWhereUniqueInput
    create: XOR<tbl_responsavelCreateWithoutTbl_sexoInput, tbl_responsavelUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_responsavelCreateManyTbl_sexoInputEnvelope = {
    data: tbl_responsavelCreateManyTbl_sexoInput | tbl_responsavelCreateManyTbl_sexoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_bebeUpsertWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_bebeWhereUniqueInput
    update: XOR<tbl_bebeUpdateWithoutTbl_sexoInput, tbl_bebeUncheckedUpdateWithoutTbl_sexoInput>
    create: XOR<tbl_bebeCreateWithoutTbl_sexoInput, tbl_bebeUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_bebeUpdateWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_bebeWhereUniqueInput
    data: XOR<tbl_bebeUpdateWithoutTbl_sexoInput, tbl_bebeUncheckedUpdateWithoutTbl_sexoInput>
  }

  export type tbl_bebeUpdateManyWithWhereWithoutTbl_sexoInput = {
    where: tbl_bebeScalarWhereInput
    data: XOR<tbl_bebeUpdateManyMutationInput, tbl_bebeUncheckedUpdateManyWithoutTbl_sexoInput>
  }

  export type tbl_medicoUpsertWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_medicoWhereUniqueInput
    update: XOR<tbl_medicoUpdateWithoutTbl_sexoInput, tbl_medicoUncheckedUpdateWithoutTbl_sexoInput>
    create: XOR<tbl_medicoCreateWithoutTbl_sexoInput, tbl_medicoUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_medicoUpdateWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_medicoWhereUniqueInput
    data: XOR<tbl_medicoUpdateWithoutTbl_sexoInput, tbl_medicoUncheckedUpdateWithoutTbl_sexoInput>
  }

  export type tbl_medicoUpdateManyWithWhereWithoutTbl_sexoInput = {
    where: tbl_medicoScalarWhereInput
    data: XOR<tbl_medicoUpdateManyMutationInput, tbl_medicoUncheckedUpdateManyWithoutTbl_sexoInput>
  }

  export type tbl_medicoScalarWhereInput = {
    AND?: tbl_medicoScalarWhereInput | tbl_medicoScalarWhereInput[]
    OR?: tbl_medicoScalarWhereInput[]
    NOT?: tbl_medicoScalarWhereInput | tbl_medicoScalarWhereInput[]
    id_medico?: IntFilter<"tbl_medico"> | number
    nome?: StringFilter<"tbl_medico"> | string
    email?: StringFilter<"tbl_medico"> | string
    telefone?: StringFilter<"tbl_medico"> | string
    crm?: StringFilter<"tbl_medico"> | string
    cpf?: StringFilter<"tbl_medico"> | string
    foto?: StringFilter<"tbl_medico"> | string
    id_sexo?: IntNullableFilter<"tbl_medico"> | number | null
    id_user?: IntNullableFilter<"tbl_medico"> | number | null
  }

  export type tbl_responsavelUpsertWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_responsavelWhereUniqueInput
    update: XOR<tbl_responsavelUpdateWithoutTbl_sexoInput, tbl_responsavelUncheckedUpdateWithoutTbl_sexoInput>
    create: XOR<tbl_responsavelCreateWithoutTbl_sexoInput, tbl_responsavelUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_responsavelUpdateWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_responsavelWhereUniqueInput
    data: XOR<tbl_responsavelUpdateWithoutTbl_sexoInput, tbl_responsavelUncheckedUpdateWithoutTbl_sexoInput>
  }

  export type tbl_responsavelUpdateManyWithWhereWithoutTbl_sexoInput = {
    where: tbl_responsavelScalarWhereInput
    data: XOR<tbl_responsavelUpdateManyMutationInput, tbl_responsavelUncheckedUpdateManyWithoutTbl_sexoInput>
  }

  export type tbl_messagerCreateWithoutTbl_status_messagerInput = {
    conteudo: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_messagerInput
    tbl_type_messager?: tbl_type_messagerCreateNestedOneWithoutTbl_messagerInput
  }

  export type tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput = {
    id_mensagem?: number
    conteudo: string
    id_tipo_mensagem?: number | null
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_messagerInput
  }

  export type tbl_messagerCreateOrConnectWithoutTbl_status_messagerInput = {
    where: tbl_messagerWhereUniqueInput
    create: XOR<tbl_messagerCreateWithoutTbl_status_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput>
  }

  export type tbl_messagerCreateManyTbl_status_messagerInputEnvelope = {
    data: tbl_messagerCreateManyTbl_status_messagerInput | tbl_messagerCreateManyTbl_status_messagerInput[]
    skipDuplicates?: boolean
  }

  export type tbl_messagerUpsertWithWhereUniqueWithoutTbl_status_messagerInput = {
    where: tbl_messagerWhereUniqueInput
    update: XOR<tbl_messagerUpdateWithoutTbl_status_messagerInput, tbl_messagerUncheckedUpdateWithoutTbl_status_messagerInput>
    create: XOR<tbl_messagerCreateWithoutTbl_status_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_status_messagerInput>
  }

  export type tbl_messagerUpdateWithWhereUniqueWithoutTbl_status_messagerInput = {
    where: tbl_messagerWhereUniqueInput
    data: XOR<tbl_messagerUpdateWithoutTbl_status_messagerInput, tbl_messagerUncheckedUpdateWithoutTbl_status_messagerInput>
  }

  export type tbl_messagerUpdateManyWithWhereWithoutTbl_status_messagerInput = {
    where: tbl_messagerScalarWhereInput
    data: XOR<tbl_messagerUpdateManyMutationInput, tbl_messagerUncheckedUpdateManyWithoutTbl_status_messagerInput>
  }

  export type tbl_messagerScalarWhereInput = {
    AND?: tbl_messagerScalarWhereInput | tbl_messagerScalarWhereInput[]
    OR?: tbl_messagerScalarWhereInput[]
    NOT?: tbl_messagerScalarWhereInput | tbl_messagerScalarWhereInput[]
    id_mensagem?: IntFilter<"tbl_messager"> | number
    conteudo?: StringFilter<"tbl_messager"> | string
    id_tipo_mensagem?: IntNullableFilter<"tbl_messager"> | number | null
    id_status?: IntNullableFilter<"tbl_messager"> | number | null
  }

  export type tbl_messagerCreateWithoutTbl_type_messagerInput = {
    conteudo: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_messagerInput
    tbl_status_messager?: tbl_status_messagerCreateNestedOneWithoutTbl_messagerInput
  }

  export type tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput = {
    id_mensagem?: number
    conteudo: string
    id_status?: number | null
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_messagerInput
  }

  export type tbl_messagerCreateOrConnectWithoutTbl_type_messagerInput = {
    where: tbl_messagerWhereUniqueInput
    create: XOR<tbl_messagerCreateWithoutTbl_type_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput>
  }

  export type tbl_messagerCreateManyTbl_type_messagerInputEnvelope = {
    data: tbl_messagerCreateManyTbl_type_messagerInput | tbl_messagerCreateManyTbl_type_messagerInput[]
    skipDuplicates?: boolean
  }

  export type tbl_messagerUpsertWithWhereUniqueWithoutTbl_type_messagerInput = {
    where: tbl_messagerWhereUniqueInput
    update: XOR<tbl_messagerUpdateWithoutTbl_type_messagerInput, tbl_messagerUncheckedUpdateWithoutTbl_type_messagerInput>
    create: XOR<tbl_messagerCreateWithoutTbl_type_messagerInput, tbl_messagerUncheckedCreateWithoutTbl_type_messagerInput>
  }

  export type tbl_messagerUpdateWithWhereUniqueWithoutTbl_type_messagerInput = {
    where: tbl_messagerWhereUniqueInput
    data: XOR<tbl_messagerUpdateWithoutTbl_type_messagerInput, tbl_messagerUncheckedUpdateWithoutTbl_type_messagerInput>
  }

  export type tbl_messagerUpdateManyWithWhereWithoutTbl_type_messagerInput = {
    where: tbl_messagerScalarWhereInput
    data: XOR<tbl_messagerUpdateManyMutationInput, tbl_messagerUncheckedUpdateManyWithoutTbl_type_messagerInput>
  }

  export type tbl_userCreateWithoutTbl_type_userInput = {
    email: string
    senha: string
    tbl_chat?: tbl_chatCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaCreateNestedManyWithoutTbl_userInput
  }

  export type tbl_userUncheckedCreateWithoutTbl_type_userInput = {
    id_user?: number
    email: string
    senha: string
    tbl_chat?: tbl_chatUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_clinica?: tbl_clinicaUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_medico?: tbl_medicoUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_responsavel?: tbl_responsavelUncheckedCreateNestedManyWithoutTbl_userInput
    tbl_rotina?: tbl_rotinaUncheckedCreateNestedManyWithoutTbl_userInput
  }

  export type tbl_userCreateOrConnectWithoutTbl_type_userInput = {
    where: tbl_userWhereUniqueInput
    create: XOR<tbl_userCreateWithoutTbl_type_userInput, tbl_userUncheckedCreateWithoutTbl_type_userInput>
  }

  export type tbl_userCreateManyTbl_type_userInputEnvelope = {
    data: tbl_userCreateManyTbl_type_userInput | tbl_userCreateManyTbl_type_userInput[]
    skipDuplicates?: boolean
  }

  export type tbl_userUpsertWithWhereUniqueWithoutTbl_type_userInput = {
    where: tbl_userWhereUniqueInput
    update: XOR<tbl_userUpdateWithoutTbl_type_userInput, tbl_userUncheckedUpdateWithoutTbl_type_userInput>
    create: XOR<tbl_userCreateWithoutTbl_type_userInput, tbl_userUncheckedCreateWithoutTbl_type_userInput>
  }

  export type tbl_userUpdateWithWhereUniqueWithoutTbl_type_userInput = {
    where: tbl_userWhereUniqueInput
    data: XOR<tbl_userUpdateWithoutTbl_type_userInput, tbl_userUncheckedUpdateWithoutTbl_type_userInput>
  }

  export type tbl_userUpdateManyWithWhereWithoutTbl_type_userInput = {
    where: tbl_userScalarWhereInput
    data: XOR<tbl_userUpdateManyMutationInput, tbl_userUncheckedUpdateManyWithoutTbl_type_userInput>
  }

  export type tbl_userScalarWhereInput = {
    AND?: tbl_userScalarWhereInput | tbl_userScalarWhereInput[]
    OR?: tbl_userScalarWhereInput[]
    NOT?: tbl_userScalarWhereInput | tbl_userScalarWhereInput[]
    id_user?: IntFilter<"tbl_user"> | number
    email?: StringFilter<"tbl_user"> | string
    senha?: StringFilter<"tbl_user"> | string
    id_tipo?: IntNullableFilter<"tbl_user"> | number | null
  }

  export type tbl_chatCreateWithoutTbl_userInput = {
    tbl_messager?: tbl_messagerCreateNestedOneWithoutTbl_chatInput
  }

  export type tbl_chatUncheckedCreateWithoutTbl_userInput = {
    id_chat?: number
    id_mensagem?: number | null
  }

  export type tbl_chatCreateOrConnectWithoutTbl_userInput = {
    where: tbl_chatWhereUniqueInput
    create: XOR<tbl_chatCreateWithoutTbl_userInput, tbl_chatUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_chatCreateManyTbl_userInputEnvelope = {
    data: tbl_chatCreateManyTbl_userInput | tbl_chatCreateManyTbl_userInput[]
    skipDuplicates?: boolean
  }

  export type tbl_clinicaCreateWithoutTbl_userInput = {
    nome: string
    cnpj: string
    telefone: string
    email: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_clinicaInput
    tbl_especialidade_clinica?: tbl_especialidade_clinicaCreateNestedManyWithoutTbl_clinicaInput
  }

  export type tbl_clinicaUncheckedCreateWithoutTbl_userInput = {
    id_clinica?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    id_cep?: number | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedCreateNestedManyWithoutTbl_clinicaInput
  }

  export type tbl_clinicaCreateOrConnectWithoutTbl_userInput = {
    where: tbl_clinicaWhereUniqueInput
    create: XOR<tbl_clinicaCreateWithoutTbl_userInput, tbl_clinicaUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_clinicaCreateManyTbl_userInputEnvelope = {
    data: tbl_clinicaCreateManyTbl_userInput | tbl_clinicaCreateManyTbl_userInput[]
    skipDuplicates?: boolean
  }

  export type tbl_medicoCreateWithoutTbl_userInput = {
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    tbl_especialidade_medico?: tbl_especialidade_medicoCreateNestedManyWithoutTbl_medicoInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_medicoInput
  }

  export type tbl_medicoUncheckedCreateWithoutTbl_userInput = {
    id_medico?: number
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    id_sexo?: number | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedCreateNestedManyWithoutTbl_medicoInput
  }

  export type tbl_medicoCreateOrConnectWithoutTbl_userInput = {
    where: tbl_medicoWhereUniqueInput
    create: XOR<tbl_medicoCreateWithoutTbl_userInput, tbl_medicoUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_medicoCreateManyTbl_userInputEnvelope = {
    data: tbl_medicoCreateManyTbl_userInput | tbl_medicoCreateManyTbl_userInput[]
    skipDuplicates?: boolean
  }

  export type tbl_responsavelCreateWithoutTbl_userInput = {
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    tbl_cep?: tbl_cepCreateNestedOneWithoutTbl_responsavelInput
    tbl_sexo?: tbl_sexoCreateNestedOneWithoutTbl_responsavelInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeCreateNestedManyWithoutTbl_responsavelInput
  }

  export type tbl_responsavelUncheckedCreateWithoutTbl_userInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_sexo?: number | null
    id_cep?: number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedCreateNestedManyWithoutTbl_responsavelInput
  }

  export type tbl_responsavelCreateOrConnectWithoutTbl_userInput = {
    where: tbl_responsavelWhereUniqueInput
    create: XOR<tbl_responsavelCreateWithoutTbl_userInput, tbl_responsavelUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_responsavelCreateManyTbl_userInputEnvelope = {
    data: tbl_responsavelCreateManyTbl_userInput | tbl_responsavelCreateManyTbl_userInput[]
    skipDuplicates?: boolean
  }

  export type tbl_rotinaCreateWithoutTbl_userInput = {
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    tbl_rotina_base?: tbl_rotina_baseCreateNestedOneWithoutTbl_rotinaInput
  }

  export type tbl_rotinaUncheckedCreateWithoutTbl_userInput = {
    id_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    id_rotina_base?: number | null
  }

  export type tbl_rotinaCreateOrConnectWithoutTbl_userInput = {
    where: tbl_rotinaWhereUniqueInput
    create: XOR<tbl_rotinaCreateWithoutTbl_userInput, tbl_rotinaUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_rotinaCreateManyTbl_userInputEnvelope = {
    data: tbl_rotinaCreateManyTbl_userInput | tbl_rotinaCreateManyTbl_userInput[]
    skipDuplicates?: boolean
  }

  export type tbl_type_userCreateWithoutTbl_userInput = {
    tipo?: string | null
  }

  export type tbl_type_userUncheckedCreateWithoutTbl_userInput = {
    id_tipo?: number
    tipo?: string | null
  }

  export type tbl_type_userCreateOrConnectWithoutTbl_userInput = {
    where: tbl_type_userWhereUniqueInput
    create: XOR<tbl_type_userCreateWithoutTbl_userInput, tbl_type_userUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_chatUpsertWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_chatWhereUniqueInput
    update: XOR<tbl_chatUpdateWithoutTbl_userInput, tbl_chatUncheckedUpdateWithoutTbl_userInput>
    create: XOR<tbl_chatCreateWithoutTbl_userInput, tbl_chatUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_chatUpdateWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_chatWhereUniqueInput
    data: XOR<tbl_chatUpdateWithoutTbl_userInput, tbl_chatUncheckedUpdateWithoutTbl_userInput>
  }

  export type tbl_chatUpdateManyWithWhereWithoutTbl_userInput = {
    where: tbl_chatScalarWhereInput
    data: XOR<tbl_chatUpdateManyMutationInput, tbl_chatUncheckedUpdateManyWithoutTbl_userInput>
  }

  export type tbl_clinicaUpsertWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_clinicaWhereUniqueInput
    update: XOR<tbl_clinicaUpdateWithoutTbl_userInput, tbl_clinicaUncheckedUpdateWithoutTbl_userInput>
    create: XOR<tbl_clinicaCreateWithoutTbl_userInput, tbl_clinicaUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_clinicaUpdateWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_clinicaWhereUniqueInput
    data: XOR<tbl_clinicaUpdateWithoutTbl_userInput, tbl_clinicaUncheckedUpdateWithoutTbl_userInput>
  }

  export type tbl_clinicaUpdateManyWithWhereWithoutTbl_userInput = {
    where: tbl_clinicaScalarWhereInput
    data: XOR<tbl_clinicaUpdateManyMutationInput, tbl_clinicaUncheckedUpdateManyWithoutTbl_userInput>
  }

  export type tbl_medicoUpsertWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_medicoWhereUniqueInput
    update: XOR<tbl_medicoUpdateWithoutTbl_userInput, tbl_medicoUncheckedUpdateWithoutTbl_userInput>
    create: XOR<tbl_medicoCreateWithoutTbl_userInput, tbl_medicoUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_medicoUpdateWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_medicoWhereUniqueInput
    data: XOR<tbl_medicoUpdateWithoutTbl_userInput, tbl_medicoUncheckedUpdateWithoutTbl_userInput>
  }

  export type tbl_medicoUpdateManyWithWhereWithoutTbl_userInput = {
    where: tbl_medicoScalarWhereInput
    data: XOR<tbl_medicoUpdateManyMutationInput, tbl_medicoUncheckedUpdateManyWithoutTbl_userInput>
  }

  export type tbl_responsavelUpsertWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_responsavelWhereUniqueInput
    update: XOR<tbl_responsavelUpdateWithoutTbl_userInput, tbl_responsavelUncheckedUpdateWithoutTbl_userInput>
    create: XOR<tbl_responsavelCreateWithoutTbl_userInput, tbl_responsavelUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_responsavelUpdateWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_responsavelWhereUniqueInput
    data: XOR<tbl_responsavelUpdateWithoutTbl_userInput, tbl_responsavelUncheckedUpdateWithoutTbl_userInput>
  }

  export type tbl_responsavelUpdateManyWithWhereWithoutTbl_userInput = {
    where: tbl_responsavelScalarWhereInput
    data: XOR<tbl_responsavelUpdateManyMutationInput, tbl_responsavelUncheckedUpdateManyWithoutTbl_userInput>
  }

  export type tbl_rotinaUpsertWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_rotinaWhereUniqueInput
    update: XOR<tbl_rotinaUpdateWithoutTbl_userInput, tbl_rotinaUncheckedUpdateWithoutTbl_userInput>
    create: XOR<tbl_rotinaCreateWithoutTbl_userInput, tbl_rotinaUncheckedCreateWithoutTbl_userInput>
  }

  export type tbl_rotinaUpdateWithWhereUniqueWithoutTbl_userInput = {
    where: tbl_rotinaWhereUniqueInput
    data: XOR<tbl_rotinaUpdateWithoutTbl_userInput, tbl_rotinaUncheckedUpdateWithoutTbl_userInput>
  }

  export type tbl_rotinaUpdateManyWithWhereWithoutTbl_userInput = {
    where: tbl_rotinaScalarWhereInput
    data: XOR<tbl_rotinaUpdateManyMutationInput, tbl_rotinaUncheckedUpdateManyWithoutTbl_userInput>
  }

  export type tbl_type_userUpsertWithoutTbl_userInput = {
    update: XOR<tbl_type_userUpdateWithoutTbl_userInput, tbl_type_userUncheckedUpdateWithoutTbl_userInput>
    create: XOR<tbl_type_userCreateWithoutTbl_userInput, tbl_type_userUncheckedCreateWithoutTbl_userInput>
    where?: tbl_type_userWhereInput
  }

  export type tbl_type_userUpdateToOneWithWhereWithoutTbl_userInput = {
    where?: tbl_type_userWhereInput
    data: XOR<tbl_type_userUpdateWithoutTbl_userInput, tbl_type_userUncheckedUpdateWithoutTbl_userInput>
  }

  export type tbl_type_userUpdateWithoutTbl_userInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_type_userUncheckedUpdateWithoutTbl_userInput = {
    id_tipo?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_responsavel_bebeCreateManyTbl_bebeInput = {
    id_bebe_responsavel?: number
    id_responsavel?: number | null
  }

  export type tbl_responsavel_bebeUpdateWithoutTbl_bebeInput = {
    tbl_responsavel?: tbl_responsavelUpdateOneWithoutTbl_responsavel_bebeNestedInput
  }

  export type tbl_responsavel_bebeUncheckedUpdateWithoutTbl_bebeInput = {
    id_bebe_responsavel?: IntFieldUpdateOperationsInput | number
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_bebeInput = {
    id_bebe_responsavel?: IntFieldUpdateOperationsInput | number
    id_responsavel?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_bebeCreateManyTbl_cepInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_sexo?: number | null
    id_sangue?: number | null
  }

  export type tbl_clinicaCreateManyTbl_cepInput = {
    id_clinica?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    id_user?: number | null
  }

  export type tbl_responsavelCreateManyTbl_cepInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_sexo?: number | null
    id_user?: number | null
  }

  export type tbl_bebeUpdateWithoutTbl_cepInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    tbl_sangue?: tbl_sangueUpdateOneWithoutTbl_bebeNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_bebeNestedInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeUpdateManyWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeUncheckedUpdateWithoutTbl_cepInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_sangue?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeUncheckedUpdateManyWithoutTbl_cepInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_sangue?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_clinicaUpdateWithoutTbl_cepInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    tbl_user?: tbl_userUpdateOneWithoutTbl_clinicaNestedInput
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUpdateManyWithoutTbl_clinicaNestedInput
  }

  export type tbl_clinicaUncheckedUpdateWithoutTbl_cepInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_clinicaNestedInput
  }

  export type tbl_clinicaUncheckedUpdateManyWithoutTbl_cepInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavelUpdateWithoutTbl_cepInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_responsavelNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_responsavelNestedInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeUpdateManyWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelUncheckedUpdateWithoutTbl_cepInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelUncheckedUpdateManyWithoutTbl_cepInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_clinicaCreateManyTbl_clinicaInput = {
    id?: number
    id_especialidade?: number | null
  }

  export type tbl_especialidade_clinicaUpdateWithoutTbl_clinicaInput = {
    tbl_especialidade?: tbl_especialidadeUpdateOneWithoutTbl_especialidade_clinicaNestedInput
  }

  export type tbl_especialidade_clinicaUncheckedUpdateWithoutTbl_clinicaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_especialidade?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_clinicaInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_especialidade?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_clinicaCreateManyTbl_especialidadeInput = {
    id?: number
    id_clinica?: number | null
  }

  export type tbl_especialidade_medicoCreateManyTbl_especialidadeInput = {
    id?: number
    id_medico?: number | null
  }

  export type tbl_especialidade_clinicaUpdateWithoutTbl_especialidadeInput = {
    tbl_clinica?: tbl_clinicaUpdateOneWithoutTbl_especialidade_clinicaNestedInput
  }

  export type tbl_especialidade_clinicaUncheckedUpdateWithoutTbl_especialidadeInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_clinica?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_especialidadeInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_clinica?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_medicoUpdateWithoutTbl_especialidadeInput = {
    tbl_medico?: tbl_medicoUpdateOneWithoutTbl_especialidade_medicoNestedInput
  }

  export type tbl_especialidade_medicoUncheckedUpdateWithoutTbl_especialidadeInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_medico?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_especialidadeInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_medico?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_medicoCreateManyTbl_medicoInput = {
    id?: number
    id_especialidade?: number | null
  }

  export type tbl_especialidade_medicoUpdateWithoutTbl_medicoInput = {
    tbl_especialidade?: tbl_especialidadeUpdateOneWithoutTbl_especialidade_medicoNestedInput
  }

  export type tbl_especialidade_medicoUncheckedUpdateWithoutTbl_medicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_especialidade?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_medicoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_especialidade?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_chatCreateManyTbl_messagerInput = {
    id_chat?: number
    id_user?: number | null
  }

  export type tbl_chatUpdateWithoutTbl_messagerInput = {
    tbl_user?: tbl_userUpdateOneWithoutTbl_chatNestedInput
  }

  export type tbl_chatUncheckedUpdateWithoutTbl_messagerInput = {
    id_chat?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_chatUncheckedUpdateManyWithoutTbl_messagerInput = {
    id_chat?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavel_bebeCreateManyTbl_responsavelInput = {
    id_bebe_responsavel?: number
    id_bebe?: number | null
  }

  export type tbl_responsavel_bebeUpdateWithoutTbl_responsavelInput = {
    tbl_bebe?: tbl_bebeUpdateOneWithoutTbl_responsavel_bebeNestedInput
  }

  export type tbl_responsavel_bebeUncheckedUpdateWithoutTbl_responsavelInput = {
    id_bebe_responsavel?: IntFieldUpdateOperationsInput | number
    id_bebe?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_responsavelInput = {
    id_bebe_responsavel?: IntFieldUpdateOperationsInput | number
    id_bebe?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_rotinaCreateManyTbl_rotina_baseInput = {
    id_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    id_user?: number | null
  }

  export type tbl_rotinaUpdateWithoutTbl_rotina_baseInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    tbl_user?: tbl_userUpdateOneWithoutTbl_rotinaNestedInput
  }

  export type tbl_rotinaUncheckedUpdateWithoutTbl_rotina_baseInput = {
    id_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_rotinaUncheckedUpdateManyWithoutTbl_rotina_baseInput = {
    id_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_bebeCreateManyTbl_sangueInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_sexo?: number | null
    id_cep?: number | null
  }

  export type tbl_bebeUpdateWithoutTbl_sangueInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_bebeNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_bebeNestedInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeUpdateManyWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeUncheckedUpdateWithoutTbl_sangueInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeUncheckedUpdateManyWithoutTbl_sangueInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_bebeCreateManyTbl_sexoInput = {
    id_bebe?: number
    nome: string
    data_nascimento: Date | string
    peso: Decimal | DecimalJsLike | number | string
    altura: number
    certidao_nascimento: string
    cpf?: string | null
    cartao_medico: string
    imagem_certidao: string
    id_cep?: number | null
    id_sangue?: number | null
  }

  export type tbl_medicoCreateManyTbl_sexoInput = {
    id_medico?: number
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    id_user?: number | null
  }

  export type tbl_responsavelCreateManyTbl_sexoInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_user?: number | null
    id_cep?: number | null
  }

  export type tbl_bebeUpdateWithoutTbl_sexoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_bebeNestedInput
    tbl_sangue?: tbl_sangueUpdateOneWithoutTbl_bebeNestedInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeUpdateManyWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeUncheckedUpdateWithoutTbl_sexoInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    id_sangue?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_bebeNestedInput
  }

  export type tbl_bebeUncheckedUpdateManyWithoutTbl_sexoInput = {
    id_bebe?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    altura?: IntFieldUpdateOperationsInput | number
    certidao_nascimento?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    cartao_medico?: StringFieldUpdateOperationsInput | string
    imagem_certidao?: StringFieldUpdateOperationsInput | string
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    id_sangue?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_medicoUpdateWithoutTbl_sexoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    tbl_especialidade_medico?: tbl_especialidade_medicoUpdateManyWithoutTbl_medicoNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_medicoNestedInput
  }

  export type tbl_medicoUncheckedUpdateWithoutTbl_sexoInput = {
    id_medico?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_medicoNestedInput
  }

  export type tbl_medicoUncheckedUpdateManyWithoutTbl_sexoInput = {
    id_medico?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavelUpdateWithoutTbl_sexoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_responsavelNestedInput
    tbl_user?: tbl_userUpdateOneWithoutTbl_responsavelNestedInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeUpdateManyWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelUncheckedUpdateWithoutTbl_sexoInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelUncheckedUpdateManyWithoutTbl_sexoInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_messagerCreateManyTbl_status_messagerInput = {
    id_mensagem?: number
    conteudo: string
    id_tipo_mensagem?: number | null
  }

  export type tbl_messagerUpdateWithoutTbl_status_messagerInput = {
    conteudo?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_messagerNestedInput
    tbl_type_messager?: tbl_type_messagerUpdateOneWithoutTbl_messagerNestedInput
  }

  export type tbl_messagerUncheckedUpdateWithoutTbl_status_messagerInput = {
    id_mensagem?: IntFieldUpdateOperationsInput | number
    conteudo?: StringFieldUpdateOperationsInput | string
    id_tipo_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_messagerNestedInput
  }

  export type tbl_messagerUncheckedUpdateManyWithoutTbl_status_messagerInput = {
    id_mensagem?: IntFieldUpdateOperationsInput | number
    conteudo?: StringFieldUpdateOperationsInput | string
    id_tipo_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_messagerCreateManyTbl_type_messagerInput = {
    id_mensagem?: number
    conteudo: string
    id_status?: number | null
  }

  export type tbl_messagerUpdateWithoutTbl_type_messagerInput = {
    conteudo?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_messagerNestedInput
    tbl_status_messager?: tbl_status_messagerUpdateOneWithoutTbl_messagerNestedInput
  }

  export type tbl_messagerUncheckedUpdateWithoutTbl_type_messagerInput = {
    id_mensagem?: IntFieldUpdateOperationsInput | number
    conteudo?: StringFieldUpdateOperationsInput | string
    id_status?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_messagerNestedInput
  }

  export type tbl_messagerUncheckedUpdateManyWithoutTbl_type_messagerInput = {
    id_mensagem?: IntFieldUpdateOperationsInput | number
    conteudo?: StringFieldUpdateOperationsInput | string
    id_status?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_userCreateManyTbl_type_userInput = {
    id_user?: number
    email: string
    senha: string
  }

  export type tbl_userUpdateWithoutTbl_type_userInput = {
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUpdateManyWithoutTbl_userNestedInput
  }

  export type tbl_userUncheckedUpdateWithoutTbl_type_userInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tbl_chat?: tbl_chatUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_clinica?: tbl_clinicaUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_medico?: tbl_medicoUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_responsavel?: tbl_responsavelUncheckedUpdateManyWithoutTbl_userNestedInput
    tbl_rotina?: tbl_rotinaUncheckedUpdateManyWithoutTbl_userNestedInput
  }

  export type tbl_userUncheckedUpdateManyWithoutTbl_type_userInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_chatCreateManyTbl_userInput = {
    id_chat?: number
    id_mensagem?: number | null
  }

  export type tbl_clinicaCreateManyTbl_userInput = {
    id_clinica?: number
    nome: string
    cnpj: string
    telefone: string
    email: string
    id_cep?: number | null
  }

  export type tbl_medicoCreateManyTbl_userInput = {
    id_medico?: number
    nome: string
    email: string
    telefone: string
    crm: string
    cpf: string
    foto: string
    id_sexo?: number | null
  }

  export type tbl_responsavelCreateManyTbl_userInput = {
    id_responsavel?: number
    nome: string
    data_nascimento: Date | string
    cpf: string
    telefone: string
    arquivo: string
    cartao_medico: string
    cep: string
    id_sexo?: number | null
    id_cep?: number | null
  }

  export type tbl_rotinaCreateManyTbl_userInput = {
    id_base?: number
    titulo: string
    cor: string
    data_rotina: Date | string
    hora: Date | string
    descricao: string
    id_rotina_base?: number | null
  }

  export type tbl_chatUpdateWithoutTbl_userInput = {
    tbl_messager?: tbl_messagerUpdateOneWithoutTbl_chatNestedInput
  }

  export type tbl_chatUncheckedUpdateWithoutTbl_userInput = {
    id_chat?: IntFieldUpdateOperationsInput | number
    id_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_chatUncheckedUpdateManyWithoutTbl_userInput = {
    id_chat?: IntFieldUpdateOperationsInput | number
    id_mensagem?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_clinicaUpdateWithoutTbl_userInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_clinicaNestedInput
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUpdateManyWithoutTbl_clinicaNestedInput
  }

  export type tbl_clinicaUncheckedUpdateWithoutTbl_userInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_especialidade_clinica?: tbl_especialidade_clinicaUncheckedUpdateManyWithoutTbl_clinicaNestedInput
  }

  export type tbl_clinicaUncheckedUpdateManyWithoutTbl_userInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_medicoUpdateWithoutTbl_userInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    tbl_especialidade_medico?: tbl_especialidade_medicoUpdateManyWithoutTbl_medicoNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_medicoNestedInput
  }

  export type tbl_medicoUncheckedUpdateWithoutTbl_userInput = {
    id_medico?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_especialidade_medico?: tbl_especialidade_medicoUncheckedUpdateManyWithoutTbl_medicoNestedInput
  }

  export type tbl_medicoUncheckedUpdateManyWithoutTbl_userInput = {
    id_medico?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    crm?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_responsavelUpdateWithoutTbl_userInput = {
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    tbl_cep?: tbl_cepUpdateOneWithoutTbl_responsavelNestedInput
    tbl_sexo?: tbl_sexoUpdateOneWithoutTbl_responsavelNestedInput
    tbl_responsavel_bebe?: tbl_responsavel_bebeUpdateManyWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelUncheckedUpdateWithoutTbl_userInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_responsavel_bebe?: tbl_responsavel_bebeUncheckedUpdateManyWithoutTbl_responsavelNestedInput
  }

  export type tbl_responsavelUncheckedUpdateManyWithoutTbl_userInput = {
    id_responsavel?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    arquivo?: StringFieldUpdateOperationsInput | string
    cartao_medico?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    id_sexo?: NullableIntFieldUpdateOperationsInput | number | null
    id_cep?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_rotinaUpdateWithoutTbl_userInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    tbl_rotina_base?: tbl_rotina_baseUpdateOneWithoutTbl_rotinaNestedInput
  }

  export type tbl_rotinaUncheckedUpdateWithoutTbl_userInput = {
    id_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    id_rotina_base?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_rotinaUncheckedUpdateManyWithoutTbl_userInput = {
    id_base?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    cor?: StringFieldUpdateOperationsInput | string
    data_rotina?: DateTimeFieldUpdateOperationsInput | Date | string
    hora?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: StringFieldUpdateOperationsInput | string
    id_rotina_base?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}